PROOF METHODS FOR MODAL AND INTUITIONISTIC LOGICS

SYNTHESE LIBRARY

STUDIES IN EPISTEMOLOGY,
LOGIC, METHODOLOGY, AND PHILOSOPHY OF SCIENCE

Managing Editor:
JAAKKO HINTIKKA, Florida State University, Tallahassee

Editors:
DONALD DAVIDSON, University of California
GABRIEL NUCHELMANS, University of Leyden
WESLEY C. SALMON, University of Pittsburgh

VOLUME 169

MELVIN FITTING
Herbert H. Lehman College of the City University of New York

PROOF METHODS
FOR MODA L AND
INTUITIONISTIC LOGICS

.....

SPRINGER-SCIENCE+BUSINESS MEDIA, B.V .

''

Library of Congress Cataloging in Publication Data
Fitting, Melvin Chris.
Proof methods for modal and intuitionistic logics.
(Synthese library; v. 169)
Bibliography: p.
Includes index.
1. Proof theory. 2. Modality (Logic) 3. Intuitionistic
mathematics. 1. Title.
QA9.54.F57
1983
511.3
83-4409
ISBN 978-90-481-8381-4
ISBN 978-94-017-2794-5 (eBook)
DOI 10.1007/978-94-017-2794-5

Ali Rights Reserved
Copyright © 1983 by SpringerScience+BusinessMediaDordrecht
Originally pub1ished by D. Reide1 Pub1isbing Company, Dordrecbt, Holland in 1983
No part of the material protected by this copyright notice may be reproduced or
utilized in any form or by any means, electronic or mechanical,
including photocopying, recording or by any information storage and
retrieval system, without written permission from the copyright owner

TABLE OF CONTENTS

1

INTRODUCTION
CHAPTER ONE I BACKGROUND

1.
2.
3.
4.

Propositional Formulas
Models
A Unifying Notation
Classical Semantic Tableaus

11
14
22
29

CHAPTER TWO I ANALYTIC MODAL TABLEAUS AND
CONSISTENCY PROPERTIES

1.
2.
3.
4.
5.
6.

Tableau Rules for K, K4, T, S4, D and D4
Uniform Modal Notation
Correctness
A Note on Completeness Proofs
Consistency Properties forK, K4, T, S4, D and D4
Tableau Completeness

33
41
43
46
48
60

CHAPTER THREE I LOGICAL CONSEQUENCE, COMPACTNESS,
INTERPOLATION, AND OTHER TOPICS

1.
2.

3.

4.
5.
6.
7.
8.

9.
10.
11.
12.

Introduction
Logical Consequence
Strong Tableau Completeness
Compactness Theorems
The Deduction Theorem
Gentzen Systems
Symmetric Gentzen Systems
The Craig Interpolation Lemma
Other Interpolation Theorems
The Beth Definability Theorem
Further Consequences of Interpolation Theorems
Decidability

v

64
65
70
74
77
81
88

93
99
105
110
115

vi

TABLE OF CONTENTS
CHAPTER FOUR I AXIOM SYSTEMS AND NATURAL
DEDUCTION

1.
2.
3.
4.
5.
6.
7.
8.
9.
10.
11.
12.
13.
14.
15.
16.

Introduction
A Classical Propositional Axiom System
An Underlying Modal Logic
Results about the Logic U
The Logic K Axiomatized
Correctness and Completeness of the K Axiomatization
The Logics K4, T, S4, D and D4 Axiomatization
Finite Axiomatizability, Part I
Finite Axiomatizability, Part II
A Classical Natural Deduction System
Some Results about Natural Deduction
A Note on Modal Natural Deduction Rules
1-style Natural Deduction Rules
1-style Completeness and Correctness
A-style Natural Deduction Rules
A-style Completeness and Correctness

118
118
123
127
130
134
137
141
148
153
162
170
171
176
184
187

CHAPTER FIVE I NON-ANALYTIC LOGICS

1. Introduction
2. Synthetic KB, DB, B and S5 Tableaus
3. Semi-analytic KB, DB, B and S5 Tableaus
4. Consistency Properties for KB, DB, B and S5
5. Immediate Consequences
6. KB, DB, B and S5 Axiomatized
7. Natural Deduction for KB, DB, Band S5
8. Symmetric Gentzen Systems and Interpolation
9. Peculiar Non-peculiarities of S5
10. An Embedding of S5 into S4
11. Another S5 Tableau System
12. Finite Axiomatizability
13. S5 Interpolation Theorems
14. The Significance of G
15. Tableau Rules for G
16. G Tableau Correctness
17. G Consistency Properties
18. Consequences

191
193
201
205
209
210
213
214
221
222
225
229
234
241
245
249
251
255

TABLE OF CONTENTS

vii

CHAPTER SIX I NON-NORMAL LOGICS

1.
2.
3.
4.
5.
6.
7.
8.
9.
10.
11.
12.

Introduction
Augmented Kripke Models
Semantic Tableaus
Consistency Properties
Deduction Theorems
Interpolation Theorems
Decidability
Axiom Systems
Natural Deduction Systems
Regular and Quasi-regular Logics
Logics between Regular and Normal
The Intermediate Logics Axiomatized
13. The Logic U

262
265
270
281
286
292
299
300
306
313
316
321
329

CHAPTER SEVEN I QUANTIFIERS

1.
2.
3.
4.
5.
6.
7.
8.
9.
10.
11.
12.
13.
14.
15.

Introduction
First-order Languages
First-order Models
Interpretations
Uniform Notation
Tableau Rules
Tableau Correctness
Analytic Consistency Properties
Analytic Tableau Completeness
Natural Deduction and Axiom Systems
Compactness and Skolem-Lowenheim Theorems
Deduction Theorems
Interpolation Theorems
Dropping Monotonicity
Constant Domain Models

332
333
339
343
344
345
350
353
366
367
372
373
375
380
382

CHAPTER EIGHT I PREFIXED TABLEAU SYSTEMS

1.
2.
3.
4.
5.

Introduction
Prefixed Propositional Tableaus
Correctness
A Systematic Tableau Procedure
Konig's Lemma

386
388
398
401
404

viii

6.
7.
8.
9.
10.
11.
12.
13.
14.

TABLE OF CONTENTS

Completeness
Decidability
Logical Consequence
The Fundamental Theorem
Quantifiers -Constant Domains
Correctness and Completeness
Constant Domain Logics Axiomatically
Quantifiers- Varying Domains
Concluding Remarks

407
410
416
418
424
425
428
433
436

CHAPTER NINE / INTUITIONISTIC LOGIC

1.
2.
3.
4.
5.
6.
7.
8.
9.
10.
11.
12.
13.
14.
15.
16.
17.
18.
19.
20.

Introduction
Propositional Intuitionistc Models
Independence of the Intuitionistic Connectives
Uniform Notation
Tableau Systems
Local and Global Satisfiability
Intuitionistic Consistency Properties
Decidability
First-order Intuitionistic Models
Uniform Notation, again
First-order Tableau Systems
First-order Intuitionistic Consistency Properties
Consequences
An Axiom System
Axiomatic Correctness and Completeness
A Natural Deduction System
Direct Consequences
Completeness of the Natural Deduction System
Gentzen Systems and Interpolation
Concluding Comments

437
439
444
450
453
462
464
468
469
474
476
481
485
487
491
495
500
504
508
518

BIBLIOGRAPHY

526

INDEX

540

SPECIAL NOTATION

555



CHAPTER ONE
 MODELS

We present Kripke's model theory for (what are usually
called) normal propositional modal logics, in a

BACKGROUND

15

sufficiently general form to take us through Chapter Five,
after which various elaborations will be considered.
Again, the reader must be warned that notation varies
considerably in the literature.

(The sources of these

ideas are Kripke [1959] and [1963].)
Let G be a non-empty set.

The members of G are

whimsically referred to as possible worlds. We generally
use r, t::., n, etc. to denote members of G.

Also, let R

be some (binary) relation on G, called the accessibility
The intuitive idea is that if r R A, then .c. is

relation.

r (meaningful in r ; can be talked
about by the denizens of r ) . For reading convenience we
will. generally use r * to denote an arbitrary world
a world accessible from

accessible from r •

The pair <G, R> is called a frame.

Let <G, R> be a frame. Suppose ~ is a (binary)
relation between possible worlds and formulas (that is,
11- ~ G XIF).

The triple <G, R,

11-> is called a

(propositional) model, or a Kripke model, provided the
following conditions are met (we write r Af-X as short for
not- r It-X).

The conditions are: for every

r G: G and for

all formulas X and Y,
0)
1)

2)

3)
4)
5)

6)

r It- T and r 11- ..1.
r II- (X "'Y) ~ r 11-X and r n-Y
r 11-(X v Y) ~ r 11-X or r 11-Y

r 11-(X ::> Y) ~ r JA'-X or r 11-Y
r 11--X ~ r .11'-X
r II- OX
r It- ¢X

Remark:

use

~

( V A E G ) ( f' li A ===> A II-X)

~

( 3 A E G) ( r :1 A and A 11-X).

As we said earlier, we will systematically

r * for an arbitrary member of G such that r R r *.

CHAPTER ONE

16

With this understanding, the last two conditions may be
formulated

5')

r It- ox

4=====>

6 I)

r It-<> X

~

< v r*) r * it-X

( 3 r *) r * n-x

The intuition behind the definition above is now
common knowledge, at least in sotne possible worlds.

r 11-X

is to mean the formula X is true at (in) the world r .
is conveniently read,

"r

forces X".

It

Most of the

conditions are obvious, being just the usual truth table
ones.

r 11- oX says that X is necessarily true at

r and,

following Leibnitz, this ought to mean that X is true in
all possible worlds, but of course a world inaccessible
from

r is irrelevant, hence the restriction to those

for which r R.c..

Similarly for

A

r If- <>X.

Now, a formula X is called valid in a model <G, R, II->
if, for every world

r e: G we have r 11-X.

Also X is called

valid in a collectio~ of models, C, or C-valid, if X is
valid in every model <«i, R, n-> in c.
Let <«i,R> be a frame.

An

interpreta~io~

in <G,R> is

simply a mapping
v :G X ./A.------> {T ,F}

where A is the set of propositional variables, and T and F
are two arbitrary objects.

v( r ,A) is the truth value of

the variable A at the world

r : true if v( r ,A) = T, false

if v( r ,A) = F.
Every model determines an interpretation in the
obvious way.

Thus, if <«i,R, 11-> is a model, just define a

map v by setting, for variables A and

r E. G,

17

BACKGROUND

v( r ,A)

=

T
{F

if

r II-A

if

r .If-A

On the other hand, every interpretation determines a unique
model too.

Thus if v is an interpretation in the frame

<G,R>, there is a unique model <G,R, 11-> such that
v( r ,A)

l

-- rTF

if

r 11-A

if

Both existence and uniqueness of the appropriate relation

lr may be established inductively, using formula degree.
We leave the argument to the reader.
Because of this we need only specify a frame and an
interpretation to specify a model, something which will be
of considerable advantage to us as we proceed.
Generally, rather than all models, we will be
interested only in those in which R meets certain special
conditions, for example, transitivity or reflexivity.
will call a frame

<G,R> or a model

We

<G,R, u-> transitive if

R is transitive, and similarly for various other
conditions.

Now, there are standard names corresponding to

certain natural conditions on the models, for example, S4
models are those which are transitive and reflexive (in
which the accessibility relation R is transitive and
reflexive).

Since these conditions will concern us a great

deal as we go on, we summarize them in the following
charts.

18

CHAPTER ONE

THE BASIC CONDITIONS
---NAME OF MODELS
--

CONDITIONS

K

no conditions

T (or M)

reflexivity

K4

transitivity

KB
S4

symmetry
reflexivity and

B

reflexivity and

transitivity
symmetry
S5

reflexivity,
symmetry and
transitivity

We also touch on various deontic models. The key
special condition that these models meet might be termed
idealization: for any r there is some b. such that r R A •
In deontic models r R /::::,. can be read: world b. is a "better"
version of world r.

With this reading, the idealization

condition is a natural one; if one couldn't imagine how
things could be better, how would one know what ought to be
done?

BACKGROUND

19

THE DEONTIC MODELS
NAME OF MODELS
--

CONDITIONS
idealization

D4

idealization and
transitivity

DB

idealization and
symmetry

D

Remark:

One might also define D5 models to be those

meeting the conditions of idealization, symmetry and
transitivity. But it is easy to see that these are just
the S5 models again.
Finally, we will also be considering a rather unusual
logic called G (after G6del) or sometimes called L (after
L6b) which has arisen in the study of provability in Peano
arithmetic. There are two rather different classes of
models which can be called G-models. In t~e chart below, a
relation B is irreflexive if we never have r B r . Likewise
there are no infinite m chains if we never have

rmrmrm ••••
1

2

3

THE G MODELS
NAME OF MODEL

CONDITIONS

G (version 1)

finite,
transitive and
irreflexive

G (version 2)

transitive and
no infinite B-chains.

20

CHAPTER ONE

Examples:

We give a few simple examples that incidentally

show that several of the logics we are concerned with are
quite distinct.

The examples are standard and the formulas

used will recur several times in this book.
I.

A K-model in which neither DP=>P nor OP :> ODP

is valid.
Let G = {r,::.,.O.} and let rRA and .68Sl.

<G,B> is a K-frame.

Trivially

Consider the following valuation:

v( A ,P) = T, and in all other cases the valuation value is
F.

This determines a K-model <G,B, It->.
In <G, B, It->,

A lt-P, and

c. is the only world in the

relation R to r , hence r It- o P.
definition,

r .J!'-P.

Hence

On the other hand, by

r .J!'- DP:JP so OP::>P is not

K-valid.
If
A Rn

r If- o a P, since r R A, then

A If- o P.

we would have .n. if-P, but we do not.

Then since

Hence

r ..11'- o o P, though as we showed above, r 1- o P.

Thus

r..ll'- DP :::> ODP, so DP:J DOP is not K-valid.

It is easy to show OP::>P is T-valid.

Hence K-AT.

Likewise i t is easy to show 0 P :> Do P is K4-valid.
K -A K4.

Hence

We leave it to the reader to show that T, K4 and

S4 are all distinct.

The formulas just used are enough to

consider.
II.

An S4-model in which P :J D<>P is not valid.

Let G = { r , A} and r R A,
gives us an S4-frame <G,B>.

r B r and A R A.

Use the valuation v such that

v( r ,P) = T and all other cases map to F.
check that

r lt-P but

This

It is simple to

r ..11'- 0 <> P, hence r Jr-P :::> o <> P.

On the other hand, P :::> o <> P is valid in all KB, B and

S5 models, hence these are distinct from S4.

The reader

can easily show KB, B and S5 are distinct too, using the

21

BACKGROUND

formulas considered above.
III.

A K-model in which OP::::><>P is not valid.

Simply use a one-world model in which the B-relation never
holds. On the other hand, o P ::::> <> P is valid in all the
deontic models.

We leave it to the reader to distinguish

between these, however.
A word or two about the names of the logics we
will be working with for the next few chapters. The naming
Remarks:

of modal logics bears a strong resemblance to the naming of
babies: everybody has his own system. If a very great
number of logics is to be treated, some uniformity must be
imposed; for instance see Segerberg [1971]. Since we are
dealing with a relatively small number of well-established
logics, we have used names standard in the literature (but
see Chapter Six). Let us take a moment to sketch where
these names came from.
In Lewis and Langford [1932], two logics (called S1
and S2) are axiomatically developed in detail, and three
others are outlined (called S3, S4 and S5).

These last

three arose by incorporating certain axioms of Becker
[1930] into S1 and S2.

We deal with S4 and S5 in the next

few chapters (and S2 and S3 in Chapter Six).
The Lewis and Langford style of axiomatization is
quite different than the style followed in this work. We
follow the tradition begun in G6del [1933], where an
elegant axiomatization of S4 was presented. Feys [1937]
considered G6del's system, without one of his axioms,
calling the resulting logic t; it later became known as T.
Von Wright [1951] considered a logic he called M which
Sobocinski [1953] proved to be equivalent to Feys T.

Both

22

CHAPTER ONE

M and T are in common use as names for this logic; we have
settled on T.
In Kripke [1963] essentially the model theory of this
section was presented.

It was observed that there was a

weakest logic that could be treated using such models, and
this became known as K, after Kripke.

K4 is,

axiomatically, simply the logic K together with the most
characteristic of the S4 axioms.

Both K and K4 got their

names in Segerberg [1971].
B derives its name from the founder of Intuitionism,
Brouwer, by a rather tortuous route.

Axiomatically it is

the logic T together with an axiom schema proposed in
Becker [1930], there called the Brouwersche Axiom, because
of certain resemblances to a fundamental principle of
Intuitionism. The system B itself first appeared in Kripke
[1963].

Since Kripke insisted that all his models be

reflexive, there is a certain difficulty in finding a name
for symmetry-without-reflexiv ity; Kripke having already
designated symmetry-plus-reflexivity by B.

We have chosen

to follow the lead of Segerberg [1971] in, generally, using
Bas part of a name to denote only symmetry, but with the
single exception of abbreviating what would otherwise
naturally be KTB by Kripke's B.
D, of course, stands for deontic, while G stands for
G6del (see Chapter Five #12).
#3

A UNIFYING NOTATION

In Smullyan [1963] a unifying ~, p, ~, S notation was
introduced for Classical logic. It was extensively
utilized in Smullyan [1968].

It makes it possible to

BACKGROUND

23

shorten many proofs about systems of Classical logic by
putting together into one case what otherwise would be
merely similar arguments.

It also suggests the possibility

of a more abstract treatment of the subject, a possibility
that will be considered in a later work.
Here we sketch the system for (propositional)
Classical logic, and extend it to handle the modal
operators o and

~

as well.

There are two versions, one

using signed formulas, one using unsigned formulas. We
present both, as both have their charms. But we confess a
preference for the signed version.

We note that when we

get to Intuitionistic logic, only the signed version will
be available, for reasons that will be considered then.
Signed formulas:
symbols.
formula.

Let "T" and "F" be two new formal

By a signed formula we mean TX or FX where X is a
By the degree of a signed formula TX or FX, we

mean the degree of X in the usual sense.
In a model <G, R, if->, we say r 11-TX if

r if-FX i f r _%-X.
FX behaves like

r II-X, and

Thus, in effect, TX behaves like X, while

-x.

Now, with these conventions, the definition of If- from
#2 easily gives us equivalent conditions for signed
formulas.

For example,

r if-T(X A Y)

r if-F(X"' Y)

~

r IHX AY)
r if-X and

~

r it-TX

~

and

r if-Y
r 11-TY

~

r.II'-(XAY)
r ..w-x or

r .11'-Y

~

r lrFX or

r 11-FY

~

24

CHAPTER ONE

and similarly for each of conditions 1) - 6) in #2. We
thus get 12 conditions involving signed formulas. It is in
collapsing these to a more manageable number that uniform
notation plays its first useful role.
By an ~ -formula we mean any formula of one of the
forms T(XAY), F(XvY), F(X:::JY) or F-X. For each
<><

-formula, two components, ex

following table:

1

and

o<.

0(

T(XI\Y)

TX

TY

F(XvY)

FX

FY

F(X :::JY)

TX

FY

F~x

TX

TX

<><

2

are defined, in the

0(

2

1

It is easy, but important, to check that for any <><-formula
and any world r, r 11- o< iff r It- o< and r It- o< •
2
1
is, all the o< -formulas behave conjunctively.
The (?-formulas, and their components,
are defined in the following table:
{3

{31

{32

T(X v Y)

TX

TY

F(XA Y)

FX

FY

T(X;,Y)

FX

TY

T~X

FX

FX

(3

1

and

That

R

1 2

,

BACKGROUND

25

All (3 -formulas act disjunctively, in that r 11- (3

iff

r 11- (3 1 or r If- f3 2 •
Now we extend the system to handle the modal
operators.

The v -formulas, the lT -formulas, and their

components, v

and 1T

0

0

are given in the following tables:
1T

TTO

TDX

TX

T <>X

TX

F<>X

FX

FOX

FX

The reader should check that:

r If- v

~

< '<I r *) r * If- -v

and

r u- rr ~

<3

r *) r * If- rr

0
0

This completes the (propositional) uniform system of
notation.

As a matter of fact, we can now alternatively

define the If- relation for signed formulas by the
conditions:

for a frame <G,R> and any world

O)

r it-TT

0

for each formula X,

1)

and

r 11-F ..L

r ,jf-FX

r lrTX

~

1)

r If- <><

~

r If- 01

2)

r If- ~

~

r If- ~

3)

r 11- v

~

< '<~

r *) r * If- v

4)

.r If- lT

{:::=:::>

<3

r *) r *If- n

Remark:

r E.G,

1
1

and

r 11- 0(

or

r 11- (J 2

2

0
0

One can show, by induction on the degree of

formulas, that it is enough to state condition O') only for

26

CHAPTER ONE

atomic formulas X.
Conjugation:

By the conjugate of a signed formula is meant
the result of changing T to F or F to T. If Z is a signed
formula, the conjugate of Z is denoted Z.

Thus T(XA Y) =

F(XAY).
Note that condition 0 1 ) might be stated equivalently
as
for each signed formula Z, exactly one of

0 11 )

r JrZ

and r lrZ.
Some properties of conjugation:

The following simple

observations will save us much work in the future.
I.

for any signed formula Z,

zi z
and

z = z.
II.

~

The conjugate of any

is some

<><.

The conjugate of any v is some

1T.

{3

The conjugate of any
III.

.

The conjugate of any 0( is some

(0()

=

1
(3 1 =

(-)

<v-)
(TF)

0

=

o<•

1

T,·
v

(-.;;:-)

(-)

iT

2

is some -v.

= 0(2

fS 2 = ~2

0

= 1To
Using the properties of conjugation above, let us
0

argue that in our direct characterization of II- for signed
formulas, condition 2) follows from condition 1). Very
simply' suppose

r If- {3.

Then by 0 I I ) ' r J(-p.

some <>< , so by condition 1), since r ~7,

r )Y-(7") 2 •

That is,

But T

r JI'-(IS)

1

or

r ~T, or r Jl'- rs 2 , hence by O")

is

BACKGROUND

again,

r II- f3

reverses.

1

or r 11- f3 •
2

27

And the argument easily

The reader may verify that condition 2) likewise
implies condition 1), and also that one of conditions 3)
and 4) is redundant.

Also the reader should show that it

is enough to give condition 0 1 1 ) for atomic signed formulas
only.

Conjugation helps here too.
We note that our classification of T~X and F ...... X, as

f3 and

respectively, is somewhat arbitrary.

o<

have been switched around, or each taken as both
formulas.

They could
o<

and f3

The point is, some classification must be chosen

so that the conjugation properties above hold.

This would

not be the case if, for example, both T-X and F-X were
considered to be only o< formulas.

The particular

classification chosen will be discussed again when we come
to Intuitionistic logic in Chapter Nine.
Unsigned formulas:

Since TX "behaves like" X and FX

"behaves like"

the signs may be dispensed with.

~x,

so, appropriate tables are:
0(

0(

0(

2

(X"' Y)

X

y

-(X v Y)

-x

...... y

-{X:>Y)

X

-Y

--X

X

X

If

28

CHAPTER ONE

f3

F?1

{32

X

y

......- (XA Y)

~x

__.y

(X ::::>Y)

~x

y

(X VY)

TT

n

X

¢X

X

-x

~ax

~x

-v

v

ox
~<>X

0

0

Using these conventions, the conditions on lr are also
easily stated:

for any frame <G, B> and for any

r

0)

r If- T

0')

for each formula X,

and

r lr- x

1)

¢:::=::>

..11'-

..L

r ..11'-X

~

r If- o<

2)

r If- o<
r If- fi

«====;.

r If- f3

3)

r lr 11

~

< '<I r *) r* lr v

4)

r e G,

1
1

and

rlt-0( 2

or

r If- f.J

2

0

r If- iT ¢=:::> < 3 r *> r*lf-rr.
0
And, as might be expected, one of 1) or 2) and one of 3) or
4) is redundant. The difficulty now is that no simple
notion of conjugation is available, so to show the
redundancy of one of 1) or 2), say, a several part argument
must be given.

It is mostly for the convenience of

conjugation that we generally work with signed formulas
now.

On the other hand, the unsigned version will make it

somewhat easier for us to handle axiom systems.

BACKGROUND

#4

29

CLASSICAL SEMANTIC TABLEAUS

In Smullyan [1968] a tree proof procedure for Classical
logic was extensively developed.

It has its origins in

Gentzen [1935] and traces its descent through Hintikka
[1955], Beth [1959] and Smullyan [1966].

It has the double

virtue of being easy to prove things with, and perspicuous
to prove things about.

In this section we briefly recall

the features of the propositional part of it, then in the
next chapter we adapt it to certain modal logics.
Proofs (or derivations) are written in tree form,
branching downward.
signed formula.

At each node of the tree occurs a

An attempted proof of X begins with the

1-branch, 1-node tree at whose only node is FX.

Then the

tree is enlarged using certain extension rules.

For

example: if T(XA Y) occurs on a branch, TX and TY may be
added to the end of the branch.

Another example: if

T(X v Y) occurs on a branch, the end of the branch may be
split into a left and a right continuation, and TX added to
the end of the left fork, and TY to the end of the right.
The full set of branch extension rules is, schematically:
T/\:

T(XA Y)

F(XAY)

TX

FX

FY

TY

Tv:

T(X v Y)
TX

TY

F v:

F(X v Y)
FX
FY

CHAPTER ONE

30

F-:

T~X

T~:

F-X
TX

FX
T(X ::::> Y)

T=>:

FX

F ::::>:

F(X :::>Y)

TY

TX
FY

Next, a branch is called closed if:
1)

It contains TA and FA for some formula A·

2)

It contains T.L;

3)

It contains FT.

'

(A branch that is not closed is open.)
A tree (or tableau) is called closed if each branch of
it is closed.
A closed tableau for FX (that is, starting with FX at
the origin) is, by definition, a proof of X.
provable, we may indicate this by writing

If X is

rX (or

~

PC

X to

emphasize that we are using the Classical propositional
calculus).
Example:

The following is a tableau proof of

((XAY)::> .L)::>(-Xv ~Y).

The numbers are for explanatory purposes, and are not part
of the proof.

31

BACKGROUND

(1)

F((XAY):::>..L.):::>(~Xv-Y)

(2) T(X "'Y) ::::> .L
(3)

F(~ X v

(4)

F-X

(5)

F-Y

-Y)

(6) TX
(7) TY

~
~

(9)T..L

(8)F(XAY)

(11) FY

(10) FX
Explanation:
proved.

Line (1) is FZ, where Z is the formula to be

(2) and (3) are from (1) by F=>.

from (3) by F v.
F-.

(6) is from (4), and (7) is from (5) by

(8) and (9) are from (2) by T;:,.

from (8) by F ~.

(4) and (5) are

(10) and (11) are

The leftmost branch is closed as it has

TX and FX on it (lines 6 and 10).

The next-to-left-most

branch is closed as it has TY and FY on it (lines 7 and
11). The rightmost branch is closed as i t has T .L on it.
Thus the tableau is closed, and the formula is proved.
The reader should understand that the tableau rules
are permissive, not manditory.
not what one must do.

They say what one may do,

Thus there are many other tableau

proofs for the above formula, in addition to the one we
gave.

Tableaus are non-deterministic.
On the other hand, many tableau completeness proofs

involve the creation of a systematic tableau procedure,

32

CHAPTER ONE

which must produce a proof if anything will; that is, a
deterministic version of the tableau rules is introduced.
See Smullyan [1968] pp 18-19 for a description of two such
procedures suitable for the propositional system above.
Important note:

There are eight branch extension rules.

But using uniform notation, they may be summarized
succinctly as:
0(

0<

1

(31

(32

cx2

The reader should check that this summarization really
works.

We will make extensive use of it, as it will allow

great shortening of proofs about the tableau system.
In Smullyan [1968] there are several proofs of the
completeness and correctness of the proQf procedure above,
with respect to the model theoretic notion of truth tables
(or Boolean valuations). We do not repeat them here.
(Proofs may be extracted from those in this book, by
ignoring the modal features.)
We also note that, if the reader wishes, unsigned
formulas may be used. Then, to prove X, one begins with

--x, and proceeds using the rules:
ex

(3

~1

{12

where now, ex and r; are used in their unsigned versions.
A branch is now called closed if it contains A and --A for
some formula A, if it contains ..L , or if it contains

- T.

CHAPTER TWO
ANALYTIC MODAL TABLEAUS AND
CONSISTENCY PROPERTIES

#1

TABLEAU RULES FOR K, K4, T, S4, D AND D4

The ideas underlying the tableau rules of Chapter One #4
are simple. We know that if r is a possible world in a
Kripke model, and i f r 11- o< then

r 11- o: and r 111

C(

2

•

Likewise i f r II- f3 then r II- f3 or r II- f3 • The tableau
2
1
rules obviously reflect these facts about models. (Indeed,
this will be the basis of a correctness proof in #3.)
Now the

0(

and f3

rules, in a sense, concern

themselves with only one world at a time.

But in a Kripke

model, if r 11-0X, then for some r*, generaly different
from r , r* 11-X. At some point in an argument we must
shift our attention from world r to world r*, and the
question arises of how to reflect this by tableau rules.
The most immediate device that suggests itself is to
allow the creation of alternate tableaus during the course
of an argument, representing, in a natural sense, alternate
worlds.

For example, see Kripke [1963].

The difficulty is

that in practice it gets rather messy keeping track of the
alternatives in a tableau proof of even a moderately
complex formula.
We have adopted two different solutions to this
practical problem. The more general of the two will be
properly introduced in Chapter Eight, but the idea is that
instead of creating actual alternate tableaus we, in
effect, create names for them, and manipulate the names
33

CHAPTER TWO

34

instead.

This gives proof systems in which a single

tableau is sufficient in a tableau proof.
For certain logics, however, actually introducing
alternate tableaus (instead of names for them) will not
loose us in a forest of trees.

For the most part, these

are the modal logics that do not involve symmetry as a
condition on their models. For such logics, having "jumped
from one world to another" we need never go back again.
Once we have left a world, we are through with it. This
suggests that in a tableau proof systern for these logics,
if we create an alternate tableau at some point in an
argument, we may be able to forget about the earlier
tableau to which it is an alternate. Thus we may only need
to consider a single tableau at any given time.
If this is so, then a further practical simplification
suggests itself. Rather than actually creating alternate
tableaus, we could simply "up-date" the original one to
accurately reflect conditions in each "current" world as we
pass through it.
What might these "up-dating" rules be like? Say we
encounter TOX on a branch of a tableau. Intuitively the
branch is a partial description of a possible world r , so
we have r 11- oX. But then there should be an alternate
r * such that

r * it- X.

Suppose we "up-date" the
branch to reflect a jump from world r to world r*. Then

world

we should add TX to the end of the branch, of course. But
the question is, in general what other information may we
take with us in such a jump?

One expects different answers

for different logics.
in

In the broadest case, that of K, all we can be sure of
r * is that r * 11-Z for every Z such that r II- o Z, and

ANALYTICAL MODAL TABLEAUS AND CONSISTENCY PROPERTIES

r *)fZ for any Z such that r Jl'- ~ Z.

Thus the following
tableau rule is suggested: if T <>X is on a branch, we may
put down TX (thus jumping from r to r *) but we must first
replace any formulas of the form T 0 Z on the branch by
occurrances of TZ, and likewise any occurrances ofF<> Z by
This, in fact,
FZ, and delete all other signed formulas.
will be a K-tableau rule below. Now for S4, say, in
to r *, different information may be
carried along: i f r 11- o Z then also r * 11- o Z (this follows
jumping from r

easily from the transitivity of R.) So our "up-dating"
rules will be rather different for S4.
An investigation· of the various logics in the title of
this section suggests there are just three different
"up-dating" or Branch Modification Rules we need to
consider.

These are as follows.

Branch Modification Rule 1:

Replace T D Z by TZ, replace

F <> Z by FZ, and delete all other signed formulas.
Branch Modification Rule 2:

Delete all signed formulas

except those of the forms T D Z and F <> Z.
Branch Modification Rule 1:

Delete all signed formulas

except those of the forms T D Z and F 0 Z, and if T D Z is
present also add TZ, and if F 0 Z is present also add FZ.
Now we give the tableau rules for the logics we are
considering.
For each logic we assume the underlying Classical
apparatus from Chapter One #4. The special modal rules are
as follows.

35

36

CHAPTER TWO

Rules for!_:

If T<>X occurs on a branch, TX may be added

to the end of the branch (likewise if F CJX occurs then FX
may be added) provided Branch Modification Rule 1 is
applied to the branch before the formula is added
Or, more briefly,

T<>X
TX

and

FOX
FX

but Branch Modification Rule 1 first.
Rules for K4:

TO X

FDX
FX

and

TX

but Branch Modification Rule 3 first.
Rules for T:
1)

TClX
TX

and

F<>X
FX

2)

T <>X
TX

and

FOX
FX

but Branch Modification Rule 1 first.
Rules for S4:
1)

TDX
TX

and

F<>X
FX

ANALYTICAL MODAL TABLEAUS AND CONSISTENCY PROPERTIES

T¢X

2)

and

FOX
FX

TX

but Branch Modification Rule 2 first.
Rules for D:
-----1)

At any point apply Branch Modification Rule 1.

2)

T¢X

and

TX

FOX
FX

but Branch Modification Rule 1 first.
Rules for 04:
1)

At any point apply Branch Modification Rule 3.

2)

T¢X
TX

and

Fox

FX

but Branch Modification Rule 3 first.
Remarks:

Because of the way tableaus are written, it may

happen that a branch is to be modified and part of it is
common to several other branches Which are not to be
modified.

In this case one can add to the ends of the

branches that are not to be altered fresh occurrences of
the formulas that will be crossed out, then the Branch
Modification Rule can be applied to the desired branch
without difficulty.

That is, a Repetition Rule takes care

37

38

CHAPTER TWO

of the problem.

We will tacitly assume such a rule in all

our tableau systems.
Note that, by design, every application of one of the
tableau rules above can only introduce to a branch
subformulas of those formulas already present on the
branch.
analytic.

We call tableau systems with rules of this sort
Non-analytic tableau systems will be considered

in Chapter Five.
We give two examples of tableau proofs using the above
rules.
Example:

The following is a tableau proof, using the

K-rules, of (D X 1\ DY) ::> o (X/\ Y).
We begin with several

<><

rule applications, after

which we have
( 1)

F(DXA DY) ::>D(X/\Y)

(2)

T(OX/\DY)

(3)

FD(X/\Y)

(4)

T ox

(5)

TOY

Explanation:

(1) is, of course, how our proof must start.

(2) and (3) are from (1) by rule o<.
are from (2) by rule

o<..

Likewise (4) and (5)

Note that there is only one

branch so the remarks above about occurrences common to
several branches do not apply.
Now F D(X 1\ Y) occurs, so by the rules for K we may add
F(X/\ Y) after first applying Branch Modification Rule 1.

ANALYTICAL MODAL TABLEAUS AND CONSISTENCY PROPERTIES

For convenience, we denote the deletion of a formula by
crossing it out.
(1)

F(DX 11 t:IY) :::;> D(X>'<Y)

(2)

l:(!:lX" t:JY)

(3)

F Q (X,•,Y)

(4)

~

(5)

.:t-0--¥-

(6)

TX

(7)

TY

(8)

F(X 1\ Y)

Here (1), (2) and (3) have been deleted, (4) and (5)
replaced by (6) and (7), then (8) added.
~

Now (8) is a

-formula and one more step yields a closed tableau.

Remark:

As a practical matter, instead of crossing out

T 0 X and adding TX, one may wish to simply cross out the o
symbol, getting T ¢X.

This is a matter of taste and

tableau complexity, of course.
Example:

Here is a proof, using the S4 rules, of

D X "::l o (oX v Y).

It begins

(1)

FOX::>O(OXYY)

(2)

TDX

(3)

FO(oXvY)

(2) and (3) are from (1) by the «-rule.

Next we have

39

40

CHAPTER TWO

(1)

FOX?0(9XoY)

(2)

TDX

(3)

FO(DX'o'Y)

(4)

F(OXvY)

Here (4) is from (3) by an S4-rule; (1) and (3) are crossed
out but (2) is not, in accordance with Branch Modification
Rule 2.

Now an ~ -rule application to (4) produces a

closed tableau.
Notes:

A closed branch must be closed by virtue of the

formulas that are "actually there."

Crossed out formulas

don't count.
If the reader chooses to work with unsigned formulas,
the modifications are obvious.

For example, the S4 rules

become
1)

0 X

and

-x

X

2)

<>X

X

~ox

and

~ox

-x

but Branch Modification Rule 2 first. And this rule now
should read: Delete all formulas except those of the forms

o Z and - <> Z.
Unsigned versions for the other logics are left to the
reader.
Sources:

The tableau system for S4 above (signed version)

first appeared, in its present form, in Fitting [1969], and

ANALYTICAL MODAL TABLEAUS AND CONSISTENCY PROPERTIES

those forT and Kin Fitting [1973].

But, there is a

simple connection between tableau systems and Gentzen
systems: use TX instead of putting X on the left of an
arrow; use FX instead of putting X on the right of an
arrow; use sets of formulas instead of sequences of
formulas; and write trees up-side-down to the way customary
with Gentzen systems.

With this in mind, the S4 and T

tableau systems above may be traced back further to Gentzen
systems of Onishi and Matsumoto [1957, 1959] and of Kanger
[1957].
#2

UNIFORM MODAL NOTATION

Using the

o<,

(3, -v , TT

classification from Chapter One

#3, we give the tableau rules of the last section in a more

schematic form.

This will make possible shorter proofs
We begin with S4 to establish

about these tableau systems.

notational style, then we briefly present all the systems
in chart form.
Two of the rules for S4 do not involve branch
These are:

modification.

TDX

and

TX

F<>X
FX

and these may be summarized as
'\I

rule:

'\I

-v

0

41

42

CHAPTER TWO

The other two S4 rules are
T <>X

FOX

and

TX

FX

but Branch Modification Rule 2 first.

Using uniform

notation these become simply
Tr

rule:

Tr

rro
but use Branch Modification Rule 2 first.
Now, Branch Modification Rule 2 reads:

delete all

signed formulas except those of the forms To Z and F <> Z.
Suppose, for a set S of signed formulas, we define
S/1 = { v

v E S}.

Then Branch Modification Rule 2 becomes: if S is the set of
signed formulas on the branch, replace it by S#.

So, a

rather convenient way of schematizing the rr rule for S4
is:
TT

rule:

s, Tr
S/1,

rr

0

This, then, is the pattern we will follow for all the
logics.

The definition of S#, which embodies the branch

modification procedure, varies from logic to logic.
does the form of v

and

TT

rules.

The chart below

So too

ANALYTICAL MODAL TABLEAUS AND CONSISTENCY PROPERTIES

43

summarizes the tableau apparatus for the logics we are
considering (the ~ and p rules are common to all, and are
not listed) •
LOGIC

DEFINITION OF S#

K

{ v I v € S}
0

v RULE

none

S, 1T

S#,

{ -v I v E S} v
0
{ v I v £ S}

none

T

{ v I v E S}

v

S4

{ v I II E S}

K4

1T RULE

0

iT

S, rr
Sll,

1T

S,

TT

D4

{v

I 1.1 E S}

s

S,

Tr

Sil

S#,

IT

{ v I v e: S} v

s

s,

rr

{v I

S#

S#, rr

0

0

II e: S}

0

S, 1T

Sll, 1T
D

0

0

0

0

If the reader wishes to use unsigned formulas, he may
simply use the above chart, but interpret the v and

rr

notation in the unsigned sense.
#3 CORRECTNESS
Let L be one of K, K4, T, S4, D or D4.

We show that if a

44

CHAPTER TWO

formula X is provable using the L tableau system of #1,2,
then X is valid in all the L models of Chapter One #2. The
idea is, simply, to formalize the informal discussion from
#1.

Definition:

If r is a world of some Kripke model, and S

is a set of signed or unsigned formulas, we write

r \f-S to

mean r lf-Z for each Z E S.
Lemma 3.1:

Suppose <G,R, ~>is a Kripke model, Sis a set
of signed (or unsigned) formulas, rEG, and r * is any
world accessible from r .
1)

r lf-S ~ r * \H v I v e: s} .

2)

If R is transitive,

3)

r if-S ===9 r * IH v
If R is reflexive,

r If- v ~ r 11- v
Proof:

We show only 2).

0

ve: S}.

0

Suppose R is transitive.

Let

A

be any world in G such that r *11!! t::.. Since r R r * and R is
transitive, r RA. Then, if r lf-V it follows that

• That is, if r lf-V, then for every A such that
0
r *11!! 4, 4 If- -v , and hence r * if- -v • From this, 2) is

.6 If- -v

immediate.

0

Definition:

Call a set S of signed (or unsigned) formulas
L-satisfiable if there is some L-model <G, R, if-> and some
world r E G such that r lf-S. Also, call a branch of a
tableau L-satisfiable if the set of formulas on it is
L-satisfiable , and call a tableau L-satisfiable if some
branch is L-satisfiable .

ANALYTICAL MODAL TABLEAUS AND CONSISTENCY PROPERTIES

Key Lemma 3.2:

45

Let L be one of K, K4, T, S4, D or D4.

Suppose T is a tableau that is L-satisfiable.

Let T 1 be

the tableau that results from a single L-tableau rule being
applied toT.
Proof:

Then T 1 is also L-satisfiable.

Each choice of L requires a slightly different

argument.

We consider the case in which L is K, and leave

the others to the reader.
Some branch of T is K-satisfiable.

If a branch other

than the one on which we apply the tableau rule is
K-satisfiable, that branch is still present, unaltered, in
T 1 , and is still K-satisfiable, hence T 1 is
K-satisfiable.
Now suppose

e is a K-satisfiable branch of T, and the

e.

tableau rule is applied on

Then we have several cases

depending on which rule is applied.

Say it is the p -rule.

e consists of S, (:3 (where S is a set of
formulas, of course) and, say, e is replaced by e and
e where e consists of S, p ' f3 and e consists of

That is, say

1

I I

I

I I

1

S, f3, fJ • Now e is K-satisfiable so in some K-model
2
<G, B, U-> there is a world r such that r 11-S and

r It- (3 • Then r u- f3, or r II- p2' hence either
is K-satisfiable (at the world r again).

e

I

The ~ rule is handled in much the same way.

e

or

We leave

out the argument and turn instead to the modal case.
suppose

e

1 ,

I I

Again

e consists of S, rr and, say, e is replaced by

consisting of Sll, TT

0

where Sll = {v

,

0

Iv

E S}.

Since

6 is K-satisfiable, there is a K-model <G,B, II-> and a

r e G such that r lf-S and r 11- lT. But i f r 11- rr,
then for some r *, r *I~ iT • And i f r 11-S, by Lemma 3.1,
world

r * It-S II.

Hence

0

e I is K-satisfiable at r *' so e I is

46

CHAPTER TWO

again K-satisfiable.
Obvious Remark:

A closed L-tableau can not be

L-satisfiable.
Correctness Theorem 3.3:

Let L be one of K, K4, T, S4, D

or D4, and let X be a formula.

If X has an L-tableau

proof, then X is valid in all L-models.
Proof:

If X has an L-tableau proof, then by starting with

the 1-branch, 1-node tableau, whose only entry is FX, and
applying L-tableau rules, we can arrive at a closed
L-tableau.

If {FX} were L-satisfiable, we would be

starting with an L-satisfiable tableau, hence by the Key
Lemma, every L-tableau we can get will also be
L-satisfiable.

But a closed tableau is not L-satisfiable,

hence {FX} must not have been L-satisfiable.

That is,

there are no L-model s <G, B, II-> and no worlds

r E G at which

r ~x. and this, in a negative sort of way, asserts that X
is L-valid.
#4

A NOTE ON COMPLETENESS PROOFS

One may think of a tableau for FX as an "exploration" of a
hypothetical counter-model to X: if one had FX, what else
would one have.

A closed tableau for FX is the

verification that there are no counter-models to X, hence X
must be valid.

This is the idea behind the correctness

proof in the previous section.
Now, the customary way of showing completeness for a
tableau proof system involves the invention of a systematic

ANALYTICAL MODAL TABLEAUS AND CONSISTENCY PROPERTIES

procedure for constructing tableaus, one that "eventually
does everything that can be done."

Then one shows that a

failed systematic attempt to create a closed tableau for FX
will contain enough information to construct a
counter-model to X, hence X is not valid.

For example, see

Smullyan [1968] pp 25-28 for the Classical propositional
case, and Fitting [1969] pp 31-35 for the Intuitionistic
propositional case.

Now, one can do this for the tableau

systems of #1 as well; it is satisfying and natural, but it
is rather complicated to keep track of things.

The

complications arise because of the Branch Modification
Rules.

Say we have an S4 tableau with T .0 X and T <> Y on a

branch.

Using the rr -rule on either will cause the

deletion of the other, hence there will be two quite
different tableau continuations of the original tableau.
And each may give rise to others yet.

A systematic tableau

procedure would have to keep track of all of them.
Consequently this is an approach that will serve us better
when we come to prefixed formulas and tableaus in Chapter
Eight, because the prefixes will do much of the
"bookkeeping" for us.
A Lindenbaum type construction is rather standard in
working with axiom systems: one extends a consistent set
(suitably defined) to a maximal consistent one, and uses it
to construct a model.

This can be used with tableau

systems too if one makes certain adjustments in technique,
and it is much simpler in its details, so it is the
approach we adopt here.
But, certain key portions of such a proof tend to turn
up in many places: in showing compactness, in proving the
Craig Interpolation Lemma, etc.

Consequently, we adopt a

47

48

CHAPTER TWO

somewhat more abstract approach. We define Consistency
Properties for the logics we are considering (in the next
section) and prove a Model Existence Theorem for each of
them.

It will be seen that the proof embodies the essence

of the Lindenbaum construction, indeed, a special case is
exactly the Lindenbaum version, but many other results
besides completeness are easy corollaries as well.
#5

CONSISTENCY PROPERTIES FOR K, K4, T, S4, D AND D4

Let C be a collection of sets of signed formulas.

C is a
(propositional) Classical consistency property if it meets

the following conditions:
for each S E. C ,
0)

S contains no atomic signed formula and its

conjugate; S does not contain either F T or T .1.. ,
1)

0\

2)

f3

ES~SV{<X

1'

0(

}EC

2
E. S ==:;> S u { f3 } e C or
1

sv{p }t:C.
2

Remarks:

If S E C, we will usually refer to S as

C-consistent and if S t C, as C-inconsistent. Also the
definition above was given for signed formulas; there is a
similar one for unsigned formulas. For it, 0) should be
replaced by
01 )

S contains no atomic formula and its negation; S

does not contain either
and 2) ,

0\

and

~

~ T

or

.1.. ,

and in conditions 1)

should be used in the unsigned sense.

keep complications down, we will give all our proofs for
the signed version, with the understanding that parallel

To

ANALYTICAL MODAL TABLEAUS AND CONSISTENCY PROPERTIES

49

proofs exist for the unsigned one as well.
As a rule, in this book we will work with
signed-formula versions of consistency properties, though
unsigned-formula versions will be needed occasionally.

The

two are closely related, and model existence theorems for
either version can easily be derived from the other, using
the following idea.
Suppose C is a consistency property using signed
formulas •

Let C

1

= {X I TX€C}u {-X I FXEC}.

consistency property in the unsigned sense.
direction, suppose C
unsigned sense.

1

Then C is a
1
In the other

is a consistency property in the

Let C

2

= {TX 1 X E c } {FX I -X E C } •
1

c 2 is a consistency property in the signed sense.

1

Then

(Note

that if -A E. C then both T- A and FA will be in C • )
1
2
Similar considerations apply to all the consistency
properties we consider in this work.
The primary result concerning Classical consistency
properties is the following.
Model Existence Theorem for propositional Classical logic
5.1:

Suppose, for this result only, we drop the modal

operators o and <> from the language, thus returning to
the conventional language of the Classical propositional
calculus.

Then, if C is a Classical consistency property

and S is C-consistent, then Sis satisfiable (that is,
there is some assignment of T's and F's to atomic formulas
which makes all the members of S come out T under the usual
Boolean evaluation procedure of Classical logic.)

50

CHAPTER TWO

We do not include a separate proof of this, though one
can be easily extracted from the versions for modal logics
that follow.
Now, suppose C is a Classical consistency property.
We call it an S4-consistency property if also, for each

se. c,
ve:s~su{v

and

0

}e:C

rr € S ~ S# u { n } E c
0

where Sfl = {v I v E S}.
This obviously parallels the tableau rules for S4 as given
in #2, and a similar definition can be given for each of
the logics in the title of the section.

Rather than treat

each one individually, we proceed as compactly as possible.
First we define S# for the logics we are considering, by
the following chart.
LOGIC L

Sfl

I v €. S}

K, T, 0

{V

S4

{ v I v E: S}

K4, 04

{v I v

0

0

E

S} u { v I v E: S}

Now, let L be one of K, K4, T, S4, 0 or 04.

We are

going to define the notion of an L-consistency property.
It involves adding certain extra conditions to the
definition of Classical consistency property, conditions
which depend on the choice of L.

ANALYTICAL MODAL TABLEAUS AND CONSISTENCY PROPERTIES

Let C be a Classical consistency property.
C an

51

We call

L-consistency property if, for each S E. C, first:
lT E. S ~ S/1 u { lT } E: C
0

where S/1 is defined for L in the above chart,
and second:
for K and K4, no other conditions;
for T and S4, the condition
VES~Su{v

0

}E.C·

•

for D and D4, the condition
SEC= S/IE C

where S/1 is defined in the above chart.
Recall, a set S of signed formulas is L-satisfiable if
there is some L-model <G, R, It-> and some

r It-S.

r E: G such that

Now, the main object of the present section is to

prove the following theorem, from which many pleasant
results will follow in the sequal.
Model Existence Theorem for~ 5.2:

Let L be one of K, K4,

T, S4, D or D4, and let C be an L-consistency property.

If

S is C-consistent, then S is L-satisfiable.
Actually, our proof shows a stronger theorem, which
will have its uses too.

To state it, we first need a new

term.
Definition: Let C be an L-consistency property and let B be
a set of signed formulas.

We call C B-compatible if, for

each SEC and for each ZEB, SU{Z} E. C.

52

CHAPTER TWO

Strong Model Existence Theorem for ~ 5.3:

Let L be one of

K, K4, T, S4, D or D4, let B be a set of signed formulas,
and let C be an L-consistency property that is
B-compatible.

If S is C-consistent, then S is satisfiable

at a world in some L-model <G, R, 11-> in which the members of
B hold at every possible world.
Remark:

There are, of course, versions of the above using

unsigned formulas.

We leave details to the reader.

The

proof that follows is a modified (propositional) version of
that in Fitting [1973].
We will use a familiar idea in proving this, that of
extending C-consistent sets to maximal ones, and using them
to construct models.

In order to do this, we must be sure

that such maximal C-consistent sets exist.

That is our

first goal.
For the rest of this section, L is one of K, K4, T,
S4, D or D4.
Lemma 5.4:

Let C be an L-consistency property.

contain all subsets of members of C.

Let C'

Then C' is also an

L-consistency property, extending C, and closed under
subsets.
Proof:

Also if Cis 8-compatible, so is C'.
The various conditions for being an L-consistency

property must be checked for C'.

We look at one of them

and leave the rest to the reader.
Suppose SeC' and

p e: S.

Then S ~R e C, and C is an

L-consistency property, hence R v { f3 } e C or R v { f3 } € C.
1

2

ANALYTICAL MODAL TABLEAUS AND CONSISTENCY PROPERTIES

Now S U { (3 } G R u { {3 } and S u { f! } ~ Ru { {3
1

1

2
} must be in C 1 •

S u { f3 } or S u { f3
1
2
Thus C 1 is an L-consistency property.
C and is closed under subsets is obvious.

2

}

so one of

That it extends
The

B-compatibility feature is equally immediate.
Lemma 5.5:

Let C 1 be an L-consistency property closed

under subsets (as in the previous lemma).

Let C 11 consist

of those sets S all of whose finite subsets are in C 1 •
Then C 11 is also an L-consistency property, extending C 1 ,
and meeting the condition that S E: C 11 if and only if all
finite subsets of S belong to C 11 •
B-compatible, so is C
Proof:

Also if C 1 is

11 •

Again one must check that the parts of the

definition of L-consistency property hold for C 11 •

And

again we verify one and leave the others to the reader.
Suppose S € C 1 1 , {3 € S, but S u { (3 } £ c 1 1 and
S u { {3

2

1

we derive a contradiction.

} lit C 11 ;

Since S u { f3 } It C 1 1 , there is a finite set
1

F ~Su{ {3} with F ri C 1 •
1

1

1

But since SE"C 11 , all its

finite subsets are in C 1 , so F can not be a subset of S
1

0

~ e: F
,...d
,. Suppose we write 0 F 1 for F 1-{ 13 1 } •
Then we have: F is a finite set with F ~ S but

alone , hence
0

FU{,B}~C 1 •

1

1

1

1

Similarly, since S u { f3 } (/: c 1 1 , there is a finite set
0
0
0
2
F with F ~ S but F u { f3 } t c 1 •
2
2
o
o2
2
Let F = F u F u { 13 }. Then F is finite, and F c; S, so
1

2

since SEC 1 1 , then FE C 1 •

Since C 1 is an L-consistency

property, and fJ € F then F u { ,B } E C 1 or F u { ,B } € C 1 •
1

2

0

Since C 1 is closed under subsets, F U { (3 } E c 1 or
1

1

53

54

CHAPTER TWO

0

F U{ (3 } E C 1 , and we have a contradiction.
2
2
Thus the " {J -condition" holds for C 1 1 •

We leave the

other L-consistency property conditions to the reader.
Since C 1 is closed under subsets, if S € C 1 , certainly
all finite subsets of S are in C 1 , hence SEC 1 1 •

Thus C 1 1

extends C 1 •
Suppose F is finite.

If F E C 1 1 it must be that all

finite subsets of F are in C 1 , in particular, FE C 1 •
Conversely, ifF EC 1 , by the previous paragraph, F EC 11 •
Hence C 1 and C 11 agree on the finite sets.
Now, SEC 11 if and only if all finite subsets of S are
in C 1 (by definition of C 11 ) if and only if all finite
subsets of S are in C 11 (by the previous paragraph).
The B-compatibility assertion is straightforward.
This completes the proof of the lemma.
Remark:

A collection C of sets is said to be of finite

character provided SEC if and only if each finite subset
of S belongs to c.

Thus the two lemmas above show the

following.
Proposition 5.6:

Any (B-compatible) L-consistency property

may be extended to a (B-compatible) L-consistency property
of finite character.
The reason this is important to us is that we can then
apply
Tukey 1 s Lemma:

There is a maximal member of each non-void

family of finite character.

55

ANALYTICAL MODAL TABLEAUS AND CONSISTENCY PROPERTIES

Tukey's Lemma is an equivalent of the Axiom of Choice
(see Kelley [1955] pg 33).

We have more to say about the

use of this lemma at the end of the section.
Proposition 5.7:

Let C be an L-consistency property of

finite character.

Each member of C may be extended to a

maximal member o-f C.
Proof:
in

Suppose S E. C, we produce a maximal extension of S

c.
Define a family F as follows.

F = {VI S u V E C}.

Our

first goal is to show that F is also of finite character.
Suppose VE. .IF', and F is a finite subset of V; we

1)

show FE. .IF'.
Let G~SUF where G is finite.
Also suve.c since VEF.

F~V.

Now SVFGSUV since

Thus G is a finite subset

of S v V E C hence G e: C since C is of finite character.

We

have shown that every finite subset of S u F is a member of
C, hence S u F E. C, again since C is of finite character.

Then FE F by definition.
2)

Suppose V is a set such that, for each finite

subset F of V, F E. F.

We show V e: .IF'.

Let G be a finite subset of S u V.
G ~ S u F for some finite F ~ V.
V, FE F.

Then, of course,

Then by our assumption about

Since FE F, then S v FE C, hence G E. C since G is a

finite subset and C is of finite character.

We have shown

that for any finite subset G of S u V, G E C, hence S u V E. C,
again since C is of finite character.

Then V E. .IF' by

definition.
Thus F is a family of finite character.
Lemma, F has a maximal member, say V.

By Tukey's

Since V E. F then

CHAPTER TWO

56

S u V e: C.

We claim S u V is maximal in C.

Well, suppose SUV~SUVUWEC.
v~vuw

But

Then VUWEF.

and Vis maximal in F, hence vuw = V.
And it obviously extends

Thus S u V is maximal in C.
This completes the proof.

S.

Now we are ready for the Model Existence Theorem
itself.
Proof of Theorems 5.2 and 5.3:

Let C be an L-consistency

property, and suppose S is C-consistent, that is, S E C.

We

show S is L-satisfiable.
By Proposition 5. 6,

C ~C1

where C 1 is also an

L-consistency property, and is of finite character.
C

1

We use

to create an L-model.
Let G be the set of all maximal members of C 1 (there

are some, by Proposition 5. 7).
mean r fl c;;; .a.
1)

For r ,· D. E G, let r R .6.

We note the following useful facts.

for any choice of logic L,
r~-6

~

rtlt;;Afl;

2) for S4,

r fl = r flfl and

r fl c;;; r ;

3) for K4 and D4,
rtl~

ru.

Now we verify that <G,R> is an L-frame, as defined in
This must be done on a case-by-case

112 of Chapter One.

basis.
case L = K)

Then <G,R> is trivially a K-frame, since

no special conditions on R are imposed.
case L = T)
XE

r11.

Then X=

Suppose
V

0

rEG; we show r fl.;;;; r.

for some

v E r.

Since

Let

r E C 1 and

ANALYTICAL MODAL TABLEAUS AND CONSISTENCY PROPERTIES

c

I

is a !-consistency property'

r v { v } E c I . But r
0

is maximal in C 1 , hence has no proper extensions; thus

r v {v } = r .

So v e r, or X e: r .
0
0
reflexive, so <G,R> is a T-frame.

r II<:; r; li is

Let r, A ,fl. €: G and suppose r R A and

case L = K4)

c. R fl.; we show r R fl. •
1)

Thus

Since

r R c., r II <;;;; .6 , so by i tern

r II# ~ .611, hence by i tern 3) , r II t;; .6/1.

above,

Then rllt;;Jl, so rRfl.

ABfl, L:dl<;;tl.

Since

Thus B is

transitive, so <G,B> is a K4 frame.
case L = S4)

r II.;;. r for S4.

li is reflexive since, by item 2) above,

R is transitive by the same argument as

for K4.
Suppose r E G, we show there is some

case L = D)

r e: G, then r € C 1 • Since
C 1 is a D consistency property, r II e: C 1 • Extend r II to a
A£ G such that r B .c..

maximal member,

A ,

Since

of C 1 •

Then A E G and r R A.

Thus

<G,B>. is a D-frame.
case L = D4)

A combination of the arguments for D and

for K4.
Thus, for each L, <G,B> is an L-frame.
interpretation v in <G, R> as follows.

Now define an

For each

r E G and

for each propositional variable A, set
i f TA €
v( r ,A)

r

=
otherwise.

The interpretation v determines a unique model <G, B, ir>
(see Chapter One, 112) which, by the preceeding, is an
L-model.
formula Z,

We claim: for each r e: G and for each signed

57

58

CHAPTER TWO

z E r ~ r 11-Z

(*)

The proof is by induction on the degree of Z.
First, suppose Z is of degree 0; say Z is TA or FA
Then

where A is a variable.

TA E r =9 v( r ,A) = T by definition of v

==> r 11-A
FA e: r ~ TA rt r

being a member of C 1 , can

(since r

not contain an atomic formula and its conjugate)
~

v( r ,A) = F by definition of v

==> r J!'-A.
Now suppose ( *) is known for all r € G and all signed
formulas of degree < n, and suppose Z is of degree n, where
n > 0.

There are 4 cases to consider, depending on whether

Z is an

o< ,

f3 , v

case o< )

or rr •

Suppo,se Z = o< •

Then

O<}E.C 1

o<Er~ru{o<

,. 2
(since C 1 is a consistency property)
~ ex,, 0(2 E: r
(since r is maximal)

~

r II- o< 1 and r 11- 0( 2

(by the induction hypothesis, since
lower degree than o< )
==7>

case f3 )

r n-

c<

1

and

o<

2

are of

0(.

Suppose Z = f3 •

Then, for reasons similar

to those in the previous case,
~

e: r

===> r u { (3
~

13 1

e: r

1

} € c 1 or r u{,B

or

~2 e: r
r 1r- ~

r 11- f3 or
1
r 1r- f3 •
case rr ) Suppose Z = TT •
~

==>

2

} E: C I

2

Then, for every choice of

ANALYTICAL MODAL TABLEAUS AND CONSISTENCY PROPERTIES

59

logic L,
TTe:r

Now, let

~
A

Then b. E G.

r#V{TT }E:C 1 •

0

be a maximal extension in C 1 of r II u { TT } •
0

rr is of lower degree than
0
0
by the induction hypothesis, .6. If- 7T • Since r #~A,

"IT ,

then r R b..

Since

TT

E A

and

0

Then r lr or.

case -v ) Suppose Z = v •

Also suppose -v e. r •

any A e: G such that r R A, that is, r II~ A.

v 0 e: Ll..

We claim

This requires a two part argument.
By definition of r II for Sl!, i f

Suppose L is Sl!.

v e: r then v e r #, hence -v e: A.

By the Sl! consistency

property conditions, since -v e: A, then Au { v
Since A is maximal in C

1 ,

v

0

e: A.

Suppose L is one of K, T, D, Kl! or Dl!.
from the definition of r # for L, if v e: r
hence v

0

0

} ECI.

Then directly
then

v E: r11,
0

E: A.

Since 1.1 e: b. then
hypothesis.
then

Take

0

Since

61~ v

c. lr v

r lr v.

0

0

by the induction

for all

c. E G for which r R c. ,

We have thus verified (*) which, in words, says that
each r e G (considered as a set of signed formulas) is
satisfiable in some L-model (namely at the world r in the
model <G,R, 11->.)
Now, to finish the proof of 5.2.

Recall we started

with an L-consistency property C, and a set SeC, and we
wanted to showS is L-satisfiable.
since SeC then S e: C
C1

1•

(Proposition 5. 7).

Well, very simply,

Extend S to a maximal member
By the remarks above, r

r of

is

L-satisfiable hence the subset S also is.
To show Theorem 5.3,_ only a few additions to the above
are necessary.

Suppose C is B-compatible.

Then so is C 1

60

CHAPTER TWO

by Proposition 5. 6.

If r

is a maximal member of C 1 then

BG r (because, if ZE.B then r u {Z} E:C' since C' is
B-compatible, but r is maximal, so r u {Z} = r
Z E. r) •

Then

hence

r 11-B for each r e: G.

Remarks on the use of Tukey's Lemma:
1)

Tukey's Lemma is not as generally familiar as

certain other equivalents of the axiom of choice. So here
is an alternate way of showing Proposition 5.7. If a
collection is of finite character, one has just enough
information to show it is closed under chain unions. Then
Zorn's Lemma may be used.
2) Some form of the Axiom of Choice is necessary for
us since we allow languages of arbitrary cardinality.

If

the reader has chosen to work with a countable language, a
Lindenbaum-type construction to show Proposition 5.7 may
easily be devised (see, for example, pg 68 in Smullyan
[1968]).
#6

TABLEAU COMPLETENESS

In #1 we gave tableau systems for the logics K, K4, T, S4,
0 and 04, which, in #3, we showed to be correct with
respect to their Kripke model theory. Now we show them to
be complete.

This is the first, but hardly the last,

application of the Model Existence Theorem in this book.
Completeness Theorem 6.1:

Let L be one of K, K4, T, S4, 0

or 04, and let X be a formula.

If X is valid in all

L-models, then X has an L-tableau proof.

ANALYTICAL MODAL TABLEAUS AND CONSISTENCY PROPERTIES

Proof:

61

As originally defined, a tableau is constructed by

putting down a single signed formula, then applying the
branch extension and modification rules

o<,

f3 , v , rr •

We

now broaden this slightly.
Let L be one of the logics named above, fixed for the
rest of the proof. Suppose {Z ,Z , ••• ,Z } is a finite set
1 2
n
of signed formulas. By an L-ta bleau for {Z , z , ••. , z } we
--1 2
n
mean any tableau that begins

z
1
z
2

z

n

and continues by applications of the ex , 13 , v

and rr

rules for L.
For this proof, let us call a finite setS of signed
formulas L-consistent if no L-tableau for S closes.

Let

C be the collection of all such L-consistent sets.
claim C is an L-consistency property.

We

The verification of this is quite simple. Suppose,
for example, that S e. C and {3 e S; we show S u { f3 } e. c or
1

S u { {3 } E C. Well, if S v { f3 } t. C, there would be a
2
1
closed L-tableau of the form

s
~1

e1

62

(where

CHAPTER TWO

e 1 represents the tableau structure below the

occurrence of f3 ) • Similarly if S u { fi } t. C, there would
2
1
be a closed L-tableau of the form

Now, since

fiES, we may begin an L-tableau for S with an

application of the

p -rule thus:

Then, if we simply copy the steps of
branch, and those of

e

2

e

1

onto the left

onto the right branch,

we will get a closed L-tableau.

Thus S is not

L-consistent, which contradicts the assumption that SEC.
Thus the ~-condition holds for C. We leave the other
conditions to the reader.

We proceed assuming C is an

L-consistency property.
Now we show the theorem, in its contrapositive form.
Suppose X has no L-tableau proof. Then there is no closed
L-tableau for {FX}, hence {FX} E: c.

Then by the Model

ANALYTICAL MODAL TABLEAUS AND CONSISTENCY PROPERTIES

Existence Theorem 5.2, {FX} is L-satisfiable, hence X is
not valid in all L-models.
In a similar way the completeness of the unsigned

Remarks:

tableau systems may be shown.
It is worth pointing out that every completeness proof
in this book will appear in the contrapositive form, as
above.

One shows that validity implies provability by

showing that unprovability implies the existence of a
counter-model. Completeness proofs are really existence
theorems.

63

CHAPTER THREE
LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION,
AND OTHER TOPICS

111

INTRODUCTION

In Chapter Two, for reasons given in 111, we chose to
concentrate on the "non-symmetric" logics K, K4, T, S4, D
and D4.

In this chapter we continue our study of these

logics.
In Classical logic, a set S of formulas is satisfiable
if there is some Classical model (Boolean valuation) in
which all the members of S are true.

Now, a Classical

model may be thought of as a modal model with only one
world in it. Then satisfiability at some world of such a
model is the same as satisfiability at every world, that
is, in the model as a whole.
For modal logics generally, however, models may have
many possible worlds in them. It is one thing to say the
members of S are true at some world of a Kripke model, and
quite another to say they are true in the model itself,
that is, they hold in every world of it. The notion of
satisfiability thus splits in two for modal logic models.
There are corresponding complications that arise with
the notion of logical consequence, which lead to rather
elaborate deduction theorems, and strong completeness
theorems.
So, in this Chapter we consider, for the modal logics
mentioned above, two compactness theorems, a variety of

deduction theorems, and so on. As far as possible, we use
our favorite tool, the Model Existence Theorem.
64

LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION, AND OTHER TOPICS

#2 LOGICAL CONSEQUENCE
Classically, to say X is a logical consequence of a set S
of formulas means X is true in every model (Boolean
valuation) that makes all the members of S true.
logics, however, things are more complicated.

For modal

Should we

require that X hold in every model in which the members of
S hold, or should we require that X hold at every possible
world at which the members of S hold?
notions generally.

They are different

Actually, both versions are of

interest, and so are various combinations of them.

So

we

introduce some specialized notation to symbolize them.
Specifically, we use the arrow,~, familiar from the
Gentzen sequent calculus, Gentzen [1935], but we will allow
sets to appear on both sides of the arrow, rather than
sequences of formulas.
advantages for us.

This has certain technical

Also for the time being, the sets

involved can be infinite.

The arrow is used in symbolizing

the "holds at each possible world" version of logical
consequence.

It will be studied for its own sake starting

with 116.
Also we use the (double) turnstyle, F, commonly used
to denote a consequence relation.

Here it symbolizes the

"holds in each model" version of logical consequence.

Now,

the details.
Definition:

By a sequent we mean an ordered pair <U,V> of

sets of signed (unsigned) formulas.
write U---+V instead of <U,V>.

Following custom, we

65

66

CHAPTER THREE

In Classical logic the sequent U----. V may be read
informally as, "if all elements of U are true then at least
one element of Vis true."
Definition:

(See Smullyan [1968] pg 104.)

In the Kripke model <G, R, 11->, for

say r 11-(U- V) provided: if r
then r
Remarks:

r E: G, we

forces every member of U

forces some member of V.
Then

r~<u-v)

means r n-uuv, where V means

the set of conjugates of members of V.
Next we bring in the notion of holding in a model,
that is, at all the worlds of it.
Definition:

A (signed) formula or a sequent is valid in ~

model <G, R, If-> if it is forced by every world in G.
Finally, the compound notion we are really after.
Definition:

Let S, U and V be sets of signed (unsigned)

formulas, and let L be one of our modal logics.

1\

We write

S
(U---+ V) to indicate: U---+ V is valid in every
L-model in which all the members of S are valid.
Remarks:

To see that we have the desired flexibility, we

note the following.
single formula.

Here S is a set of formulas and X is a

Trivially, the members of 0 are forced at

each possible world, and are valid in each model.
Consequently S F 0---{X} asserts that X is valid in
L
every L-model in which the members of S are valid.
0 I=

L

S--. {X} asserts that, in every L-model, X is

LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION, AND OTHER TOPICS

forced by each possible world that forces all the members
of S.
We feel the following are useful.

Notational conventions:
1)

sF

We sometimes drop parentheses, writing

I=

u~vforS

L
L
the preceeding remarks.

(U---->V).

Indeed,wedidsoin

2)

If X is a single (signed) formula, we generally

S,X

I\ U--7V for

write

I= U,X--->V
L
I= U--->V,X

S
S

L

su {X}

for

S

1=

for

S

I=

L

L

FL u---. V
Uu{X}---+V
U----->Vv{X}

and similarly for any finite number of formulas.
3)

I=

S

L

For a single formula X we write S

0 ~{X}.

I=L X for

(See Remarks above.)

I= L U----> V for 0 1= L U~ V. Then,
4) We write
combining this with 2), for a single formula X we write
U---->{X}. (See Remarks above.)
L
5) Note that, combining 3) and 4), for a single
I=L X for !il I=L 0-----+{X}. This simply
formula X we write
asserts that X is valid in all L-models, the central notion
I=

L

U---->X for 0

I=

of Chapters One and Two.
We record the following simple, but useful facts,
whose proofs we leave to the reader.
Proposition 2.1:

Suppose S<;;;S', U<;;;U' and V<;;V'.

If

s
Proposition 2.2:

Let S, U and V be sets of unsigned

formulas, and X and Y be unsigned formulas.

Then

67

68

CHAPTER THREE

1)

S,X,Y

I=

u___,v

iff

S,(XAY)

2)

s

I=

U,X,Y----?V

iff

s

3)

s

F=

U-->V,X, Y iff

s

L
L

L

'"L

u ____. v.

'"L U,(XA Y)-V.

FL U-----> V, (X v Y).

To get some feeling for the difference in the roles of
S and U in S

F=

L

U---> V we note the following.

Suppose a formula X is forced at every world of a
model <G,R, If->.
every

Then for any

r *, and hence r If-oX.

every world of that model.

r E:G, trivially

r*lf-X for

Thus oX is also forced at

And then so is o D X, and so

on.
Consequently, using the unsigned version,
s,x

1=

L

s,x, ox

u-v
1=

L

u-v
.

s,x, ox, o ox F=L u--v
etc.
all turn out to be equivalent.

But it is easy to produce

examples (try it) to show that
s
and

I=L u,x-v

s I= u,x, ox-v
L
are not always equivalent.

We return to this point in #5.

Above we introduced notation capable of distinguishing
between behavior at a particular world in a model, and in
the model itself.

There is yet another concept that modal

logicians have investigated: behavior in a frame.

More

precisely, a formula, or a set of formulas, is said to be
valid
<G,R,

in~

frame <G,R> if it is valid in every model

If-> that is based on that frame <G,R>.

example, if P is atomic, the formula

For

DP :::J P is valid in a

LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION, AND OTHER TOPICS

frame <G,R> if and only if R is reflexive, a fact that is
straightforward to verify.
This naturally gives rise to yet one more notion of
logical consequence.

We might call X a frame consequen~~

of S (not standard terminology) if X is valid in every
frame in which the members of S are valid.

Thus we have

three modal versions of logical consequence, depending on
whether one considers worlds, models or frames.
It is easy to check that, in the following list of
consequence notions, each item implies the next:
1) 1=

K
2) S I=

s~x

K

X

3) X is a frame consequence of S.

On the other hand, it is also easy to see that, for a
variable P, P I= OP but 1= P~DP, hence 2) does not
K
K
imply 1). And both Fine [1974] and Thomason [1974] have
given (rather complicated) examples to show that 3) does
not imply 2).

Thus we have a proper heirarchy of

consequence notions.
Validity in frames is a notion of much interest to
those who study the model theoretical features of modal
logics.

We are interested largely in proof procedures

here, and Thomason [1972] essentially shows that the notion
of frame consequence is not subject to proof theoretic
methods.

More precisely, he shows that there is no set of

finitary rules of derivation (such as modus ponens or
necessitation) that would allow the axiomatic derivation,
from an arbitrary set S, of exactly the frame consequences
of S.

He also shows that the frame consequence notion is

not recursively enumerable.

Consequently, we do not

investigate frame consequence in this book.

We concern

69

CHAPTER THREE

70

ourselves solely with at-a-world and in-a-model notions,
and ignore in-a-frame ones.
#3

STRONG TABLEAU COMPLETENESS

We extend the tableau rules from Chapter Two #1,2 to deal
with the logical consequence notions introduced in the
previous section.

For the entire of this section L is one

of the logics K, K4, T, S4, D or 04.
Definition:

Let S, U and V be arbitrary sets of signed

(unsigned) formulas.

By an L-tableau for ~ using members

of Q as local assumptions and members of ~ as global
assumptions we mean any tableau that
1)

begins by putting down a finite subset of V (in

any order),
2)

proceeds according to the usual tableau rules for

Las given in Chapter Two #1,2,
3)

but which allows the following two assumption

rules:
local assumption rule:

before any of the usual tableau

rules for L are applied, any member of U may be added to
the end of the branch;
global assumption rule:

at any point in the tableau

construction, any member of S may be added to the end of
any branch.
Example:

Suppose the logic is K, S = {TDX::::>X}, U =

{T o o X} and V = {FoX}.

Here is a closed K-tableau for V

using U as local assumptions and S as global assumptions.
(We will show shortly that the closure of this tableau

LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION, AND OTHER TOPICS

implies that
DX:>X

f:K

DDX~X.)

The tableau construction begins
(1)

FDX

(2)

To ox

Explanation: (1) is the only member of V, and this is a
tableau for V.

(2) is a member of U and is put down

according to the local assumption rule.
( 1)

-F-8"Jt

(2)

~DO*

(3)

TDX

(4)

FX

We continue.

Explanation: (4) is from (1) by the K-rule given in Chapter
Two #1, but before it was put down, Branch Modification
Rule 1 was applied, causing us to cross out (1), and
replace (2) by (3).
Next, we can add the member of S using the global
assumption rule, to get
(1)

~

.(2)

'I DO*

(3)

TDX

(4)

FX

(5)

TDX:::lX

Now an application of the p -rule provides a closed
tableau.

71

CHAPTER THREE

72

We now show the correctness and completeness of these
tableau systems, relative to the semantic notions
introduced in the previous section.

We do all our work

with signed formulas, though unsigned versions are equally
simple.
Correctness Theorem 3.1:

LetS, U and V be sets of signed

formulas. If there is a closed L-tableau for V using the
members of U as local, and the members of S as global
assumptions, then S 1=
Proof:

L

U~ V.

The proof is a slight modification of work in

Chapter Two #3.

We merely sketch the ideas.

Suppose it is not the case that S 1= L U--tV. Then
there is an L-model <G, B, 11-> in which the members of S are
valid but u-v is not.

Since u--.,v is not valid in it,

for some r e: G, r JF.U --t V, and hence f' 11-U u V.
Now, the reader may easily check that the existence of
such a model entails that, for any L-tableau for V using
the members of U as local and the members of S as global
assumptions, at each stage of the tableau construction
there will be an L-satisfiable branch (indeed, satisfiable
in the L-model <G, B, 11->) •
But a tableau with an L-satisfiable branch can not be
closed.

Hence if there is a closed L-tableau for V using U

as local and S as global assumptions, it must be the case
that s 1=1 u -v.
Completeness Theorem 3.2:

Again let S, U and V be sets of

signed formulas. If S 1\ U~ V then there is a closed
L-tableau for V using the members of U as local and the

LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION, AND OTHER TOPICS

members of S as global assumptions.
Proof:

As usual, we show the theorem in its contrapositive

version.
Form a collection C of sets of signed formulas as
follows.

Put Win C if there does not exist a closed

L-tableau for W that does not use any local assumptions,
but that can use the members of S as global assumptions.
The reader may check that C is an S-compatible
L-consistency property.
Now, suppose there is no closed L-tableau for V using
the members of U as local and the members of S as global
assumptions.

We show it is not the case that S 1=

L

U----+ v.

Since there is no closed L-tableau for V using U as
local and S as global assumptions, then ~t is easy to see
there can be no closed L-tableau for U v V using no local
assumptions and the members of S as global assumptions.
Then Uu V e: C.

And_ then by the Strong Model Existence

Theorem 2. 5. 3, Uu V is satisfiable at a world, say r , in
some L-model <G, R, 11-> in which the members of S hold at
every possible world.

Since r lf-UvV then r,lf-U---->V.

Then <G, R, 11-> is an example that shows S II=
not always hold.

L

U----? V does

Finally we present a combined version of the
preceeding theorems, in the special case that is of
greatest applicability, and which, in fact, takes care of
the parenthetical remarks given at the beginning of the
example earlier in this section.

73

74

CHAPTER THREE

Definition:

For a set W of unsigned formulas, we write

TW

for

{TXI XEW}

FW

for

{FX I X E. W} •

Theorem 3.3:

Let Sand U be sets of unsigned formulas, and
let X be a single unsigned formula. S FL U~X i f and
only if there is a closed L-tableau for FX using members of
TU as local and members of TS as global assumptions.
Proof:
#4

Immediate from Theorems 3.1 and 3.2.

COMPACTNESS THEOREMS

In Classical logic the Compactness Theorem says a set S is
satisfiable whenever each finite subset of S is
satisfiable.

This is a powerful and important theorem, and

we would like modal analogs of it.

But we are faced, at
the start, by the question of what satisfiability should

mean: we have the familiar in-a-world versus in-a-model
split that does not arise in Classical logic.
Definition:

Let L be a modal logic.

Let S be a set of

signed (or unsigned) formulas.
We say S is locally L-satisfiable if there is an
L-model <G, R, II-> and a possible world

r E.G such that

r 11-s.
We say S is globally L-satisfiable if there is an
L-model <G, R, if-> such that r if-S for every r E. G.
is, if the members of S are valid in that model.)

(That

LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION, AND OTHER TOPICS

Global satisfiability trivially implies local
satisfiability.

The converse is not true, however.

The

set {TX, T <> ~x} is easily seen to be locally L-satisfiable
but not globally L-satisfiable, for any of our modal logics

L.
We should note that what we are now calling local
L-satisfiability was simply called L-satisfiability in
Chapters One and Two.
We recognize a certain infelicity in the usage of the
terms local and global here.

After all, the world is a

globe, while holding in one world is not what we call
global, but local.

One must adopt a suitably distant

viewpoint on these matters.
Now, what we want are versions of the compactness
theorem for each notion of satisfiability.

We will give

two proofs for each version, one making use of the tableau
work in #3, the other going back to consistency properties
directly.
For this section again, L is one of K, K4, T, S4, D or
04.

We begin with a simple, but extremely useful result.
It is here that our tableau work is used.
Finiteness Theorem 4.1:
formulas.

LetS, U and V be sets of signed

If S

s ~s,
0

"'r-L
" U---+ V' then there are finite sets
u c;;:u and v <;;;;. V such that s 1=1 u ~ V •

Proof:

Suppose S

0

0

0

I=

L

U---. V.

0

0

Then by the Comp!_eteness

Theorem 3.2, there is a closed L-tableau T for V using the

75

76

CHAPTER THREE

members of U as local and the members of S as global
assumptions.

Now a closed tableau must be finite, hence

only a finite subset S

of S can have been used in this
tableau T, and similarly only finite parts U of U and V
0

of V.

0

0

T is also a closed tableau for V using members of
0

u as local and members of S as global assumptions, hence
0

0

by the Correctness Theorem 3.1, S
Local Compactness Theorem 4.2:
formulas.

0

F=

L

U ---->V.
0
0

Let U be a set of signed

If every finite subset of U is locally

L-satisfiable, then U itself is locally L-satisfiable.
First Proof:

We show the contrapositive.

locally L-satisfiable.

Suppose U is not

Then for any set V,

FL U --?V

since there are no worlds at which U is forced.

In

particular,

F= L

not possible.

Thus we have a finite set U of U that is

U---; T .L •

Then by the Finiteness Theorem,
for some finite set U <;; U, we have
F=
U -..T.L. If U
0
L 0
0
were locally L-satisfiable, T .L would also be, and this is
not locally L-satisfiable.

0

Second Proof (using consistency properties directly):
Define a collection C as follows.

Put a set W of signed

formulas in C if every finite subset of W is locally
L-satisfiable.

C is, in fact, an L-consistency property.

Now, if every finite subset of U is locally L-satisfiable,
U E C, and then U itself is locally L-satisfiable by the
Model Existence Theorem (2.5.2).
Global Compactness Theorem 4.3:
formulas.

Let S be a set of signed

If every finite subset of S is globally

LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION, AND OTHER TOPICS

L-satisfiable then S itself is globally L-satisfiable.
First Proof:
Then S I=

L

Suppose S is not globally L-satisfiable.

T.L since there are no models in which S is

valid to serve as counter-examples.

By the Finiteness

Theorem, for some finite S s; S we have S I=L T.L • Then S
0
0
0
can not be globally L-satisfiable either, for if it were,
T.L would also be, and this is not possible.
Second Proof:

Form a collection C of finite sets of signed

formulas as follows.

Put a finite set Win C provided, for

each finite subset S of S there is an L-model in which S
0
0
is globally satisfied and W is locally satisfied. The
reader may check that C is an S-compatible L-consistency
property.

Now suppose every finite subset of S is globally

L-satisfiable.

It follows that 0EC.

Then by the Strong

Model Existence Theorem (2.5.3), 0 is locally satisfied in
some L-model in which Sis globally satisfied, and thus S
itself is globally L-satisfiable.
Remarks:

One may also produce a "hybred" compactness

theorem, in which both local and global L-satisfiability
conditions are imposed on various sets.

We leave a

formulation to the reader.
We have'worked only with signed formulas in this
section.

Of course similar results for unsigned formulas

then follow immediately.
#5

THE DEDUCTION THEOREM

In Classical logic the deduction theorem is a useful and

77

78

CHAPTER THREE

not very complicated result connecting logical consequence
and validity.

In modal logic, however, the situation is

more ornate, because of the complications that arise with
the notion of logical consequence.

If, for example, we

work entirely with the arrow version,---?, there is a
deduction theorem for each modal logic that has essentially
the same form as in Classical logic (see Segerberg [1971]
pg 10). If we work with the turnstyle, f:, then the form
of the deduction theorem varies greatly from logic to logic
(see Perzanowski [1973]).
We treat modal deduction theorems from a semantic
point of view, though a proof-theoretic approach is equally
simple.
Arrow Deduction Theorem 5.1:

Let L be one of K, K4, T, S4,

Let S and U be sets of unsigned formulas, and let
X and Y be single unsigned formulas. Then s F u.x~Y
D or D4.

iff

L

s

Proof:

This is little more than the observation that, for

any possible world r ,

r IHX =>Y) means

r lf-X implies

r lf-Y.
Next we consider the more complicated turnstyle
versions.

First, some notation.

Definition:

For a formula X,

0 ( 0

n

0

D X = X and

0

n+1

X =

X).

Turnstyle Deduction Theorem 5.2:
S4, D or D4.

Let L be one of K, K4, T,

Let S, U and V be sets of unsigned formulas,

LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION, AND OTHER TOPICS

and let X be a single unsigned formula.

I=

S,X

s

1=

U---+V

L

0

iff

79

Then

for some n,

n

1

u,ox,ox, ..• ,ox~v.

L

Proof:
Part 1).
S

00

I=L U,

Suppose, for some n,
1
n
X, D X, ••• , D x~v. Take any L-model

<G, R, 11-> in which the members of S, and X are all valid.
Since X holds at every world of the model, so does 0 X, but
then since 0 X holds at every world of the model, so does
0

OX, and so on.

0

Thus all of 0 X,

valid in the model <G, R, 11->.

r 11-f 0

0

n

1

D

n

1

X, ••• , D X are

Then for any world

So, if also r

X, 0 X, ••• , 0 X}.

r E: G,

forces all the

members of U then r forces some member of V since
0
n
S I= u, oX, ••• , o X ~v. That is, r 11-u--v for every
L

r E G.

We have shown that S, X I=

Part 2).

S

L

U----+ V.

Suppose, for non do we have
0
1
n
I=L U, 0 X, D X, ••• , a X-->V. We show we also do

not have S,X

I=L u~v.

Define a collection C of sets of

signed formulas as follows.

Put a set W in C provided, for

each n there is an L-model <G,R, II-> in which the members of
S are valid, and there is a world
0

1

n

r E.G such that

r IH 0 X, D X, ••• 0 X} and also r lf-W.
L-consistency property.

We claim C is an

We check one of the conditions,

and leave the others to the reader.
we show W/1 u { Tr } E c. Well,
0
Since WE C there must be an L-model

Suppose WE: C and
pick an integer n.

1f E W;

<G, R, 11-> in which the members of S are valid, and a world
0
1
n
n+1
r e: G such that r lf-W and r IH o X, 0 X, ••• , 0 X, 0
X}.
Now -rr E W so r 11- 1T, hence there is some r * such that

r *If- rro.

Since

r lf-W then r * lf-W#.

Also, if

r II- 0

k+1

X

80

CHAPTER THREE

k

then r * If- 0 X.

Thus

r * lf-W/1 V { TT } •

0

n

1

r * IH 0 X, 0 X, ••• ' D X} and

Hence W/1 V { Tr } E C.
0
0
We further claim that C is a T(S v {X}) -compatible

L-consistency property.

(The prefix There is because

members of S, and X, are unsigned while C involves signed
formulas.

Notation is from 113.)

The "S-part" follows

since we only look at models in which the members of S are
valid.

The "X-part" follows since in all the worlds we

consider,

0

0 X is forced.

Now, our assumption at the start of Part 2) was that
0
1
n
fornondowehav eS F u,ox,ox, ... ,OX----?V. Itis
L
easy to see that this implies TU v FV E C (again using the
notation of 113). Now, by the Strong Model Existence
Theorem ( 2. 5. 3), TU v FV is (locally) satisfied in some
L-model <G, B, if-> in which the members of S v {X} hold at
every possible world.
S,X

But this implies we do not have

FL u ----?V.
For certain modal logics, Theorem 5.2 can be

strengthened in form.
Corollary 5.3:

Let L be either Tor S4.

S,X

iff

FL U~v

Proof:

for some n, S

Then
n
FL U, o X -v.

Since T and S4 models must be reflexive, any world

of such a model that forces 0

k+1

k

X must also force 0 X.
0
1
n
Hence for T or S4 models, the sets U v { D X, ox, ..• ,DX}
n
and Uu { D X} hold at the same worlds. The corollary then
follows immediately from Theorem 5.2.
Corollary 5. 4:

s,x

F
u~v
K4

iff

s

1=

K4

u,x, ox-----.v.

LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION, AND OTHER TOPICS

Proof:

Since a K4 model must be transitive, any world of

such a model that forces D X will also force o D X, and
then o o D X, and so on.
0

n

1

Hence for K4 models, the sets

Uv { o X, o X, ••• , o X} and U v {X, oX} hold at the same
worlds.

Again the Corollary follows from Theorem 5.2.

Corollary 5. 5:
Proof:
#6

S,X

iff

s

1=S 4 U, OX---?V.

Similar to the preceeding.

GENTZEN SYSTEMS

Sequents were introduced in this work in #2 as part of a
notation for symbolizing logical consequence.

Now we

separate them from that notation role and begin studying
them for their own sake, proof-theoretically.

That is, we

consider Gentzen sequent calculi.
Gentzen-type proof procedures have their origins in
Gentzen [1935], where systems for Classical and
Intuitionistic logics were presented.

Similar systems for

various modal logics have since been worked out by several
people.

Indeed, the tableau systems we have been using are

nothing more than notational variants of Gentzen systems,
with proofs written upsidedown.
In this section we present in some detail a Gentzen
system for S4 that is rather standard in the literature,
and we establish easy connections with semantic tableaus.
We also sketch Gentzen systems for the other
"non-symmetric" logics we have been considering.

Then in

the next section we turn to Gentzen systems of a more
unusual, but highly useful, kind.

The development here is

81

82

CHAPTER THREE

based on that in Smullyan [ 1968] pp 101-108, where i t is
presented for Classical propositional logic.
We have rather limited aims here: we want a sequent
calculus that proof-theoretically captures the notion of
validity; we do not wish to bring in the complications
necessary to handle logical consequence too.

Consequently

we only need to consider sequents in which the sets of
formulas involved are finite.

Our general convention is,

when a sequent is used as part of the logical consequence
notation as in #2, infinite sets may be involved, but when
a sequent appears by itself, in the context of Gentzen
systems, only finite sets will be used.
For convenience we begin at the beginning, with a
definition of sequent and with our present notational
conventions.
A sequent is an ordered pair <U,V> of sets of signed
(unsigned) formulas.

We use Gentzen-style notation and

write U ----"V for the sequent <U, V>.

Also, we write

for 0 ~ V, U----" for U ~ 0, and

for 0 ~ 0.

~

~v

Further, if U and V are sets, while X is a single formula,
we write U,X---->V for

uv {X}----+V, and similarly for other

analogous cases.
We now give a sequent calculus for S4.

It has certain
axioms and many rules of inference, one rule for the
introduction of each logical symbol on each side of the
arrow.

A sequent is a theorem if it is derivable from the

axioms using the rules of inference.

A formula X is a

theorem if the sequent -+X is a theorem.
Recall from Chapter Two #2 the definition of S# for S4
Sf! = { v I v e: S} •

LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION, AND OTHER TOPICS

Well, now we also define
S!;>

= { TT I iT E S}.

(for more on this, see #7).
The S4 sequent calculus is as follows.

Here U and V

are finite sets of unsigned formulas, X and Y are single
unsigned formulas.
Axioms:

U,X----?V,X
U,.L---.V

U--->V, T

Rules:
Conjunction

c :
1

c :
2

Disjunction

D :
1

U,X,Y ~v
U,XA Y ---"V

U---+V,X

U---+V,Y

U----->V,XAY

U---+V,X,Y
U--->V,XVY

U,X----?V

U,Y-V

83

CHAPTER THREE

84

Implication

I 1.

I :
2

Negation

N1 •

Possibility

U,Y~V

u~v.x

u,x =>Y~v
u.x~v

u ~v. -x

N:

u-v,x
u, -x --7V

L :
1

u.x~v

2

Necessity

u,x---.v,Y
u-V,X=>Y

U, ox~v

L :
2

,X
u-v, ox

M•

U-->V,X

1.

un-v~:>

u~v.

M:
2

<> x

U#,X-VI:>
U, ¢X-V

For example, here is a proof in this sequent calculus
of D(XA Y) ~ ( 0 X" OY). The proof is presented in a tree
arrangemen t (upsidedown to those appropriate to tableaus).
Numbers have been added as an aid to explanation only.

LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION, AND OTHER TOPICS

( 1)

(5) X, y-----> y

X,Y~X

(2) X A Y-----> X

(6) X A y-----> y

(3)

(7) 0 (XAY)---+Y

D (X 1\ Y) _____,.X

(4) D (X A Y)

85

(8)

~ D X

D (X A Y) ----? DY

(9)

0 (X A Y) - - ? ( D X A OY)

(10)

~(D(XAY)::>(DXADY))

In this example:

(1)

and (5) are axioms; (2) and (6)

follow by C · (3) and (7) follow by L . (4) and ( 8) follow
1'

1'

by L • ( 9) follows by c . then (10) follows by I •
2'
2'
1
The intended semantic interpretation for a sequent is
as in 112, namely: in a Kripke model <IG, R, It->, for a world

rEG,

r lf-l:J----,V means, if r lf-X for every XE U then r 11-Y

for some Y E V.
The reader may easily check that each of the axioms is
valid in all S4 models, and each of the rules carries S4
valid sequents to S4 valid sequents, hence only S4 valid
sequents are derivable. Now, if ~xis derivable, i t
must be S4 valid but, vacuously, every world must force all
the formulas on the left of the arrow, hence every world
must force some formula on the right, namely X. Thus X is
S4 valid. Simply, any provable formula is S4 valid. The
sequent calculus is correct.
Completeness follows easily using consistency
properties. Thus, define a collection C of finite sets of
Put {TX , ••• ,TX ,FY , ••• ,FY}
k
1
n
1
in C if the sequent X , ••• ,X ~ Y , ••• , Y is not derivable
k
1
n
1
in the sequent calculus above. The reader may verify that

signed formulas as follows.

C is an S4-consistency property.

Now, suppose the

CHAPTER THREE

86

formula X is not provable.

Then the sequent~ X is not

derivable, hence {FX} E: C.

Then by the Model Existence

Theorem, 2.5.2, FX is (locally) S4 satisfiable, hence X is
not S4-valid •
Actually, this completeness proof suggests a way of
introducing uniform notation into the matter.

For a finite

set of signed formulas S = {TX , ••• ,TX ,FY , ••• ,FY }, let
1
n
1
k
S I be the sequent X , ••• ,X ----> Y , ••• , Y • Consider the
1
n
1
k
rule

I

Is,

JS,

0(

0(

1

•

I

0(

2

I

Suppose, for convenience, that U = {X I TX E S} and V =
{X I FXE. S}.

Now, i f

o<

is TX AY, this rule says C •

1

u,x, Y -----.v
U,X 1\ Y ---7 V

Similarly if o< is FX v Y, the rule says D •

1

U--?V,X,Y
u~v.xvy

Likewise i f o< is FX=>Y or F-X we get I

1

and N.
1

In fact, as the reader may easily check, the entire
system may be schematized as follows.
Axioms:

is,rx,FXI

LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION, AND OTHER TOPICS

ls,T.L I

IS,F T I
Rules:
0(

js. ts,l

IS, f!

js. fJ2j

1T

The reader should have no difficulty in recognizing
these as essentially the S4 tableau rules written
upsidedown (thinking of S as the set of signed formulas on
the tableau branch).

Indeed, little difficulty should be

encountered in converting a tableau proof to a
sequent-calculus proof, or conversely. A formal
presentation of this (without modal operators) may be found
in Smullyan [1968] pp 101-108. We skip the details here.
A few remarks.

Gentzen worked, not with sets on each

side of the arrow, but with finite sequences of formulas.
Then certain structural rules were also necessary, rules
for interchanging the order of formulas, adding extra
formulas, and deleting duplicate occurrences. The use of
/

87

88

CHAPTER THREE

sets makes these rules unnecessary.
The sequent calculus for S4 above is essentially that
of Onishi and Matsumoto [1957,1959] or of Kanger [1957].
Both are presented in the appendix of Feys [1965].
The reader should now encounter little difficulty in
formulating sequent calculi for the other modal logics we
have been considering.

Simply replace the v and

Tr

rules

above by versions appropriate to the logic at hand, keeping
in mind that they are just the tableau rules upsidedown.
#7

SYMMETRIC GENTZEN SYSTEMS

In the Gentzen system for S4 presented in the previous
section, the rules for implication and negation require
formulas to "cross the arrow".

In this section we set up

Gentzen systems in which this does not happen; a formula on
the left of an arrow is built up from simpler formulas all
of which come from left sides of arrows, and similarly on
the right.

The primary use of such systems is in proving

the interpolation theorems of the next section.
The material here is a continuation to modal logics of
the system of Smullyan [1968] pp 124-127 for Classical
logic (and which was available in manuscript quite a bit
earlier). The system for S4 was actually developed by the
author in 1966, but has not been published before.
We begin with the Classical logic machinery, which is
common to all the modal logics we consider, then we
introduce the special rules for each modal logic. In the
following, U and V are finite sets of signed formulas,
while X is a single signed formula.

We present a system

that uses signed formulas, though unsigned versions are

LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION, AND OTHER TOPICS

We continue the convention of writing U,X

equally simple.
for U V {X}.
Axioms:

where X is

u,x~v.x}

u,x,x ~v
u _.,y ,X, X

signed
atomic

U,T.L____.,V
U,FT--?V
U--oV,F.L
U--->V,TT
Classical Rules:
o< L)

u'

Q(

'

0(

2

_____,

v

fS R)

u, o< - v
fl L)

e>< R)

u

u----4 v' o(

u

-----,>

v'

------7

v'

0(

2

0(

Next, to state the modal rules, we need the operation
of passing from a set S of signed formulas to S#, from
Chapter Two #2, as well as a dual operation of passing from
S to Sb • These are defined, for each modal logic, in the
following chart.

89

CHAPTER THREE

90

LOGIC

DEFINITION OF S#

DEFINITION OF Sv

K
K4

{II

I v E S}
{II
I v c:: S} v { v I v e: S}
0
{V I v e: S}
0
{ v I v e: S}

{TT

T
54

0

I -.... E: S}
I v e: S} v { v I v e: S}

{TT
{TT
{ Tr

0
0
0

1

rr e S}

IIT€S}v{rrl TIe: S}

I TT E: S}

l 1T £. S}

I TI e: S}
{TT
or lT e: S} u { n I rr e: S}

D
D4

{v

Note:

Recall the notion of conjugation from Chapter One_

{-v

0
0

{TT

0

#3. Suppose, for a set S of signed formulas, we define S =
{X I X E. S}. Then it is easy to check that, for each logic
in the chart above, S p = S# and Sll = S ~ •
Now we give the special modal rules for each logic.

The first rules are common to every logic.
Common Rules:
TTL)

U/I,TT---?Vp

Important Note:

VR)

U//---?VP ,

v

It is understood that in the rule above,

and in those about to be given, the appropriate versions of
II and

P are selected from the chart, according to which

logic is involved.
Next we give the special rules for the various logics.

LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION, AND OTHER TOPICS

Special Rules:
For K and K4:

no other rules.

For T and S4:
V L)

U, v

---7V

TTR)

U---->V,

rr

U----7 V, rr

U,v---?V

For D and D4:
D)

U/1--->VI:>

u---+ v
This completes the presentation of the various systems
we are considering.
Definition:

By a variant of a sequent u~v we mean any

sequent obtained from U---?V by deleting any number of
terms from one side of the arrow and adjoining their
conjugates to the other.

(Thus U---7V,X,Y is a variant of

u,x,Y~v.)

Now, in the symmetric systems above, even though none
of the rules call for a formula to "cross the arrow", we
still have the following.
Proposition 7.1:

Let L be one of K, K4, T, S4, D or D4.

If the sequent U~ V is provable in the symmetric Gent zen
system for L, so is any variant of U----+V.
The proof is by an easy induction on the length of the
derivation of U~v.

We note that any variant of an axiom

91

92

CHAPTER THREE

is another axiom.

We also note that the rules were stated

in "dual" pairs, with premis and conclusion of one of each
pair being simple variants of premis and conclusion of the
other.

We content ourselves with these observations, and

leave a detailed proof of the proposition to the reader.
Correctness:

We interpret sequents in Kripke models just

as we pid in the previous section.

It is a straightforward

matter to check that each of the axioms is L-valid, and
each of the rules for L takes L-valid sequents to L-valid
sequents.

Then any sequent derivable using the rules for L

above must be L-valid.
Completeness:

Let S be a finite set of signed formulas.

By a sequent associated with ~ we mean a sequent U---? V
such that S = U v V.

Now S will, in general, have many

associated sequents, but it is important to note that any
two of them will be variants of each other.

Thus if any

sequent associated with S is derivable in the system for
logic L above, then every sequent associated with S is
derivable.
Now, for each logic L, define a collection C as
follows.

Put a finite set S of signed formulas into C if

no sequent associated with S is derivable using the rules
for L.

It is not difficult to verify that C is an

L-consistency property.

Then, if the sequent U---? V is not

derivable using the rules for L, the set U u V will be in
C, hence will be locally L-satisfiable by the Model
Existence Theorem (2.5.2).

That is, there is an L-model

and a world in it at which all the members of U are forced,
and at which all the members of V are forced, hence at

LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION, AND OTHER TOPICS

which no member of V is forced.

At such a world the

sequent U~ V is not forced, hence U~ V is not L-val id.
Thus we have completeness.
Remark:

It is also possible, and not difficult, to

establish completeness by showing how to translate an
L-tableau proof into a symmetric Gentzen system proof using
the L rules.
#8

We leave this to the reader.

THE CRAIG INTERPOLATION LEMMA

In Classical logic an Interpolation Lemma, due to Craig
(Craig [1957]), has proved to be of fundamental importance.
Modal analogs have been developed for the logics we are
considering (among others) in Gabbay [1972], where the
argument was entirely model theoretic.

Here we give, in

some detail, a proof-theoretic argument for a modal analog
of Craig's result.

In the next section, we consider a few

refinements, then in #10 we look at some applications.
For this section L is one of K, K4, T, S4, D or D4.
Definition:

A formula Z is an interpolation formula in L

for the formula A=> B if
1)

all propositional variables of Z are common to A

and B, and
2)

A::> Z and Z;:, B are both L-valid.

Craig Interpolation Lemma for L 8. 1:

If A::> B is L-valid,

then A=> B has an interpolation formula in L.

93

CHAPTER THREE

94

Most of the rest of this section is devoted to proofs
But first we record a useful and simple

of this.

consequence for those of our logics in which
Corollary 8.2:

<> T is valid.

Suppose for the moment that L is one of T,
If A::> B is L-valid and A and B share no

S4, D or 04.

variables, then either -A or B is L-valid.
For the logics listed, o T

Proof:

=T

and

<> T

we easily get that both

o~

hence both

aT

=

T

and

¢ T

are L-valid,
From these

are L-valid.

= ~ and

¢~

= ~ are also

L-valid.
Now, if A::>B is L-valid, by Theorem 8.1 there is an
interpolation formula Z for A::::> B in L.

If also A and B

have no common variables, Z must be built up entirely from
T

and

using propositional connectives and modal

.L

operators.

Then, by the remarks above, and standard

Classical logic manipulations, it is easy to show that
either Z= 1 or Z =.Lin L.
then

T :::> B,

hence B is L-valid.

then A ::::> ..L , hence
Remark:

If Z = T, since Z::>B in L,

~A

If Z = ~, since A::::> Z in L,

is L-valid.

This corollary actually fails for the logics K and

For example, let P and Q be variables and consider the
formula <>(P=>P):::>(DQ ::>¢Q). It is K-valid but neither

K4.

~<>(P=>P)

nor

OQ ::><>Q is.

Similarly for K4.

Now we turn to the Craig Lemma itself.
proofs.

We give two

The first uses consistency properties directly and

appears non-constructive (though it can be made
constructive).

The second uses the symmetric Gentzen

LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION, AND OTHER TOPICS

systems of the previous section (whose completeness was
established using consistency properties).

Actually, both

proofs are the same in essence, though the second is easier
to follow in its details, because the Gentzen system
formalism does much of the book-keeping for us.
First Proof:

(From Fitting [1973], based on that in

Smullyan [1968] pg 128 for Classical logic, which traces
back to Henkin [1963]).
If U and V are sets of signed formulas, and Z is a
formula, let us say Z is an interpolation formula
the pair <U, V> provided:

in~

for

1) all propositional variables

of Z are common to (formulas of) U and V,
L-model <G, R, if->, and for every
member of U then r 11-Z, and i f

and 2) for every

r £ G, if r

forces every

r lf-Z then r forces some

member of V.
Now, define a collection C as follows.

If U and V are

finite sets of signed formulas, and the pair <U, V> has no
interpolation formula in L, then put Uu V in C.
With some work, which we leave to the diligent, C may
be shown to be an L-consistency property.
Now suppose A=>B is L-valid.

Then {TA, FB} is not

locally L-satisfiable.

By the Model Existence Theorem

2.5.2, {TA, FB} t C.

Then there must be an interpolation

formula Z in L for the pair <{TA}, {TB}>, or else {TA, FB}
would have been in C.

And Z is obviously also an

interpolation formula in L for A::::> B.
Second Proof: (Based on that of Smullyan [1968] pp 128-129,
for Classical logic.

The version for S4 was discovered by

the author in 1966, but has not been previously published.)

95

96

CHAPTER THREE

If U and V are finite sets of signed formulas, and Z
is a formula, let us say Z is an interpolation formula in~
for the sequent U ---+ V if 1) all propositional variables
of Z are common to (formulas of) U and V, and 2) for every
L-rnodel <G, B, 11-> and for every

r E.G, i f r

forces every

member of U then r [f-Z, and if r 11-Z then r forces some
member of V.
We note that condition 2 could be re-stated as: both
the sequents U ~ TZ and TZ ---> V are L-valid. We also note
that Z is an interpolation formula in L for the sequent
U ---+ V iff Z is an interpolation formula in L for the pair

<U, V> as defined in the first proof.
Now, if A=>B is L-valid, by the Completeness proof in
the previous section, the sequent TA ---+TB will be
derivable in the symmetric Gentzen system for L. So, to
show A => B has an interpolation formula in L, it is
certainly enough to show the existence of interpolation
formulas for all derivable sequents. And to do this, it is
enough to provide interpolants for the axioms, and to show
how to turn interpolants for the premises of each rule of
inference into an interpolant for the conclusion. This is
the plan we follow.
For example, one of the axioms is U,X---+V,X, where X
0
is a signed formula. Now, if we let X be W if X is TW,
0
and -w if X is FW, it is easy to see that X is an
interpolation formula in L (for every choice of L) for this
sequent.
As another example, one rule of inference for system L
is

LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION, AND OrnER TOPICS

Ufl, IT ~VI>

U, 1T--+ V

(Of course, the meaning of fl and I> depends on the choice
of L.)

Now, suppose X is an interpolation formula in L for

the sequent Ufl, 1T ~VI> • We claim ¢X is then an
0
interpolation formula in L for the sequent U, 1T-----+ V.

<>x and X have the same propositional variables.

The

propositional variables of U#, TI are among those of U TT
0

'

and the propositional variables of VI> are among those of
V.

'

Then OX meets condition 1) for the conclusion sequent

since X met condition 1) for the premis sequent.
Suppose <G, B, If-> is an L-model,

r € G, and r 11-U, 1T.
Since r If- TT then for some r *' r * If- TT • Since r u-u'
0
then every extension of r forces U#, in particular,
r * if-UII. Thus r* lf-UI/, 1T • But X is an interpolant for
0
U#, rr0 ---7V~ , hence r * lf-X. But then r U- OX.
Thus U, rr ----tT <>X is L-valid.

be shown to be L-valid.

Similarly T<>X ~v may

Here one uses the dual property

that if r * forces some member of VI>

member of V.

then r

forces some

Thus we have condition 2).

We have verified that OX is an interpolant for
U, TT ----'J V.
Now we deal with all the axioms and rules, merely
giving interpolants and omitting verifications, like that
above.

z

For notational convenience, we use u~v to mean

Z is an interpolation formula for the sequent U--'>V.
We begin with the axioms, then the rules common to all
the systems, and finally the rules peculiar to the various
logics.

0

In the first axiom, for a signed formula X, by X

we mean W if X is TW, and

~w

if X is FW.

97

98

CHAPTER THREE

Axioms:

0
X

u.x~ v,x}
u,x,x ~v
u ~v.x,x

X signed atomic

U,T.L ~V
U,FT ~V
U ~V,F.L

U~V,TT
Classical Rules:

I f U, ex..

1'

ex.

X

2

X

------> V then U, o< ~ V

X

X

I f U----? V, ~ 1 , (3 2 then U ~ V, f3
If U, (:3

X

-----? V

1

and U,

J3

y

2

~ V

xvy

then U, (3 ~v

X

I f U-----? V, o<

1

y
and U ---> V, o<

2

XAY

then U ~v. D(

Modal Rules in Common:

I f UIJ, TT

X

0

x

~ V~

OX
then U, TT ---?V

ex

I f Ull-----? VI> , -v 0 then U -----? V, v

LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION, AND OTHER TOPICS

Special Rules:
For K and K4: there are no other rules.
For T and S4:
if U, v

X

0

~v

X

then u, v ----:) v

X

X

If u ------lo v • rr then u ----,> v. IT
0

For D and D4:
X

If U/1 ------lo VI>
OX

u~vor

then either of
<>X

u~v.

This concludes the proof.
Remark: The rather unusual case of D and D4, where a choice
of interpolants is available, is somewhat clarified by a
move to similar but weaker logics.

See Chapter Six II 6 for

the deontic logics considered there.
119

OTHER INTERPOLATION THEOREMS

Again for this section L is one of the logics K, K4, T, S4,
D or D4.
We begin with a modal version of Lyndon's
Interpolation Theorem.

To state it, we need the notion of

a positive and a negative occurrence of a propositional
variable P in a formula X.

The idea is, simply, if X were

99

100

CHAPTER THREE

rewritten without use of

::>,

in any of the standard ways,

then a positive occurrence of P would be one in the scope
of an even number of negation signs, while a negative
occurrence would be one in the scope of an odd number of
them.

The following definition accomplishes this

uniformly, without the need for re-writing.

We state the

definition simultaneously for signed and for unsigned
formulas.
Definition:

Let P be a propositional variable.

The occurrence of p in TP and in P is positive.

1)

The occurrence of p in FP and in

~P

is negative.

[For the rest of this definition we refer to the
positiveness or the negativeness of an occurrence of P as
its polarity. J
2)

I f P occurs in

occurrence of P in «

o<
(or in o< ) the corresponding
1
2
has the same polarity.

3)

I f P occurs in

f3

4)

I f p occurs in

-v the corresponding occurrence of

(or in (3 ) the corresponding
2
occurrence of P in f3 has the same polarity.
p in v

Note:

0

has the same polarity.
I f P occurs in

5)
p in

1

n

the corresponding occurrence of
has the same polarity.

TT

0

An occurrence of P in X then has the same polarity

as the corresponding occurrence of P in TX.
Example:

P has a negative and a positive occurrence in

T((P::>Q) YP). Reason: P occurs negatively in FP by 1).
Then P occurs negatively in T(PjQ) by 3). Then P occurs
negatively in T((P=>Q) vp) by 3) again. That P also occurs

LOGICAL CONSEQUENCE, COMPACfNESS, INTERPOLATION, AND OTHER TOPICS 101

positively is similar.
Lyndon Interpolation Theorem for~ 9.1 (based on Lyndon
[ 1959] for Classical logic): If A:::> B is L-valid, then A::> B
has an interpolation formula Z in L such that every
propositional variable that occurs in Z occurs in both A
and B with the same polarity with which it occurs in z.
Proof:

Consider the second proof of the Craig

Interpolation Theorem for L as given in #8.

It is a simple

matter to check that it actually establishes the stronger
Lyndon theorem (the first proof also can be adapted; we
omit details).
In order to state the next theorem we need the notions
of necessity-like and possible-like for a formula X.
idea is, if X were rewritten, translating away all

The

occurrences of .::::>, then if all occurrences of o were
within the scope of an even number of negation signs, while
all occurrences of 0 were within the scope of an odd
number, then X is necessity-like.

If o and <> are

switched around in this definition, we have a
characterization of possible-like.

Again, however, our

formal definition is stated without bringing in the need
for translation.
Definition:
1) The possible-like (signed) formulas are the
members of the smallest set S containing the (signed)
atomic formulas and closed under

102

CHAPTER THREE
o<

2)

1

,0(

2

ES

~

o<E:S

,s 1 , f3 2 es

~ (-!ES

,-ES
0

TfES

===>

The necessity-like (signed) formulas are the

members of the smallest set S containing the (signed)
atomic formulas and closed under
o< ,o< E.S

==::::>o<ES

~ 1 ,13 2 e.s

~f3€S

1

V

0

2

ES

==::::> V E S.

Remarks:
One can show, by induction on the degree of a signed
formula X, that X is possible-like iff X is necessity-like.
One can also show that the formulas with no modal
operators are precisely the formulas that are both
possible-like and necessity-like.
Theorem 9.2:

Suppose X::>Y is L-valid.

Then there is an

interpolation formula Z in L for X -:::>Y such that:
1)

if y is possible-like, so is Z;

2)

if X is necessity-like, so is z·

3) [for L not one of D or D4]

'

if both y is

possible-like and X is necessity-like, then z is non-modal,
that is, Z contains no occurrences of 0 or ¢ .
Proof:

First we consider part 1) where L is one of K, K4,

T or S4.

Consider the symmetric Gentzen system for L as given
in #7.

If a sequent occurs in a derivation, and is neither

the sequent being proved, nor is used as a premis for an
application of one of the rules of derivation, then if we

LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION, AND OTHER TOPICS 103

simply delete the sequent we will still have a correct
derivation, of the same thing. Consequently, if Q ~ R has
a derivation at all, then it has a derivation in which each
sequent, other than Q ~ R itself, is used as a premis in
some rule application.

Let us call such a derivation

efficient.
Now, suppose Q ~R has an efficient derivation in the
symmetric Gentzen system for L. Suppose that, somewhere in
that derivation, the rule
Uti -----> V ~ , V

(v R)

u~v.

is used.

v

In the conclusion of v R there is a signed

formula on the right of the arrow that is not
possible-like. Now an inspection of the various rules of
derivation for L shows that if, in any premis for a rule
there is a formula on the right of an arrow that is not
possible-like, the same will be the case for the conclusion
Since the derivation of Q~R is efficient,
it is easy to see that this means R must contain a member

of that rule.

that is not possible-like.
Consequently, if Q - R is derivable in the symmetric
Gentzen system for L, and the members of R are all
possible-like, then there is a derivation of Q -----l>R in
which rule v R is never used.
Now, an inspection of the proof of Craig's theorem in
117 using symmetric Gent zen systems shows that rule -v R is
the only rule or axiom that can cause the interpolant being
constructed to be not possible-like. Hence if Q - R is
derivable, and the members of R are all possible-like, then

104

CHAPTER THREE

the sequent has a possible-like interpolant.

This

establishes part 1).
Part 2) has a similar proof.

One observes that in an

efficient derivation of Q ~ R, if the members of Q are
necessity-like, then the rule
U/1, TT

ITL)

~V p

u, rr ~v
can never have been used.

And this is the only way, in the

proof of the Craig lemma in #7, that an interpolant that is
not necessity-like could be introduced.
The proof of part 3) is simply a combination of those
for parts 1) and 2).
Finally, suppose L is one of D or D4.

The

observations made in the proofs of parts 1) and 2) above
still apply.
D)

But now there is one more·rule to consider:

U/1 __,VI>

u-----. v.
In the proof of the Craig lemma from #7, when this rule
came up we had a choice.
Ull--> V~

If X was an interpolant for

then either of oX or ¢X would be an interpolant

for U_, V.

Well, simply, if we are after a possible-like

interpolant, always use the () version when this rule is
applied.

Similarly, always choose the o version if a

necessity-like interpolant is wanted.
This gives us parts 1) and 2) for the logics D and D4.
Part 3) fails for these logics.

If A is a variable,

D A ::::><>A is valid for both D and D4, but there is no

LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION, AND OTIIER TOPICS 105

non-modal interpolant.
Remark:

The two theorems above can be combined, if

desired, to produce very specialized interpolants.

We omit

a proper statement of such a theorem.
#10 THE BETH DEFINABILITY THEOREM
Beth first proved his famous definability theorem for
Classical logic in Beth [ 1953].

In Craig [ 1957] a

derivation of it from Craig's Interpolation Theorem was
presented.
logics.

Here we transfer that derivation to modal

For this section, once again, L is one of K, K4,

T, S4, Dor D4.
The Beth theorem is essentially a completeness
theorem: there is enough machinery in the logic L to
explicitly define anything that "ought to be" definable.
This, of course, needs a more rigorous formulation.

First,

some notation.
We write (X:=Y) to abbreviate ((X::>Y)/\(Y=>X)).
Let F(P) be a formula in which the propositional
variable P has some (possibly 0) occurrences, and let Q
also be a propositional variable. We write F(Q) for the
result of replacing every occurrence of P in F(P) by an
occurrence of Q (so P has no occurrences at all in F(Q)).
Now for the key concepts.
Definition:

We say there is an explicit definition of f

from F(P) in the logic !::_ if there is a formula Z, in which
P does not occur, such that F(P)::::> [P=Z] is L-valid.

106

Remark:

CHAPTER THREE

Thus if there is an explicit definition of P from

F(P) in L, then in every Kripke L-model, and in every
possible world in it at which F(P) holds, we can say what P
"means" quite explicitly; it "means" Z (which does not
involve P).
Definition:

F(P) is said to define f implicitly in the

logic ~ if the following holds:

for a propositional

variable P', other than P, that does not occur in F(P),
[F(P)A F(P')] ::> [P=:P'] is L-valid.
Remark:

Suppose F(P) defines P implicitly in L.

Suppose

there is a Kripke L-model and a possible world in it at
which there are two candidates P and P' for what is being
defined. Since both are legitimate candidates, we must
have F(P) and F(P') at that world, and thus P=P'.

That

is, P and P' are indistinguishable in terms of L.

Thus

F(P) characterizes only one "thing" as far as L is
concerned.
Beth Definability Theorem for~ 10.1: If F(P) defines P
implicitly in L then there is also an explicit definition
of P from F(P) in L.
Proof:

Suppose F(P) defines P implicitly in L.

Let P' be

a propositional variable, other than P, that does not occur
in F(P). Then
[F(P) /\F(P')] ::> [P=P']
is L-valid.

Then, of course,
[F(P)AF(P 1 ) ] ::> [P::JP 1 ]

is also L-valid.

Now, the connectives /\ and ::J obey the

LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION, AND OTHER TOPICS 107

usual Classical logic conditions at every possible world,
hence by standard Classical logic manipulations
(exportation and commutativity of A , if you like classical
Classical terminology) the following is also L-valid:
[F(P) AP] :::::> [F(P 1 ) ::::> P 1 ] .

Now, by Craig's theorem, 8.1, there must be an
interpolation formula for this: there must be a formula Z
such that
1)
[F(P)AP]

2)

all propositional variables of Z are common to
and [F(P').::>P']
[F(P)AP]:::>Z and Z:::>[F(P'):::>P']

are both L-valid.

Now, P' does not occur in F(P) AP, while P does not
occur in F(P'):::>P', hence by 1), neither P nor P' occurs in

z.
By 2), [F(P)AP]:::>Z is L-valid, hence so is
F(P) ::::> [P:::> Z]

(*)

Also by 2), Z :::>[F(P'):::>P'] is L-valid.

Then so is the

result of replacing all occurrences of P' by some other
propositional variable.
P' by occurrences of P.

Well, replace all occurrences of
Since P' does not occur in Z, we

have
Z:::>[F(P):::>P]

is L-valid.

Then, so is

F(P)=>[Z:::>P]

(**)

It follows from (*) and (**) that
F(P)=>[P=Z]

is L-valid, and thus there is an explicit definition of P
from F(P) in L.
Remarks:

The converse of Beth's theorem also holds.

In

Classical logic this is an old result, going back to Padoa

108

CHAPTER THREE

[1901].

The proof is easy and is left to the reader.

It is important to extend Beth's Theorem to logical
consequence from the validity case treated above. We do so
now.

First, the appropriate modifications in notation and

terminology.
Let S(P) be a set of formulas, involving the
propositional variable P (possibly vacuously). If Q is
also a propositional variable, by S(Q) we mean the result
of replacing every occurrence of P in each formula in S(P)
by an occurrence of Q.

In other words, using our earlier

notation,
S(Q) = {F(Q) I F(P)E S(P)}.
Definition: We say there is an explicit definition off
from S(P) as global and U(P) as local assumptions in the
if there is a formula Z, in which P does not occur,
such that
logic~

S(P) I=
Definition:

L

U(P)---?P=Z.

We say P is implicitly defined by S(P) as

global and U(P) as local assumptions in the logic ~ if the
following holds:

for a propositional variable P', other
than P, and not occurring in S(P) or U(P), we have
S(P),S(P') I=

L

U(P),U(P') ~P=P'.

Strong Beth Definability Theorem 10.2:

If the

propositional variable P is implicitly defined by S(P) as
global and U(P) as local assumptions in the logic L, then
there is also an explicit definition of P from S(P) as

LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION, AND OTHER TOPICS 109

global and U(P) as local assumptions in the logic L.
Proof:

Suppose we have
S(P) ,S(P') F

L

U(P) ,U(P')----+ P= P'

where P' does not occur in S(P) or in U(P), and P' is
distinct from P.

Using the Finiteness Theorem 4.1 (and

also Proposition 2. 1) there are finite sets S
U

0

<:;

U such that

~

0

S and

s (P),S (P') F u (P),U (P') ~P5P 1 •
0
0
L
0
0
Let A be the conjunction (in some arbitrary order) of the
members of S , and let B be similarly the conjunction of
0

the members of U •
0

Then, using Proposition 2.2, we have

A(P) ,A(P') F

L

B(P) ,B(P')------, P=P'.

The advantage is that we now have single formulas to deal
with, rather than finite sets.

Now, by the Turnstyle

Deduction Theorem 5.2, for some n,
0
n
A(P) I=
0 A(P'), ••• , 0 A(P 1 ),B{P),B(P 1 )---+P=:P 1 •
L

Then, by the Turnstyle Deduction Theorem a second time, for
some k,
0

n

F

L

0

0

k

0

A(P), ••• , o A(P), o A(P'), ••• ,

A(P'),B(P),B(P')----+P=:P'.

Let m be the maximum of n and k.

m

F

L

m

0

Then of course,
0

D A(P), ••• , 0 A(P), DA(P'), ••• ,

0 A(P') ,B(P) ,B(P') ---+P=P'.
Hence trivially,

0

m

0

I= ( 0 A(P) A ••• 1\ D A(P) AB(P)) 1\ ( D A(P') A •••
m
L
1\0 A(P') AB(P 1 ) ) -P=P'.
Let F(P) be the formula
0
m
D A(P) A ••• AO A(P)/\B(P).
Then we have

F

L

F(P)/\F(P')~P=P'.

110

CHAPTER THREE

So, by the Arrow Deduction Theorem 5.1,

F 0~(F(P)/\F(P'))=>(P=P')
L

that is,

(F(P) /\f(P')) ::::> (P= P')
is L-valid.

But this says F(P) defines P implicitly in L,

hence by Theorem 10.1 there is also an explicit definition
of P, that is there is a formula Z, not involving P, such
that
F(P)::>[P=Z]
is L-valid.

Now we simply unravel things again.

We have

0 I= 0 ~F(P) :::> [P=ZJ
L
hence by the Arrow Deduction Theorem,
0 I=
or

F(P) -----7 P =Z

L

0

m

0 A(P) "···"0 A(P)/\B(P)--P=Z .

0 FL
Hence

m
A(P) ,B(P) --P=Z
and by the Turnstyle Deduction Theorem,
0 I=

0

IJ A(P) , ••• , 0

L

A(P) I= B(P) -----7P=Z.
L
Then by Proposition 2.2,
S (P) I= U (P) -----7 P =Z
0
L 0
and finally, by Proposition 2.1,
S(P) F

L

#11

U(P) ~ P=Z.

FURTHER CONSEQUENCES OF INTERPOLATION THEOREMS

We begin with an easy consequence, but one that is rather
interesting.

Terminology is from #9.

Theorem 11.1:
a formula.

Let L be one of K, K4, Tor S4, and let X be
If X can be written in both a necessity-like

LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION, AND OTIIER TOPICS 111

form, and a possible-like form in L, then X has a non-modal
form in L.

More precisely, suppose there are formulas N

and P such that: N is necessity-like; P is possible-like;
and both X=N and X=:P are L-valid. Then there is a
formula F with no occurrences of Cl or <> such that X=F is
L-valid.
Proof:

If X=N and X=P are both L-valid, then so is N::::~P.

Then by Theorem 9.2, this formula has a non-modal
interpolant F in L.

It is immediate that X=F is L-valid.

For the next result we introduce some special
terminology.

Recall from Chapter One #2 the notion of

interpretation.

For a given frame <G,R>, each

interpretation in <G, R> determines a unique model <G, R, 11->,
and conversely.
Definition:

Let v

1

and v

2

be two interpretations in the

same frame <G,R>. We say v is a simple extension of v
2
1
provided, for each propositional variable P and for each
rEG, if v ( r ,P) = T then v ( r ,P) = T.
1

2

'

Further, suppose

v determines the model <G, R, II- > and v determines the
1
1
2
model <G, R, II- >. If v is a simple extension of v , we
2
2
1
also say the model <G, R, II- > is a simple extension of the
2
.
model <G, R, If- >.
1

The notion of simple extension directly involves only
the propositional variables.
other formulas?

One wonders: what about the

112

CHAPTER THREE

Definition:

We say a formula X is preserved under simple

extensions in the logic~ if, whenever <G, R, If- > and
1
<G, B, If- > are two L-models, with <G, B, If- > a simple
2
2
extension of <G, B, II- >, then for each r E G, if r 11- X then
1

r If- X.

1

2

Now, propositional variables are preserved under
simple extensions, by definition.

The question is, what

other formulas are also preserved?
Definition:

A formula X is called positive if every

propositional variable that occurs in it occurs only
positively, as defined in #9.
Theorem 11.2: Let L be one of K, K4, T, S4, D or D4. A
formula X is preserved under simple extensions in the logic
L if and only if X is equivalent to a positive formula in
L.

Proof:
Part 1)

It is straightforward to prove by an

induction on degree that every positive formula is
preserved under simple extensions in L.
the reader.

We leave this to
It then follows immediately that any formula

equivalent in L to a positive formula is also preserved
under simple extensions.
Part 2)

Suppose the formula X is preserved under

simple extensions in the logic L.

We produce a positive

formula that is equivalent to X, in L.
Say the propositional variables of X are P ,
P , ••• ,P.
2

k

1

Choose a new list of distinct propositional

LOGICAL CONSEQUENCE, COMPACI'NESS, INTERPOLATION, AND OTHER TOPICS 113

variables, P ', P ', ••• ,P '. Let X' be the result of
1
2
k
replacing, in X, each occurrence of each P by an
i

occurrence of Pi ' .
We claim that

I= X:::>X'.

p ':)p ',P ':)p ', ••• ,P :::>pI
1
1
2
2
k
k

Suppose otherwise.

L

Then there is an L-model <G, B, If- > in

which each of P ::::> p ' , ••• , p

1

is forced by every world,
1
1
k
k
but in which there is a world, say r e G, such that
::::> p '

0

r 0)11
IlL
x =>x,.
Let v

1

be the interpretation corresponding to the

model <G, B, If- >.

That is, for each propositional variable
A and for each re.G, v ( r ,A) = Tiff r If- A. Now we
1
1
define a second interpretation, v , in the same frame, as
1

2

follows. For r e: G, v ( r ,A) : v ( r ,A) for all
2
1
propositional variables A other than P , P , ••• ,P , and on
1
2
k
these , v ( r , p ) = v ( r , p ' ) • Also let <G,B, If-> be the
2
i
1
i
2
model determined by the interpretation v
2

Since each of P :::l p ' , ••• , p :> p ' is valid in
1

1

<G,B, If- >, it follows that v
1

2

k

k

is a simple extension

of v • Hence also <G, R, If- > is a simple extension of
1
2
<G,B, II- >.
1
Suppose Z is some formula with no occurrences of P ',
1

P2 ', ••• ,Pk'. Let Z' be the result of replacing, in Z, each
occurrence of P by an occurrence of P 1 • It is
i
i
straightforward to show, by an induction on degree, that
for each r e. G, r If- z' iff r 11- z.
1
2
Now we have a world r E G such that
0

r Jf X=>X'.
0

1

Then r If- X but r ..If XI • Since X is preserved under
0 1
0 1
simple extensions, then r 0 1~ 2 X. But then, by the

previous paragraph, r If- X'. We have reached a
0 1
contradiction. Thus we have verified that we do have

CHAPTER THREE

114

p :::>p ',P ::;,p ', ••• ,P :::>pI I= X:::>X'.
112
2
k
k
L
Let C be the conjunction (in order, and parenthesised

in some arbitrary way) of P :::::> p
1

r

1'

Then, by Proposition 2.2, we have
C I=

p ::> p r , ••• , p :> p r •
2
2
k
k

or C 1= 0 ~ X :> X ' •
L
Next, by the Turnstyle Deduction Theorem 5.2, for some n,
0
1
o c, o c, ... , on c -x:::~x'.
0 I=
L
Hence
0
1
n

L

X :::>X '

01=L

OCADCA ••• ADC)~X=>X'.

Finally, by the Arrow Deduction Theorem, 5.1,
0
1
n
0 I=

L

0 --7 ( ( D

c 1\ 0 c A ••• /1. 0 C) :::::> (X ::>X I)).

Equivalently, we have that
X::>(( 0

0

c 1\0 1c A ••• A D n C) :>X')

is an L-valid formula.
By the Lyndon Interpolation Theorem 9.1, there must be
an interpolation formula Z for this in which every
propositional variable that occurs also occurs in X and in
0
1
n
( lJ C 1\ DC A ••• 1\ o C) =>X' with the same polarity.
Now, none of P ', p ', ••• ,P 1 occur in X, hence none
1
2
.k
can occur in Z. Further, each of P, P , .•• ,P occurs only
0

1

n1

2

k

positively in ( 0 C A D C A ••• A D C) ::>X 1 •

Hence each P

can have only positive occurrences in Z.

Since these are

i

the only propositional variables that can occur in Z, Z is
a positive formula.
Since Z is an interpolant, X:> Z is L-valid.
Also, since Z is an interpolant,
0
1
n
Z::>(( o cAD CA ••• AD C) :::>X') is L-valid, hence so
0
1
n
is ( o C A o C A ••• I' D C) :::> ( Z :::>X') • Now suppose
throughout this ~e replace each occurrence of P ' by an
i
occurrence of P • We will get another L-valid formula.
i

But in doing so, Z is not affected since no P 1 occurs in
i

LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION, AND OTHER TOPICS 115

Z, while X' simply turns into X.

Further, C turns into

(P ::::~p ) " ••• /\(P '::::IP ) , which is L-valid, as is its
1
1
k
k
necessitation, its double necessitation, and so on.
Conclusion: Z :::JX is L-valid.
is a positive formula.

Hence X=Z is L-valid, and Z

This completes the proof.

Remark: The proof above is actually a modal version of an
argument from Lyndon [1959A] which established a related
"preservation theorem" in Classical logic.
#12

DECIDABILITY

Consistency properties may be used to show, quite easily,
that the logics we have been considering have decision
procedures.

We do so in this section.

We make no attempt

to get an efficient decision prodecure; we merely establish
decidability.
As usual, we work with signed formulas; a similar
approach using unsigned formulas is then obvious.

For this

section, L is one of K, K4, T, S4, D or D4.
Definition:

Let C be a set of signed formulas.

We say C

is closed under signed subformulas if, whenever TX or FX is
in C, andY is a subformula of X (possibly X itself, of
course), then TY and FY are in C.
Definition:

Let C be an L-consistency property and let C

be some collection of signed formulas.

By C restricted to

C, written C t C, we mean the collection of all sets of the
form S f\C where SEC •

116

CHAPTER THREE

Proposition 12.1:

If Cis an L-consistency property and C

is closed under signed sub formulas' then c

r c is also an

L-consistency property.
Proof:

Left to reader.

Now the easy result on which our approach to
decidability rests.
Theorem 12.2:

Let X be a formula, and let C(X) be the set

of all signed subformulas of X (so then C(X) is obviously
closed under signed subformulas).

X is valid in all Kripke

L-models if and only if {FX} is not a member of any
L-consistency property of the form C

r C(X).

Proof: First suppose X is valid in all Kripke L-models.
If {FX} were a member of any L-consistency property of the
form C f C(X), or indeed of any L-consistency property
whatever, then FX would be locally L-satisfiable by the
Model Existence Theorem 2.5.2, contrary to the fact that X
is L-valid.
Next, suppose X is not valid in all Kripke L-models,
say X is not valid in <G, R, If->. Let C consist of all sets
S of signed formulas such that S is locally L-satisfiable
in the model <IGi, R, If->.

C is easily seen to be an

L-consistency property, with {FX} E C.

Then by Proposition

12.1, C f C(X) is also an L-consistency property, and of
course, contains {FX}.
Now, let X be a formula whose L-validity we wish to
check; say X has n subformulas.

By the theorem above, it

LOGICAL CONSEQUENCE, COMPACTNESS, INTERPOLATION, AND OTHER TOPICS 117

is enough to check every L-consistency property of the form
C

r C(X) to see i f {FX} is a member.

If C is an L-consistency property, SEC f C(X) implies

S t;;C(X) hence S E P(C(X)), where we write P for the power
set operation.

Thus C

r C(X) ~P(C(X)).

Now C(X) has 2n

members, hence any L-consistency property of the form
2n
~
members.
C 1 C(X) has at most 2
Further, since C r C(X) £P(C(X)) then
C fc(X)EP(P(C(X)) ), hence there are at most 2

2

2n

L-consistency properties of the form C f C(X).
Thus to see i f X is L-valid we need only (!) check a
finite well-determined number of things, so there is a
decision procedure for L.

CHAPTER FOUR
AXIOM SYSTEMS AND NATURAL DEDUCTION

111

INTRODUCTION

We continue our study of the "non-symmetric" logics K, K4,
T, S4, D and D4.

Up to now, semantic tableaus have been

essentially the only proof procedure we have considered.
But an axiomatic approach is much more common in the field.
In this chapter we introduce appropriate axiomatics for our
logics. We also introduce natural deduction systems for
them.

As far as possible, we make use of our uniform

notation, and Consistency Properties will be our main
theoretical tool.
#2

A CLASSICAL PROPOSITIONAL AXIOM SYSTEM

All our modal logic axiom systems will be built on a
Classical logic base, by the addition of certain rules and
axioms.

This is an approach that originated in ~del

[1933].

In earlier work, Classical and modal notions were

interwoven in a way that made the roles of each hard to
grasp.

See, for example, Lewis & Langford [1932].

Consequently we need an axiomatic presentation of
Classical propositional logic. Almost any one will do,
including simply taking all tautologies as axioms.

But to

be definite, we present a particular axiomatization here,
one that is rather natural from the point of view of
consistency properties.

If the reader has an alternate

axiomatization of preference, it may be used instead.
118

AXIOM SYSTEMS AND NATURAL DEDUCTION

119

There is one rule of inference, modus ponens: to
conclude Y from X and X::>Y (in either order).

MP:

Briefly,

X
X::>Y
y

Now we state our axioms.

Actually, we use axiom

schemas (all formulas of such-and-such a form are axioms)
so a rule of substitution is not needed.
As can be seen from our choice of a rule of inference,
the connective

~

plays a special role.

The first two

axiom schemas present basic features of it.

Next there are

three axiom schemas that concern atomic formulas.

Finally

there are axiom schemas to take care of non-atomic
formulas.

In stating these we use uniform notation which,

of course, must be interpreted in the unsigned sense.
All formulas of the following forms are axioms.
A 1)

X :::> (Y -=>X)

A2)

[X=>(Y=>Z)] :::> [(X::>Y)::>(X::>Z)]

A3)

A::» (-A =>X)

A4)

.l. :::>X

A5)

X:::>T

A6)

0(

::::> 0(

A7)

0(

::::> 0(

A8)

[A atomic]

1

2
( (3 ::::>X)
1

"::::>

[ (

f3

2

:>X) :::l ( 13 :::l X)].

Let S be a set of formulas.

By a derivation from S is

meant a finite sequence of formulas each term of which is
either an axiom, a member of S, or comes from two earlier

CHAPTER FOUR

120

terms in the sequence using the rule MP.

A formula X is

derivable from a set S if X is the last term of some
derivation from S.

X is a theorem of this axiom system if

X is derivable from the empty set.

We symbolize that X is

derivable from S in this system by S ~

X.
PC
then S' 1-

Note that if S 1-

X and S~S'
X. In
PC
PC
particular, a theorem of the axiom system is derivable from
any set.
Next we establish several rather standard features of
this axiom system which will be of use to us in this
chapter.

Generally, by the way, rather than presenting

formal proofs in the system, we give informal arguments
that formal proofs must exist.
Lemma 2. 1:
Proof:

Any formula of the form W:::>W is a theorem.

Any formula of the form A2 is an axiom, so taking X

and Z to be W, and leaving a choice of Y open yet,
[W:::>(Y.:>W)] ::> [(W:::>Y):::>(W:::>W)]
is an axiom (for each choice of Y).

But by A1,

W:::>(Y:::>W)
is also an axiom.

Hence by the rule MP, we get, for each

Y,
(W :::>y) ::::> (W ::>W).
Now, let us say we chose Y to be Z :::>W.
(W::~(z::~W)) :::>(W::lW)

Then

is a theorem. But
W.::J(Z::lW)
is an axiom, being of form A1.

Hence by MP,

121

AXIOM SYSTEMS AND NATURAL DEDUCTION

W:::>W
is a theorem.

Proposition 2.2 (Deduction Theorem):
Sf-

PC

If S v {X} f-

(X::>Y).

PC

Y then

Proof: Suppose the sequence A , A , ••• , A is a derivation
1
2
n
of Y from S V {X} (hence A = Y). We show each of X::::> A is
n
i
derivable from S (hence X=>A or X::>Y is so derivable).
n
Suppose, for all i < k, we know that X::> A is
i

d~ri

vable from S; we show X:::> A is also derivable.

Now, in

k

the sequence A , ••• ,A , ••• ,A, either 1) A is an axiom,
1
k
n
k
2) A is a member of S, 3) A is X, or 4) A comes from two
k
k
k
earlier terms by MP.
case 1)

Suppose A is an axiom. A :::>(X -=>A ) is also
k
k
k
Then by MP, X::> A is a theorem, hence

an axiom by A1.

k

derivable from S.
case 2)

Suppose A e S.

case 1).
case 3)

This is treated similarly to

k

Suppose A is X.

Then X::>A

k

k

is X::>X which is

a theorem by Lemma 2.1, hence derivable from S.
case 4)
MP.

Suppose A comes from two earlier terms by
k

Thus, say A and A -=>A
i

k

i

Then we already know X:::>A

preceed A in the sequence.
k

and X=>(A =>A) are derivable

i

i

k

from S.

But by A2, [X::>(A ::>A)] :>[(X:>A) ::>(X.::>A )] is an

axiom.

It follows then, that X::>A

i

using MP.

i

k

k

Corollary 2. 3:
1)

If S, <><

k

is derivable from S,

fX then S, o< fX.
1 PC
PC

122

CHAPTER FOUR

If S, o<
2)

2

If S, p

1

ff-

PC
PC

X then S, o<
X and S, (3

2

1- X.
PC
1- X then S, f3 fPC

PC

X.

Proof:

fX. Then S fex ::> X by the
1 PC
PC
1
Theorem above, and thus S, o< fO<
=>X. But 0< ::> 0< is an
PC
1
1
axiom, hence S, o< fo<
and thus S, o< 1X.
PC
1
PC
Part 2) is similar.
1)

Suppose S, 0(

Corollary 2.4:
1)

2)
3)

4)

..1.. then S 1X.
PC
PC
If A is atomic, SU{A,-A} 1.L.
PC
SU{.J..} f.L.
PC
SU{-T} fJ.
PC

If S U {~X} I-

Proof:
1)

Suppose su {-X} f-

hence S v {-X} fS f-

PC

-X =>X.

PC

PC
In A8, take f3

to be X =>X.

Then

(-X=>X)::>[(X=>X)::>((X::>X):::>X)]

is an axiom.
S f-

..L. •
.J.. ::>X is an axiom (A4)
PC
X, and then by Theorem 2.2,

It follows by MP, using Lemma 2.1, that

X.

2) is immediate using axiom A3, while 3) is trivial.
4)

Trivially S U { - T} I_. T • And by A5,
PC
,
Su{--T}I-T::>T,henceSv{-T}IT
byMP. Also
PC
PC
by A3, S U { - T } fT ::> ( - T '::l .J..). Then by MP, twice,
PC
su{-T} 1..1...
PC
Completeness Theorem 2.5:

Suppose we temporarily only

consider those formulas not involving CJ or

<>.

If X is a

tautology (comes out T under every Boolean valuation) then

AXIOM SYSTEMS AND NATURAL DEDUCTION

123

X is a theorem of the axiom system above.
Proof:

Form a collection C as follows.

Put a (modal-free)

set s in c if it is not the case that s r

~

.

PC
By Corollary 2. 4, if S € C, S can not contain an atomic

formula and its negation, nor can S contain either
~

J.

or

T•

By Corollary 2. 3, if SeC and
and then again S u { ex , c< } e. c.
either S u { f3

1

1

2

ot

e S then S v {o< } e c
1

Similarly if p e: S then

} e c or s u { (:3 } e:. c .
2

Thus C is a Classical consistency property, as defined
in Chapter Two #5.
Now suppose X is not a theorem of the axiom system.
Then {-X}E.C, for otherwise, -X r

..J... and then by
PC
Corollary 2.4 part 1, X would be a theorem. Since

{-X} e C,

by the Model Existence Theorem for

proposi tiona! Classical logic 2. 5. 1, -X is (Classically)
satisfiable, hence X is not a tautology.
#3

AN UNDERLYING MODAL LOGIC

Although the language used in the axiom system of #2
contains c and <> , there are no rules or axioms that deal
specifically with them.

In this section we introduce a

rule of derivation (or rather, a set of rules) involving D
and 0 to create, axiomatically, a logic we denote as U
(for underlying).

In the present chapter we are not

interested in U for its own sake; we will present a model
theory for it in Chapter Six.

Rather, its present use to

us lies in the fact that all the modal logics of this
chapter, and most of those in the next two, can be

124

CHAPTER FOUR

axiomatically characterized by simply adding special axioms
to U, hence whatever we discover about U can be applied to
them too.
In Segerberg [1971] the logic E (the smallest
Classical system, in his terminology) plays a role similar
to the one U plays here.

Actually U is a stronger logic

than E (when one adjusts for their differing bases, of
course).

A useful fact about E is that one has a

Replacement Theorem for "proved equivalences" (Segerberg
[1971] pg 7). In U we have a stronger Semi-replacement
Theorem for "proved implications", with the Replacement
Theorem for equivalences as a corollary (see #4).

But, in

the context of the present development we find U more
natural to choose as an underlying logic than E.
In most modern presentations of modal logic, only one
of 0 or <> is taken as primitive while the other is taken
to be a defined symbol.

This can be done either way, using

one of
<>X means

~o ~x

0 X means

--~ ~x.

If this is done, only one of
and rules.

D or <> need appear in axioms
We, however, have chosen not to adopt this

plan; for us both o and <> are primitive.
Following G6del [1933], many modern axiomatizations of
modal logics involve a rule of necessitation: from X to
conclude OX.

While this rule has great simplicity, we are

not able to take it as basic, precisely because we want
both 0 and 0 as primitive, and it is difficult to achieve
this with a rule stated entirely in terms of D • So
instead we introduce a family of four rules, all of which
can be summarized in a single statement using uniform

125

AXIOM SYSTEMS AND NATURAL DEDUCTION

notation (unsigned, of course).

The (summarized) rule is:

from Tr v V to conclude TT v v.
0
0
Modalization:

Schematically, Rule of

TI

M:

0

v v

0

lTVV•

There are other equivalent ways of presenting
essentially the same rule. For example,
Remarks:

where V

1

and V

2

are two V -formulas, and v

1

0

and

2

v are
0

their respective instances. Stated this way, it is clear
that the rule(s) are essentially due to Lemmon [1957].
Another alternative is
2
1
TT ::l TT

0

0

We prefer our official version to these because it gives
equal weight to the roles of v and TT, rather than
singling one out for special attention.
Each of the above actually summarizes four rules.
example, our official rule M, unabbreviated, becomes
1)

XVY
OX v DY

2)

~xv ~Y

For

CHAPTER FOUR

126

X v ~y

3)

4)

-xvy
--cxvor.

As a matter of fact, with a little work one can show that
only the first two of these are necessary, the other two
can be derived.

However, we will simply take all four as

basic.
Rule M may be "justified" as follows.

Suppose

TT v -v is valid in a Kripke model <G,B, 11->, that is,
0
0
it is forced by every world in G. We claim the same is
TT v v.

true of

Then there must be some r * such that

Suppose r Jl'- v.

r•,f-v.
0

Pick a world r E'. G.

We argue as follows.

Since every world forces rr v -v

r * 11- rr0 , and hence r If- Tr.
r~v in which case

r If- rr.

0

we have

Thus either r 11- v or else
Hence r If- rr v v.

Now, let S be a set of formulas.
~

0

By a derivation from

in the logic Q we mean a finite sequence of formulas each

term of which is either an axiom of the Classical system of
#2, or is a member of S, or comes from earlier terms by one

of the rules MP or M.

(In practice, we will allow theorems

to occur as terms of proofs, rather than going back to the
axioms each time.)
A formula X is derivable from ~ in the logic Q if it is
the last line of such a derivation.

s r-u x.

we write

We symbolize this by

We often call the members of S axioms.
~U

X, and call X a theorem of U.

We note the following trivial facts.
1)

If S f-

u

X and S~S' then S' f-

u

X.

If 0 f-

u

X

127

AXIOM SYSTEMS AND NATURAL DEDUCTION

2)
3)

r

X then S r X.
If S
U
PC
The Classical Deduction Theorem 2.2 applies to the

logic U as well, for those deductions that do not involve
rule M, since then we are essentially operating in C
itself.
#4

RESULTS ABOUT THE LOGIC U

We show several results of use to us in this chapter and
In our proofs we surpress all details of

the next.

Classical logic manipulations, the reader can fill those
in.

We concentrate on the modal aspect.

We begin by

showing that the usual inter-definitions of o and 0 are
provable equivalences in U.
Proposition 4. 1:
1)

2)

Proof:

ox -

1-

u
1~X=
u

~~~x

3)

-o~x

4)

f-u
t-u

~

D X: -<>~X

~ <>X=-o~x.

We show 1), the other parts are similar.

First, -X v X is a Classical theorem, hence a theorem
of U. From it, by Rule M (version 1) we get <>-X vox,

<> -X::> 0 X follows by Classical logic.
Second, -X v ~-X is a theorem of U, hence by Rule M

from which

~

(version 2) we get -ox v ~<>~X, from which OX::> ~<>-X
follows.
Next we show that rules for introducing

D

proved implications hold as derived rules of U.

and <> into
The first

(with S = 0) is called RR (rule of regularity) in Segerberg
[ 1971].

128

CHAPTER FOUR

Proposition 4.2:
1)

s 1-

2)

Si-

Proof:

X :;,y then

and

<>X=><)Y.

u

Suppose Sf-

u

Then also S f-

X:::>Y.

we get S t-

-

U

D X v 0 Y and

u

-X v Y.

By Rule

hence

The other is similar using version 3 of

OX::>CIY.

u

u

ClX :;:, DY

u

M (version 4),

Si-

If S 1-

Rule M.
Remark:

Suppose we write v and -v 1 for two

and v

and

0

11

-formulas,

v 1 for their respective instances.
0

Then part

1) of the proposition above is one of the four versions of

The reader should have no difficulty verifying the
correctness of the other three versions.

Similarly, part

2) is one of the four cases of the derived rule

s 1- lT :::> 1T
u 0
0
s 1- IT ::> TT 1 •
I

u

To these should be added the following general rules (using
obvious notation) which are correct not only in U but in
Classical logic as well.
Sf-

u

and

0(

1

::::>0(1

1

Sl-

u

0(

2

::::>0(1

2

AXIOM SYSTEMS AND NATURAL DEDUCTION

Sf-

f:3

u

~13'

1

1

Sf-

u

129

fi ::JfJ.'
2

2

Next we give a "semi-replacement" result concerning
implications.
Definition:

First some terminology.
Let X be a formula and let Y be a subformula.

We say an occurrence of Yin X is positive (negative) if,
when that occurrence of Y is replaced by the propositional
variable P, the resulting occurrence of P in X is positive
(negative) as defined in #9 of Chapter Three.
Semi-Replacement Theorem 4.3:

Let the formula X' result

from the formula X by
replacing some (possibly none) of the positive

1)

occurrences of the subformula Y by occurrences of Y', and
2)

replacing some (possibly none) of the negative

occurrences of the subformula Y' by occurrences of Y.
Then
S 1S 1-

Proof:

Y:::lY'

u

X:::lX'.

The proof is by induction on the degree of X.

As a

matter of fact, the induction step is covered by the
various derived rules stated in the remark above.

We leave

the details to the reader.
Corollary 4.4:

Let the formula X' result from the formula

X by replacing some (possibly none) of the occurrences of
the subformula Y by occurrences of Y'.

Then

130

CHAPTER FOUR

S

r-0 yeyr

Sf-

u

X=X'.

Proposition 4.5:
Proof:

If S t-

u

X and Sv{X} f-

u

Y then Sf-

u

Y.

Very simply, in a derivation of Y from SV{X},

wherever X occurs as a term in the derivation, replace it
by the steps of a derivation of X from S.

The result will

be a derivation of Y from S alone.
Remarks:

By Proposition 4. 1'

1-

u

DX := - <> ~x, hence of

DX = -<>~X for any set s. Then by
Proposition 4. 5, DX = -<> ~x may, in effect, be

course s 1-

u

incorporated into any axiom set S.
Corollary 4.4 that if S ~

u

It follows from

Z then also Sf-

u

Z' where Z'

results from Z by replacing occurrences of - <>conversely.
too.

by o and
Similarly for interchanges of - o- and <>

Thus we have the full effect of inter-definability of

our two modal operators.
#5

THE LOGIC K AXIOMATIZED

.In #3 we "justified" Rule M by showing that if

v v is
0
0
valid in a Kripke model, then for any world r of that
TT

model'

r I~ Tr v v' hence TT v v is also valid in that

model.

A quick look at that argument shows we never used

that

TI

0

v v

0

held in every world of the model, but only in

worlds accessible from r ;
held at r .

equivalently, that D ( TI

Thus that argument also established the

0

v v )

validity, in all Kripke models, of the schema
0 ( TT

0

v v ) :::J ( TT v v ) .
0

We now propose taking all such

0

131

AXIOM SYSTEMS AND NATURAL DEDUCTION

formulas as axioms, to see what is derivable from them in

u.
The schema just stated involves uniform notation and
so summarizes four different forms, depending on a choice
of iT and v .

These forms are as follows.

1)

0(XvY)::>(¢XVDY)

2)

O(~Xv-Y)=>(-oXv-<>Y)

3)

O(XV-Y)::>(OX v-¢Y)

4)

0(-XVY):::>(-DXvOY).

Now we showed in 114 the inter-definability of a and <> in
U. It is easy to see that as a result if we let S be the
set of all formulas of any one of these four forms, all
formulas of the other three forms are then derivable from S
So we will narrow our choice of axioms considerably,

in U.

essentially taking form 4 as basic. Not quite, however.
~B v A is equivalent to B =>A, so form 4 can be rewritten as
O(X::>Y)::>(OX::>DY).

This version has a certain aesthetic

It can be thought of as saying that 0

appeal to it.

distributes over

:::>

(and thus has an interesting

resemblance to axiom schema A2 of 112).
form that has become traditional.
Definition:

Anyway, it is the

0

C is the set of all formulas of the form

D(X ::>Y) ::l( D X::> OY).

Remark:

In Lemmon [1966] a logic C2 is presented.

0

It is

quite easy to check that X is a theorem of C2 iff C ~ X.
u
In Segerberg [1971] the concept of a regular logic is
introduced (pg 12).

He calls the smallest regular logic C;

it coincides with Lemmon's C2. We do not wish to
investigate regular logics, as such, any further until

132

CHAPTER FOUR

Chapter Six.

We are interested now in the stronger concept

of normal logic (also defined in Segerberg [1971] pg 12).
As a matter of fact, the smallest normal logic is the logic
K, which we have considered from the point of view of model
theory and of tableaus, and which we are about to
axiomatize.
Every world of a Kripke model forces T •

Since every

world forces T , then every world also forces D T.
Definition:

K0 is c0 u { o T } •

It is our intention to show X is K-valid iff K0 ~U X.
More generally, for a set S of formulas, we will show
(using the notation of Chapter Three #2)
0

S I=K X iff S UK 1- X.
0
u
Thus the set K provides an axiomatization of the modal
logic K (see #6).
In G6del [1933] the Rule of Necessitation was
introduced, as part of an axiomatic characterization of
what is now known as Sl!.
inferred from X.

This rule allows OX to be

Schematically,

Rule of Necessitation:

X

ox.
Most axiomatic formulations of the logic K take the Rule of
Necessitation as primitive, and do not build on the logic U
as we did.

We show this is an equivalent approach.

133

AXIOM SYSTEMS AND NATURAL DEDUCTION

First we show the Rule of Necessitation is a derived
rule of K, as we formulated it.

More generally, we show it

is a derived rule of any axiomatically characterized logic,
built on U, that has D T as one of its axioms.
Proposition 5. 1:
Proof:

If S v { Cl T } 1- U X then S u { Cl ,. } t- U D X.

Suppose X can be derived from S u { D 1} in U.

From

X we trivially can get - 1 v X, and from it by Rule M
(version 4), ~OT V QX. Since DT is one of the axioms,
OX follows.

In the other direction, suppose we have an
axiomatically formulated modal logic L for which the Rule
of Necessitation holds (and which has a Classical logic
foundation).
First, T must be a theorem, hence we have 0 1

by the

Rule of Necessitation.
Second, suppose all formulas
are derivable in L.

CJ ( TT

0

v v ) ::J ( TT v v)
0

Then our Rule M is trivially

derivable, as follows.

Suppose we have TT v v .

the Rule of Necessitation,
follows by modus ponens.

D ( TT

0

0

0

Then by

v 11 ) , from which rr v v
0

From now on we will freely make use of this alternate
way of axiomatizing modal logics that are at least as
strong as K, whenever it suits our convenience to do so.
But our "official" axiomatizations will be based on U; the
Rule of Necessitation will not be primitive.

134

CHAPTER FOUR

#6

CORRECTNESS AND COMPLETENESS OF THE K AXIOMATIZATION
0

Theorem 6.1:
Proof:

If S V K 1-

U

0

Suppose S v K f0

u

X then S I=

X.

K

X.

Then there is a derivation D

of X from SVK in U. Now, take a Kripke model <G,B, 11-> in
which the members of S are valid. We have already observed
0
that the members of K are valid in every Kripke model
(including this one).

The same is the case for the

Classical propositional axioms.

We already checked that

Rule M turns a formula valid in a given model (this one,
say) into another such formula.
Rule MP.

The same is the case for

Then each term of the derivation D must be valid

in <G, B, II->, in particular, X is valid.
arbitrary, we have verified that S II=

K

Since the model is

X.

Thus we have Correctness for our K-axiomatization.

To

show Completeness we need a simple lemma first, then we can
apply the Model Existence Theorem.
Lemma 6.2:

Proof:
Part 1)
U.

1)

1-

2)

c 1- ( DX A CJY) ::::> Cl(XA Y)
u

3)

c 1-u (OX 1\ DY)"" O(XAY).

u

O(XAY) ::>(OX A DY)

0
0

(XAY)=>X is a tautology, hence derivable in

From it we get Cl(X.AY) ::::>OX by Proposition 4.2.

Similarly we can get D(X "Y) ::> DY, and from these two we
can produce O(X" Y) ::> ( Cl X " IJY) by standard Classical
logic techniques.

135

AXIOM SYSTEMS AND NATURAL DEDUCTION

Part 2)

X:::> [Y ::J (X .1\ Y)] is a tautology, hence
0

derivable in U from C •

From it, by Proposition 4.2,

CJX=>D[Y::J(XAY)] follows.

Also

0

O[Y=>(XAY)]::>[OY :::> D(XAY)] is a member of C, hence
derivable. From these we get DX::J[ClY ::J D(X/\Y) by
Classical logic manipulations, and thus
(OX 1\ OY) :::> CJ(X A Y).

Part 3)
Theorem 6.3:
Proof:

--

follows from parts 1) and 2).
If S

rK X then S v K0 rU X.

As usual we show the contrapositive.
0

So we begin

by supposing S UK )- X and we show S ,¥ X.
K
U
First, some handy simplifications. As defined, a

v-formula is of one of two forms, OZ or ~<>z. But we
have shown that, in a logic based on U, occurrences of

- <> Z can be replaced by occurrences of 0 - Z and
conversely, without affecting provability. Consequently we
may conveniently assume that all v -formulas we meet are of
the form OZ.
the form ¢Z.

Similarly we may assume any rr-formula is of
Further, we have the machinery of Classical

logic available in U, so A is commutative and associative.
Thus it will do no harm (indeed, some good) if we drop
parentheses and write (A AA A ••• A A ) instead of
n
2
1
(A /\(A A(A A ••• AA ) ••• )).
n
3
2
1
Now, let us call a finite set {A ,A , ••• ,A}
0

S-K -inconsistent if

1

2

n

SVK f- (T A A AA "···"A)~ ..L..
n
2
1
U
(The T is thrown in to take care of the possibility of no
A., that is, the empty set.
1
in a moment.)

We have more to say about this

CHAPTER FOUR

136

0

0

Call a finite set S-K -consistent if it is not

S-K -inconsistent.
0

Let C be the collection of all
We claim C is an

(finite) S-K -consistent sets.

S-compatible K-consistency property, as defined in Chapter
Two 115.
The material necessary to check that C is a Classical
Also,

consistency property is essentially contained in #2.

We leave

that C is S-compatible is quite straightforward.

these items to the reader, and we concentrate on the modal
condition appropriate to K.
Suppose the finite set F is in C and -rr E F.

We must

show F# U { 1T } E C, where Fll is defined for K in the chart
0
in Chapter Two #5. Equivalently, we suppose TieF, but
Fll u { rr } t. C, and we show F ~ C.
0

Say F =

{OA , ••• , DA, <>B,C , ••• ,C}. Here, in accord with
k
1
n
1
the simplifications discussed above, DA , ••• , DA are all
n
1
the v -formulas of F, <> B is the rr -formula we are

concerned with, and C , ••• ,C
Now Fll U { TT
F# v { TT

} ¢

0 0

S UK

0

1-

} :

k
1
{A , ••• ,A ,B}.
n
1

are the other formulas of F.
Since we suppose that

C it must be that
U

( T 1\ A

1

1\ • •• 1\ A

n

A

B) ::> .L •

From this, by Classical logic, we get successively,
SUK

0

0

f-

(TAA A ••• AA ):=~(B::>..L-)
n
1
1- (TAA A ••• AA )::>~B
n
1
U
U

SVK
Note: we are sure B exists since we are supposing rr e. F,
but we are not guaranteed that there are any A 's.
i

If

there are none, and we had not included the I conjunct,
the left hand side of the implication above would be empty
and, in fact, the whole proof would break down.

There

really can be surprisingly much ado about nothing.
Now, by Proposition 4.2,

137

AXIOM SYSTEMS AND NATURAL DEDUCTION

SuK

0

1-

U

0 (T

1\

A

Next, using Lemma 6.2,
S VK

0

I-

U

( DT

1\

1

1\ ••• A A

ClA

n

1

A ••• 1\

) ::::> 0 -B.

DA ) :::> 0-B.
n

Then by Classical logic manipulations,
S VK

0

1-U ( OT A oA 1 A ••• 1\ ClAn)::>(- D-B:::> .L),
SVK 1- ( aT A a A /\ ••• /\ 0 A A - D-B) ::> ..!... ,
1
n
0 U
S VK 1-U DT"=>[( OA 1\. ••• /\DA 1\. -D-B):::> .L].

0

10

But OT isamemberofK

(and

n
-o-Bcanbereplacedby

<>B) hence
S UK

0

1- ( 0 A 1\ ••• 1\ o A 1\ <>B) :::> .L,
U
n

so of course,
S UK

0

1-

U

( T /\ D A " ••• 1\ 0 A 1\ ~ B 1\C

which implies F t C.

1

n

1

/\ ••• 1\ C ) :::> ..I.,

k

We have verified that C is an S-compatible
0

K-consistency property. Now, suppose S v K .f- X.
0
u
{~X} must be S-K -consistent, since otherwise
SVK

0

from which

1-

u

Then

(TII.~X):::>..l-,

0

SVK 1- T"=>(-X~.L)
0 u
SUK 1- T:::>X
0 u
S UK 1- X.
u
Thus { ...... X} E C, so by the Strong Model Existence Theorem
2.5.3, there is a K-model in which the members of S hold at
every possible world, and in which {--X} is (locally)
satisfiable, so X is not valid.
concludes the proof.
#7

That is, S ¥

K

X.

This

THE LOGICS K4, T, S4, D AND D4 AXIOMATIZED

Definition:

We define certain sets of formulas as follows:

138

CHAPTER FOUR

0

= {~T }
0
T is the set of all formulas of the form OX ::::>X
40 is the set of all formulas of the form OX:::> 0 OX
0
0
D = K UD
0
0
T = K UT
0
0
K4 = K U4
0
0
0
D4 = K UD U4
0
0
0
S4 = K VT V4
D

.

There is a certain ambiguity of notation now: as just
introduced, T, say, is a set of formulas, while as
introduced in Chapter One #2, T is a certain class of
Kripke models.

This double usage should cause no

difficulty, as context will make clear which is meant.
The deontic logics are often axiomatized by adding all
formulas of the form OX::::> <>X as axioms.
equivalent to just adding

~T

This is

(if K is available), as we

now show.
First, suppose we have
to the K-machinery.

<>T as an axiom, in addition

Then

X ::::>(T :::>X)

Classical axiom

X::::> (-X ::::> -T)

Classical manipulation

OX::::>O(~x=>~T)

Proposition 4.2

DX=>(O~X=>O~T)

using the K axiom schema

ox ::::>(-o~T ::> -o-X)

Classical manipulation

OX:::>(<)T:::><>X)

replacement

<>T::::>(DX::::><)X)

Classical manipulation

0 X ::>\>X

since

<) T

139

AXIOM SYSTEMS AND NATURAL DEDUCTION

Next, suppose we have all formulas of the form
IJ X ::::> <>X as axioms.

Then trivially,

DT

::l OT.

is an axiom of K, so <)T follows.
Another way of looking at this is as follows.
all formulas of the form OX ::>X.

Now

But OT
0
T is

o T :::> T is automatic
0

by Classical axiom A5. The other "basic" member of T is
O..L. :::> ..L, or equivalently --..1... ::l -0..1., or T :::> <>T.
And
this is further equivalent to <>T.

0

Hence, in a sense, D
0

is just the most basic special case of T not already
available because of Classical logic.
Lemma 7.1: Let L be one of D, T, K4, D4 or S4. Any member
of the set of formulas L is valid in all L-models.
Proof:

Left to reader.

Theorem 7.2:

Again let L be one of D, T, K4, D4 or S4.

S u L 1-

X then S F X.

Proof:

Just like the proof of Theorem 6.1, but using the

U

If

L

Lemma above whenever a member of L occurs as a term in the
derivation.
We thus have the correctness of the axiomatizations
proposed.

Now we show completeness.

Theorem 7.3:
S4.

If S I=

Proof:

L

Once again, let L be one of D, T, K4, D4 or
X then S u L t- X.
U

We simply go through the steps of the proof of

Theorem 6.3, with suitable modifications.

140

CHAPTER FOUR

Thus, call {A , ••• ,A} S-L-inconsistent if
1

SVLf-

n

(TI\AA ••• AA):::>..L
U
1
n
and call {A , ••• ,A} S-L-consistent if it is not
1
n
S-L-inconsistent.
Let C be the collection of. all (finite) S-L-consistent
sets of formulas.

We claim that, for each choice of L, C

is an S-compatible L-consistency property.

From this, the

desired completeness result follows just as in the proof of
Theorem 6.3.
We check this claim for two choices of L, namely D and

K4.
Suppose L is D.

Also let us suppose F is a finite set

and F# t C; we show FE C (here F# is defined suitable for
D, of course).
Say F = { DA , .•• , OA ,C , ••• ,C} where DA , ••• , DA
1

n

are all the V-formulas of F.

1

Since F# ~ C,
SVDf-

k

1

Then F# = {A , ••• ,A}.
1
n

n

(TI\A A ••• AA):::>.L.
1
n
From this we get
U

SVD 1-

U

0 (T 1\ A

1

A ••• AA) ~ O..L
n

0

but, as we observed earlier, the D axiom
equivalent to

0...1.. =>.L

<>T is

here, so

S v D 1-

D(T/\A A ••• AA) :::> ..L
1
n
SuD 1- ( OT 1\ OA A ••• /\ OA) ::> ..L
1
n
U
S v D 1- ( DA A ••• 1\ DA ) ::> .J...
U
1
n
SUD 1- ( T 1\ 0 A 1\ •• • 1\ OA /\ C 1\ • •• /\ C ) :::> .L.
U

Thus F E C.

U

n

1

1

k

This completes the verification that C is a D

consistency property in this case.
Next, suppose L is K4.
finite set, and now

"IT~ F

Again let us suppose F is a

and Ffl v { IT } ~ C ; we show
0

AXIOM SYSTEMS AND NATURAL DEDUCTION

141

F ~ C (F# now is defined according to the K4 conditions,
using the chart in Chapter Two #5).
Say F = {DA , ••• , DA ,.OB,C , ••• ,C }, where the DA
i
k
1
n
1
TT -formula

are all the v -formulas of F, and 0 B is the
being considered.

In this case, Ffl V { TT } =

{OA , ••• ,DA ,A , ••• ,A ,B}.
n
n 1
1
have

0

Since Ff/ u { lT } E. C we
0

(TADA /\ ••. ADA AA A ••• /\A 1\B)::)..L.
n
1
n
1
From this, by now-familiar steps, we get
SVK41-

U

SUK4 1-

U

( DT 1\ ClOA

••• /\ DA ) :::> D~B.
Now OA

1

A ••• A ClQ A A aA 1\
1
n

n

o DA

is a member of K4, and o o A is displayed
i
in a negative occurrence in the implication formula written
i

~

i

to the right of the

1- above.

u

Hence by the

Semi-Replacement Theorem 4.3,
S U K4 1-

U

( 0 T A 0 A /\ ••• /\ D A /\ 0 A /\.
n
1

••• /\ DA ) :::> D~B.
n
Then, successively,
SVK4 1-

( 0 A A ••• ADA)::) D~B

n
1
u
S U K4 1- (D A A ••• ADA A--a-B) ::l .L
n
1
u
S u K4 1- (T ADA A ••• AOA/\ <>BAC /\
1
n
1
u

... /\ c ) :::> J...

k
Hence F If C.

This is enough to verify that c is a K4

consistency property.
The other choices of L are left to the reader for
checking.
#8

FINITE AXIOMATIZABILITY, PART I

In Kripke [1965] and Lemmon [1965] it was proved that T can

142

CHAPTER FOUR

not be axiomatized using finitely many axiom schemata, if
modus ponens is to be the only rule of inference. (Also see
Segerberg [1971] pg 182.)

Of course, if the rule of

necessitation is also allowed, finitely many axiom schemata
suffice; the conventional axiomatization given in #7 shows
this.

In this section and the next we look at the question

of finite axiomatizability in more detail.

We will treat

things semantically, using the logical consequence notation
of Chapter Three #2 that distinguishes between local and
global assumptions.

To relate our presentation in this

section to the Kripke-Lemmon-Segerberg versions, we note
that, in effect, the rule of necessitation applies to
global assumptions but not to local ones.
We begin with some notation, to handle more
conveniently the business of axiom schemata.
Definition:

Let X be a formula.

By a substitution

instance of X we mean the result of replacing (uniformly)
each variable P. of X by some formula z..
l
l
For example, if X is D(P :>Q) ::> ( 0 P :::> o Q) where P and
Q are variables, then a substitution instance of X is
O((YAZ)::>OQ)::>(O(YAZ) :>OOQ).

Definition:

IfF ,F , ••• are formulas, by [F ,F , .•• ]we
1 2
1 2
mean the set of all substitutipn instances ofF ,F , •••
1

2

For example, if P is a variable, then [ o P ::> P J is the
0

set called T in #7.
The following semantic result could be established by
an appeal to various completeness and correctness results
for K and T already shown.

However a direct semantic

143

AXIOM SYSTEMS AND NATURAL DEDUCfiON

proof, via the Model Existence Theorem, is much nicer.
Proposition 8. 1:

X is T-valid iff [CP::::>P] ~

K

X.

Proof: If [ c P ::> P] 1= X then X holds at every world of
K
every K model in which the members of [0 P::>P] are globally
satisfied, hence X holds in every T-model: X is T-valid.
Suppose [ 0 P => P] ~ X. Then there is some K-model
K
<G, R, 11-> such that the members of [ 0 P :::~ P] hold at every
world, but X does not hold at some world.
let

{r 0

0

For each r e.G,

r = {TZ I r If- Z} l) {FZ I r .11'- Z}. And let c =
I r E G}. It is easy to see that c is a

!-consistency property, and FX belongs to some member.
That X is not T-valid follows by Theorem 2.5.2.
This result says that a single axiom schema suffices
to turn K into T, if its instances are used as global
assumptions.

The main result of this section, concerning

T, is that there is no counterpart using local assumptions.
More precisely,
Theorem 8.2:

There is no finite list of formulas

F ,F , ••• ,F

such that

1

I=

K

2

n

X is T-valid iff

[F ,F , ••• ,F ] ---,)X.
1

2

n

We will show this after we have worked our way through
several preliminary results.
Now, Proposition 8.1, when combined with the Turnstyle
Deduction Theorem (3.5.2) and the Finiteness Theorem
(3.4.1), easily gives:

CHAPTER FOUR

144

FK [ 0

0

( 0 p ":) P). 0

1

( 0 p ":) P). 0

2

( D p ::l P) •••• J --;X

for exactly those X that are T-valid.

We begin by showing

no finite number of these particular local assumption
schemas will suffice to get us all the T-valid formulas;
indeed, we show the first n will not get us the n+1st.
More precisely,
Lemma 8.3:

Let P be a variable.

Then it is not the case

that

0
n
n+1
FK [0 (DP:)P), •••• 0 (OP:::lP)]~D
(ClP:::>P).

(Note that schemata appear on the left of the arrow, while
a particular formula appears on the right.)
Proof:

Construct a model <G, R, 11-> as follows.

G=

r , r , ... , r . r }

0
1
n
n+1
Fori= 0,1, ••• ,n,
r R r
and
i
i+i
Schematically,

r R r .
i

i

Let v be the interpretation v( r ,A) = F for all

r

and all variables A.

This determines a unique relation lr·
The reader may show that in the resulting K-model <G, R, 11->,
0
n
all the members of [ 0 ( o P? P), ••• , 0 ( o P::> P) J hold at
n+1
r, but 0
(OP?P) does not.
0

Next we need a few general results about logical
consequence, which we state without proof.
Definition:

We say a set S of formulas is closed under

AXIOM SYSTEMS AND NATURAL DEDUCTION

substitution if every substitution instance of a member of
S is again a member of S.
For example, it is easy to see that [F ,F , ••. ,F]
1 2
n

must be closed under substitution.
Proposition 8.4:

Suppose Sand U are sets of formulas

closed under substitution, L is one of our modal logics,
and X is some formula.
S I=

If S 1=L U ---+X then also

U -?X' where X' is any substitution instance of X.

L

Let S, U, V and W be sets of formulas,

Proposition 8.5:

and let L be one of our modal logics.

If S I= u~x for

every X E V and S I=L V -w then S t=L U ~w.

L

Now finally we are ready for the main proof of the
section.
Proof of Theorem 8.2:
Let T be the set of formulas X such that
k 0

k

I=K [ 0 (DP=>P), ... , 0 (OP=>P)] -x
and let Tco = UT •
K k

(Here P is some variable, of course.)

By remarks earlier in this section (and the finiteness
theorem) T..., is just the set of T-valid formulas.
Clearly K<:T <:T c;.T .;;; ... c;;T_ and Lemma 8.3 implies
0

1

2

the sequence is strictly increasing; T ~T

• Also
j
j+1
Proposition 8.4 implies that each T is closed under

substitution.
V c;;;;,r j and

Likewise Propositionj8.5 implies that if

I=K V ~X for a formula X, then X e. Tj; loosely,

each T is closed under local consequence in K.
j
Now suppose there were a finite list of formulas
F ,F , ••• ,F
1

2

n

such that X is T-valid iff

145

146

CHAPTER FOUR

I= [F ,F , ••• ,F ]~X. Trivially, each F must be
K
1 2
n
i
T-valid, hence a member of T_, and hence a member ofT
J

some j.

Since the T form a chain, and F , ••• ,F is a
j
1
n
finite list, then for some single T , we have

F , ••• ,F

E T

j

for

k

•

Since the T are closed under

1
n
k
j
substitution, [F , ••• ,F ] c;;;;T • But then, by the remarks
1
n
k
above, we would have X~ T for every X such that
k

[F , ••• ,F J~x. That is, T.,..c;;;;T, which
K
1
n
k
contradicts the fact that the T.-chain is strictly
F=

increasing.

l

This ends the proof.

Theorem 8.2 might be paraphrased:

There is no local

axiomatization of T over K using finitely many axiom
schemas.
One can prove a similar result for D; we sketch, since
the work is not much different than that above.
Theorem 8.6:

There is no local axiomatization of Dover K

using finitely many axiom schemas.
To prove this one needs an analog to Lemma 8.3, namely
Lemma 8.7:

It is not the case that

1= K o0 0 T , 0 1 0 T , ••• ,

r:P ¢ T ----+on+ 1 <> T

(note that this time, on the left of the arrow, we have
actual formulas, not schemas).
Proof:

Consider the model <G, R, II-> where G =

{ r, r , ... , r, r
0

1

schematically,

n

n+1

}; fori= o,1, ... ,n, r 1.R r 1.+ 1,

AXIOM SYSTEMS AND NATURAL DEDUCTION

147

and an interpretation v is defined any way you like, and
used to determine

~.

In this model, each of o0 () T , o10 T , ••• , On() T
holds at r , but On+ 1<> T does not.
0

Now to prove Theorem 8.6 itself, let D be the set of
k
formulas X such that

I=

K

0
D<>T,

1
l:J()T, ••• ,

ok <>T - x

and let D..., = U D

The lemma just proved shows the D
1<. k
k
sequence is a strictly increasing chain. And it is easy to

see that D_ consists of exactly the D-valid formulas.
0

1

k

Incidentally, since the set { 0 <> T , 0 <> T , ••• , D 0 T }
involves no variables, it is trivially closed under
substitution.

The rest of the argument is essentially as

it was for Theorem 8.2.

On the other hand, once transitivity enters the
picture, things change quite a bit.

We give one of several

similar results by way of illustration.
Theorem 8.8:

K4 has a local axiomatization over K using

finitely many axiom schemas.
Proof:

In the same way Proposition 8.1 was proved, one may

show
X is K4-valid

iff

[ 0 P :::::> OCJ P] I=

K

X.

Use of the Turnstyle Deduction Theorem (3.5.2) easily turns
this into
X is K4-valid

iff

148

CHAPTER FOUR

0

1

F [ 0 ( OP _:::) 0 OP)' 0 ( 0 p ;:) 0 OP)'
K

2

0 (OP :::l ODP), ••• J-X
But it is easy to see that, for each n,
0

1

!:: [ 0 (OP=>DDP), O(DP::>ODP)]
nK
~o (OP :::> ODP)
j

D (OP :::> DOP) :J o

(since

j+ 1

(OP:;, 0 DP) is an instance of

the first of these schemas, for any j ~ 1).

Then
Propositions 8.4 and 8.5 give us that X is K4-valid iff

F

K

#9

0

1

[0 (DP :JODP), 0 (OP::>ODP)]---7X.

FINITE AXIOMATIZABILITY, PART II

In #8 it was shown that T has no local axiomatization over
K using finitely many axiom schemas (Theorem 8.2). On the
other hand, by Proposition 8.1, finitely many global
schemas will suffice.

A reasonable next question is

whether a finite number of global axioms, not schemas, will
suffice to get us from K to T.

The answer is no.

This is

an immediate consequence of the following theorem, that
shows finitely many global axioms will not take us from the
stronger logic D to T.
Theorem 9.1:

There is no finite list of formulas

F ,F , ••• ,F

such that X is T-valid iff

1

2

n

1

2

n

F ,F , ••• ,F

I=D X.

Proof: Suppose otherwise. Since F ,F , ••• ,F can be
1 2
n
replaced by its conjunction, we may suppose we have a
single-formula global axiom A for T over D.

That is,

A F X iff X is T-valid. Let P be some variable that
D
does not occur in A. Since DP ':) P is T-valid then

149

AXIOM SYSTEMS AND NATURAL DEDUCTION

A I=

D

ClP;:, P.

Then by the Turnstyle Deduction Theorem

3.5.2, for some n,

n
1
0
OA,DA, ••• ,OA~OP:::>P,
n
1
0
D
so of course I= ( 0 A A 0 A 11 ••• /\ D A)-----+ OP::J P.

And

then, by the Arrow Deduction Theorem 3.5.1,
n
1
0
( D A A 0 A 1\ ••• II D A):::> ( 0 P :::> P) must be D-valid.

But

I=

D

hypothesis and conclusion share no variables, so by
n
1
0
Corollary 3.8.2, either ~< D A/\ 0 A 11 ••• /1. D A) or DP:::JP
If the first alternative were the case, then
n
~ ( 0 A 1\ 0 A /1. ••• 1\ D A) would also be T-valid, which is
absurd. The second alternative is easily ruled out by an
is D-valid.
0

1

appropriate D-model.
In a sense the above is somewhat artificial. It stems
from the infinity of variables. One might ask: if the
number of variables is restricted to a finite set, will a
finite global axiomatization serve? We do not know the
answer.
On the other hand, to get a particular formula X in T,
only a finite number of instances of OP:::>P will be needed,
Is there any easy way of saying which ones?
This is the content of the next theorem, after which we

of course.

also establish similar results for K4 and S4.
is essentially taken from Fitting [1978].

The material

For a formula X, let T(X) be the (obviously
finite) set of formulas consisting of DA :::>A where 0 A is a
subformula of X, and A:::> <>A where <>A is a subformula of X.

Definition:

Theorem 9.2:

iff

T(X) I=

K

X.

150

CHAPTER FOUR

Proof:

If T(X) F X it is trivial that

F X.

K

T

concentrate on the other direction.

We

Suppose T(X) -!= X. We show ~ X. Now, let C be the
K
T
collection of all sets S of (unsigned) formulas that are
locally satisfied in some K-model in which T(X) is globally
satisfied.

It is easy to show that C is a T(X)-compatible

K-consistency property.
that {-X} € C.

And since T(X) ~

K

X, it follows

We also note for future use that i f S € C:

then any subset of Swill also be in C.
Next, let C(X) be the collection consisting of all
subformulas of X, and their negations.

Let CfC(X) be the

collection of all sets of the form Sf) C(X), where SEC:.
Then CfC(X) is also a K-consistency property.
straightforward to show.

(This is

It was essentially stated

earlier, as Proposition 3.12.1, for the signed version of
consistency property.)

Further, since -X E C(X), we still

have {-X} e:c[C(X).
We claim that C[C(X) is, in fact, a !-consistency
property.

Since we already know it is a K-consistency

property, there is only one more item to check.
suppose SECfC(X) and

Thus,

ves; we must show SU{ v }edC(X).
0

Since SEC rC(X) then S is the intersection of a member
of C with C(X), but Cis closed under subsets, so S itself
must be a member of C.

Say v

is -<>A (the argument is

similar if V is DA).

We show S U {--'A} e: C fC(X).

Since- ()AE S then -<>AEC(X) so either

~<)A

is a

subformula of X or ...... <>A is the negation of a subformula of
X.

No matter which, ¢A is a subformula of X, hence A:::> ¢A

is in T(X).

Since S € C: and C is T(X)-compatible,

S U {A::> <>A} e: C.

Now A:::>~ A is a (3 -formula, hence either

S U{A ::><>A} U {...... A} E C or S lJ {A :::> <>A} u { ¢A} € C.

But

AXIOM SYSTEMS AND NATURAL DEDUCTION

151

so the second of the two alternatives is

~<>A E S

impossible since members of C are locally satisfiable.
Thus the first alternative holds, and hence also
S lJ {~A} E C since C is closed under subsets.
Now (S lJ {~A}) n C(X) is in crc(X).

Since <:>A is a

subformula of X, so is A, hence -vAEC(X).

Thus, in fact,

SlJ{~A}E: crc(X).

We have verified that c[C(X) is a !-consistency
property.

Since {--X}ECfCCX), by the Model Existence

Theorem 2.5.2, {-X} is !-satisfiable, X is not T-valid,

¥

T

X.

Definition:

For a formula X, let K4(X) be the finite set

of formulas consisting of DA :::> CJ DA where
subformula of X, and

DA is a

()()A:::> <:>A where OA is a subformula

of X.
Theorem 9. 3:
Proof:

iff

K4(X) I=

K

X.

We follow the general plan of the previous proof.

Thus let C be the collection of all sets S that are locally
satisfied in some K-model in which K4(X) is globally
satisfied.

Then C is a K4(X)-compatible K-consistency

property.
Now suppose K4(X) 1=

X, which is the
X. We show ,.j=
K4
K
more difficult half of the proof. Since K4(X) 1= X, it
K
follows that {~X} E C.
Define C(X) and CfC(X) as in the previous proof.
Again CIC(X) is a K-consistency property, and
{~X}ECfC(X).

We will show that CfC(X) is actually a

K4-consistency property.

CHAPTER FOUR

152

We begin with a sort of lemma.
and

~¢AE.S

then

OAES

Likewise if SEC,

and DAEC(X); then SU{DDA}EC.
~¢AEC(X)

Suppose SEC,

SV{~¢

¢A} EC.

We demonstrate"the first of these two assertions; the
So, suppose S E: C and

second is similar.
OA E C(X).

DA E: S where

Then IJA is a subformula of X hence

( D A ::;, a o A) E. K4 (X).

Now C is K4-compatible, so

S u { o A ::> o DA} E. C.

Then by the (3 -condition, either

SU{DA::> DDA}U{_..oA}EC or
SU{OA::>DDA}U{ClDA}E C.
D.A E C.

since

The first is impossible

So we have the second, and hence also

S U { o o A} E C, since C is closed under subsets.
Next, another "internal lemma" whose statement we give
following its proof.

Suppose S E ctC(X).

C is closed under subsets.

Suppose

Then S e: C, since

DA E S.

Then

OA€C(X) too hence, as we just showed, Su{ooA}E.C.

But

this can be repeated: if also DB E S i t follows that
S u { o o A} v { c o B} e: C.
~¢A,

of course.

Similarly for formulas of the form

Since Sis finite (being a subset of

C(X)) we can thus go through each formula in S of the forms
tJ A and

~¢A.

Thus we have the following.

Let S* = S u { o o A

I EJA € S} u { ~ ¢ <>A 1- <> A E. S}.

If

SE:c:[C(X) then S*EC.
Now to show C

r C(X) is actually a K4-consistency

property.

The only condition that needs checking is the

following:

if SE..-CrC(X) and 1T E. S then

{v

cr

things relative to K or to K4.)

We proceed to show this

I v e: S} u { 'V I 'V e: S} u { rr } E C(X). (We have
0
0
written out the definition of S# because # means different
condition holds.

AXIOM SYSTEMS AND NATURAL DEDUCTION

r

Suppose S E: C C(X) and

153

Then S* E. C and 1T €: S*.

iT' e S.

Since C is a K-consistency property,

{ -v I v E. S*} u { n } e: C. But it is easy to see that
0
0
{ -v I II E. S*} = { v 0 1 v E S} u { V I v e: S}. Hence
0
{ v 1 v e. S} u { v I v e. S} u { n } ec. But since s ~C(X),
0

0

1£ S} I) { rr }c;;c(X)
0
0
also, hence this set is a member of CIC(X).

it follows that { v

I v E. S} u {VI v

Thus cjC(X) is a K4-consistency property.

f:

{-X}Ecrc(X), and it follows that
Existence Theorem 2.5.2.

x by the Model

For a formula X, let S4(X) = T(X) U K4(X).

Definition:
Theorem 9.4:
Proof:

K4

iff

S4(X) !=

K

X.

By a combination of the methods used in the

preceeding two proofs.
#10 A CLASSICAL NATURAL DEDUCTION SYSTEM
So-called natural deduction systems go back to Jaskowski
[1934] and Gentzen [1935], and by now there are quite a few
For example, see Prawitz [1965], especially

versions.
Appendix C.

In Smullyan [1965] a system was presented that

related well to tableau methods.

In this section we

present yet another system, one that is extremely natural
from the point of view of uniform notation (a point of view
we have adopted uniformly) and which has rules that are
more like the traditional ones than those of Smullyan
[1965].

Incidentally, there have been many "book-keeping"

devices developed for natural deduction systems: Quine's

CHAPTER FOUR

154

stars and Jaskowski's strings of numerals, for example.

We

have chosen to use a nested-box technique that was
introduced by Jaskowski in 1929.

But it will be obvious

that our introduction and elimination rules can be used
with many different formats.

One way in which our system

differs from those in the literature is that we have chosen
to use signed formulas.

This is not essential, one gets an

unsigned version from ours by dropping T's and replacing
F's by negation symbols.

But by keeping to a signed

version now, we make the development of a system for
Intuitionistic logic easier in Chapter Nine.
In a natural deduction system, typically, there are
two kinds of rules.

One kind produces conclusions that are

simpler than the premises involved because some connective
has disappeared.

These are called elimination rules.

An

example is: one may conclude TX and also TY from T(X A Y).
The other kind of rule produces a conclusion more
complicated than any of the premises involved because a new
connective has appeared.
rules.

These are called introduction

An example is: one may conclude T(X A Y) from the

two premises TX and TY (in either order).
The most characteristic feature of natural deduction
systems is that one is allowed to make assumptions, deduce
things from them, then later on discharge the assumptions.
A proof is a deduction in which all assumptions have
been discharged.
Now, assumptions are discharged, essentially, by
incorporating assumption and consequence into a single
formula by the introduction of a connective, hence
introduction rules are appropriate.

An example is: if,

from TX as an assumption one may deduce TY, then one may

AXIOM SYSTEMS AND NATURAL DEDUCTION

155

conclude T(X =>Y) without TX as assumption.
For example, based on the discussion thus far, we
might "prove" T( (X A Y) ::> (Y A X)) as follows. Assume
T(XA Y). From it we get TX and also TY by the elimination
rule for A mentioned above.

From TX and TY we get T(Y 1\ X)

by the introduction rule for A above.

Since, from T(X/\ Y)

as assumption, we were able to derive T(Y "X), then we may
conclude T((XAY)::>(YAX)) without any assumptions. Note:
this use of the term assumption should not be confused with
local and global assumptions in modal arguments.
Now for the more formal details. Deductions are
written as (vertical) sequences of signed formulas in boxes
(according to rules given below).

The boxes may be nested.

When a new assumption is introduced, a new box must also be
introduced, with that assumption as the first entry. (Thus
the first item in a box is always an assumption.) If a box
appears inside another box, any formula in the larger box
may be repeated in the smaller box.

Apart from this, a

formula in a box must be inferred from those above it by
one of the rules of derivation (given below). When an
assumption is discharged, a box is closed off, and the
conclusion, which is now independent of the assumption, is
written just below the box.

In practice, the following

procedure is quite easy. When an assumption is about to be
made, one first draws a line, thus making the top of a box.
When an assumption is discharged, another line is drawn,
thus making the bottom of the box, and then the sides are
drawn in, rather like joining together left and right
parentheses.

156

CHAPTER FOUR

For example, here is the deduction presented above,
written using boxes.

The numbers are for explanatory

purposes only.
( 1)

T(Xf\ Y)

(2)

TX

(3)

TY

(4)

T(Y f\X)

(5)

T((XAY) ::>(Y AX))

Here (1) is an assumption.

(2) and (3) are consequences of

( 1) by what we will call the T 1\ E rule (T, A elimination).
(4) is a consequence of (2) and (3) by what we will call
the T AI rule (T, A introduction). Then assumption ( 1) is
discharged, the box is closed off, and (5) is adjoined, by
what we will call the T :>I rule (T, :::> introduction). Note
that at the last line no un-discharged assumptions are
left.
Here is one more example, involving the same rules,
but with nested boxes.
(1)

TX

(2)

TY

(3)

TX

(4)

T(X ~Y)

( 5)

T (Y ::>(X A Y))

(6)

T(X::::l(Y::>(XAY)))

Here (1) and (2) are assumptions.

(3) is by the rule that

says a formula in an outer box can be iterated in an inner
one.

(4) is from (2) and (3) by T AI.

(5) is from (2) and

AXIOM SYSTEMS AND NATURAL DEDUCTION

157

( 6) is from ( 1 ) and ( 5) by T .:::>I.

( 4) by T A I.

Now at last we present the full system of rules.
In a derivation, we say an occurrence of a

Definition:

signed formula Z, and a box B, have the same nest level if
B and Z are, themselves, inside the same boxes.
Example:

Consider the (incomplete) schematic derivation
A

B
r---

c

-

F
G

In this, the signed formulas Band G have the same nest
level as the box that begins with H.
Iteration Rule:

In a derivation, any signed formula Z that

has an occurrence above a box B having the same nest level
may be repeated directly inside the box B. ("Directly
inside" here means: inside the box B, but not inside a box
that is, itself, inside box B).

CHAPTER FOUR

158

Stated slightly differently.

Let B be a box, and let

S be the set of signed formulas that: 1) have occurrences
above B that 2) have the same nest level as B. Then, any
member of S may be repeated directly inside B.
Contradiction Rules:
TX
FX

T.J..

FT

TZ

TZ

TZ

(here Z is any formula).
Now the elimination and introduction rules, one (or two)
for each connective and sign.
TAl

F ::>I

TX

FYI

FX

TY

FY

T(X/\ Y)

F(X VY)

TX
FY
F(X:;JY)

TA E

F::~E

T(X "Y)

FvE

F(XVY)

TX

FX

TY

FY

F(X ';:)Y)
TX
FY

AXIOM SYSTEMS AND NATURAL DEDUCTION

TVE

FX
T (X v Y)

and

TX

TY
FAE

TX

and

F(XAY)
FY
T:::>E

TX
T(X =>Y)

TY
F(X "Y)
FX

and

TY
T~E

FY
T(X VY)

FY
T(X ::::>y)
FX

TX
r~x

FX
(Finally, the rules that discharge assumptions)
TYI

FX

and

TY
T(XvY)
TX

FY
F(XAY)

FY

TX
T(X v Y)
and

TY

FX
F(X A Y)

15!1

CHAPTER FOUR

160

TX

and

FY

TY

FX

T(X:>Y)

T(X =>Y)

FX
T-X

Now, a (natural deduction) proof is a derivation
according to the rules above, in which there are no
un-discharged assumptions. The last line of a proof is the
signed formula that has been proved. A proof of an
unsigned formula X is, by definition, a proof of the signed
formula TX.
These (rather numerous) rules constitute the full
system. Notice that of the two T :::l I rules, one is familiar
from the examples above, while the other embodies the usual
format of arguing the contrapositive. Likewise, of the two
T :::> E rules, one is just modus ponens, while the other, in
traditional terminology, is called modus tollens. The
reader should verify the correctness of each of the rules
above.
We do not claim the set of rules is independent. For
example, the contradiction rule, from TX and FX to infer

AXIOM SYSTEMS AND NATURAL DEDUCTION

TZ, follows from the rest by either of the following
arguments.
TX

TX

FX
FZ

FX
T-Z

FX (iteration)

TX (iteration)

T(X=>Z)

T(-Z=>X)

TZ

(T=>I)

(T=> E)

F~z

TZ

(T=>I)

(T=>E)
(F-E)

As it happens, when we modify the system to handle
Intuitionistic logic in Chapter Nine, neither of these
derivations will be available. We suspect that, in the
Intuitionistic system the rules are independent, though we
have no proof to offer.

At any rate, we have allowed some

extra rules now so that things will be simpler in Chapter
Nine.
The main advantage, for us, of this natural deduction
system over others in the literature is that it admits
great condensation, using uniform notation. Thus, while
the above should be kept handy for constructing proofs in
the system, the following compact version is useful for
proving things about the system.

The reader should check

that the rules above are just the instances of those below.
Iteration and Contradiction Rules:

as above.

161

CHAPTER FOUR

162

Introduction and Elimination Rules:

o<I

ex

1

0(2
D<

o<.E

0<
0(

0<

f3E

(H

#11

1

2

{31

and

FJ2

f3

_L_

~2

f31

~1

and

FJ2

SOME RESULTS ABOUT NATURAL DEDUCTION

Definition:

Let S be a set of signed formulas and Z be a

Z to symbolize that
CN
Z has a proof constructed according to the rules of #10,

single signed formula.

We write S ~

together with the additional rule: at any point in a
deduction, any member of S may be used as a line.

Z is read, Z is deducible from S in the
S 1CN
Classical natural deduction system (of #10). If S consists
of unsigned formulas, and Z is an unsigned formula, we also

163

AXIOM SYSTEMS AND NATURAL DEDUCTION

use S r

TZ. We follow our usual
Z, to mean TS ~
CN
CN
Z, and so on.
Z for S U{X} r
conventions, writing S,X ~
CN
CN
Theorem 11.1:
S,X ~

CN

(For signed formulas)

Z then S ~

CN

Z.

If S,X f-

CN

Z and

One can give a direct argument for this very
useful theorem in two cases, depending on whether the sign
Remarks:

of Z is Tor F, or alternately, in one case by turning a T
sign on Z into an F with F--I, then later removing it with
We prefer not to follow this second approach because
it will not work when we come to Intuitionistic logic in

F ~E.

And we prefer not to follow the first
approach as stated, but rather, to combine the two cases
Chapter Nine.

into one by introducing a certain degree of abstraction
into the argument.
One difficulty with uniform notation is that it
centers around decomposing a formula, moving from

o<

to its

components, o< and <>< , for example. What we want now is
2
1
something that goes in the other direction, and allows the
building up of signed formulas. This can be done in
several ways. We have chosen to introduce a kind of
implication between signed formulas.
Definition:

We define a connective < between signed

formulas as follows.

CHAPTER FOUR

164

X

z

X<Z

TA

TB

T(A:JB)

TA

FB

F(A-"B)

FA

TB

T(A v B)

FA

FB

T(B ::lA)

Notice that X<Z is always f3 , with X and Z being

f3

1

and

, though not necessarily in-that order. (Indeed, X<Z
2
covers all ~-formulas except T~A.) This makes possible
~

alternate uniform formulations of several of the rules from
1110.

Thus, the
Rule 1)

f3E rules (except for

T~E)

become

X
X<Z

z
and
Rule 2)

Z
_Kg_
X

Likewise the
Rule 3)

f3 I rules (except for T - I ) become
X

z
X<Z

AXIOM SYSTEMS AND NATURAL DEDUCTION

Rule 4)

165

z

X

X<Z

Also, X<Z is always an~ -formula, with X and Z being ~
1
and 0< , not necessarily in that order. Thus the o< I rules
2

(except for F ""I) become
Rule 5)

X

z
X<Z
One can give a similar version of the <X E rules, but we
will not need it here.

Indeed, the fact that we do not

will be of significance in Chapter Nine.
Now we turn to the proof of the theorem stated above.

Z and S,X 1- z. The following is
CN
CN
then a derivation showing S r
Z. Actually, we give two
CN
derivations. They proceed alike through step (6), after
Proof:

Suppose S,X r

that we present them in parallel columns.

The reason for

giving two derivations will be made clear in Chapter Nine.
For now, though, either one will serve.

166

CHAPTER FOUR

X

(2)

z

(4)

X

(6)

X<Z

(7)

z

(7)

(8)

X<Z
X= X

(8)

z

( 11) (X<Z)<Z

X<Z
(9) X
<Z
( 11) (X<Z)<Z

(12) z

( 12) z

(9)

Explanation:

( 1)

(1) is an assumption.

(2) follows since we

suppose S,X ~
z. (3) is on discharging assumption (1)
CN
using Rule 3 above._ (4) is an assumption. (5) follows

z. (6) is on discharging
CN
assumption (4) using Rule 3 again. (7) is an assumption.
since we suppose S,X ~

(8) is by the Iteration Rule, on the left from (6) and on
the right from (3).
Rule 2.

(9) follows from (7) and (8) using

(10) follows from (7) and (9) using Rule 5.

is on discharging assumption (7) using Rule 4.
(12) follows from (3) or (6) and (11).
Corollary 11.2:

If S r

CN

T~A

then S ~

CN

FA.

(11)

Finally

167

AXIOM SYSTEMS AND NATURAL DEDUCTION

Proof:

Suppose S 1-

T~E.

ThenSI-

FA.
Now trivially, S,FA 1T~A.
CN
CN
FA since from S we can get T~ A by
But also S, TA 1CN
hypothesis, and from TA and T ~A we can get FA by Rule

CN

FAbyTheorem11.1.

This makes possible derived rules for negation that
are somewhat simpler than the official rules T- E and
T-1.

Derived Rules:

and

r~x

FX
Reason:

The first may be treated as an abbreviation for

the sequence
( 1)

FX

(4)

T~X

Here (2) is an assumption.

(3) is by iterating (1).

Then

(4) is on discharging (2) using Rule T-I.
The second follows from the corollary above.

Suppose,

at some point in a deduction, we encounter r~x. If S is
the set of all assumptions made thus far, and not
FX
T- X. Then S 1discharged, we actually have S 1CN
CN
derivation.
the
in
FX
also, so we may simply put down
(Actually, this argument is quite constructive.
Unravelling the proofs of the theorem above and its
corollary will give the steps appropriate to a "legal"
passage from r~x to FX in the derivation.)

168

CHAPTER FOUR

Next, a derived rule of great utility.
Reverse:

FZ

T.L

TZ

This may be taken as an abbreviation of the following.
( 1)

FZ

(2)

TJ..

(3)

TZ

contradiction on (2)

( 4)

T(Z v Z)

Tv I on ( 1) and ( 3)

(5)

FZ

assumption

(6)

F(Z v Z)

FVI on (5) and (5)

(7)

T(ZV Z)::>Z

T::>I on (5) and ( 6)

(8)

TZ

T::>E on (4) and (7)

Now, a few facts about deductions from a set S of
axioms.
Proposition 11. 3:

If S, 0< , 0<

Proof:

0(

o<

and

Suppose S,
0(

2

1

,

0<

2

1

2

1-

z.

CN

f-

CN

Z then S, o< f-

CN

Z.

Since from o< we can get

by o< E, trivially S, 0< 1-

CN

Z.

169

AXIOM SYSTEMS AND NATURAL DEDUCTION

Proposition 11.4:
S, f3 1-CN z.

If S, ~ 1 rCN Z and S, ~ 2 rCN Z then

Proof: Suppose S, ~
1- Z and also S, {3 t- Z. From the
1
CN
2 CN
first of these, trivially, S, ~. R
r z. Also, from the
-

,-1

CN-

second, S, fS , (3 1 1- CN Z because from [9 , f31 we can get (3 2
by Rule f3E. Then S, fS r
Z by Theorem 11. 1.
CN
Suppose we form a collection C as follows.

Put a set

S in C if SA' T..1... We claim this is a Classical
CN
consistency property. The argument is as follows.
If SEC then we trivially can not have T .1. e: S. We
also can not have F T e S, nor both TA and FA, by the
contradiction rules.
If S E C and

o< e: S then

S, o<. , o<
1

2

E C,

for the

contrapositive follows directly from Proposition 11.3.
Similarly if SEC and fJ E S then S, f3 e: C or S, f3 e: C,
1
2
using Proposition 11.4.
Now suppose X can not be proved in the natural
deduction system.

Then {FX}€C.

For otherwise we would

have
FX 1T..1..
CN
FX ~
TX (using a contradiction rule)
CN
and trivially
TX tTX
CN
hence by Theorem 11.1,

1- TX, so X would be a theorem.
CN
It follows by the Model Existence Theorem for

propositional Classical logic, 2.5.1, that if we consider
only that part of the language not involving Cl or <>, then
we have Classical completeness of the natural deduction
system presented in #10.

170

#12

CHAPTER FOUR

A NOTE ON MODAL NATURAL DEDUCTION RULES

The arguments in boxes in the natural deduction systems of
#10 are often called subordinate derivations.

To handle

modal logics, Fitch [1952] introduced what he called a
strict subordinate derivation (actually, he said proof, not
derivation), and we shall essentially follow him in this.
From the point of view of Kripke models, starting a strict
subordinate derivation amounts to jumping from a possible
world to an alternate one.

Curiously, there are two quite

different systems of natural deduction rules that arise,
depending on the exact intuitive interpretation one accords
these strict subordinate derivations.
First, one may think of a strict subordinate
derivation as an argument about a generic alternate world.
Then, anything deduced about it will be true of every
alternate world.

(So if X is true in a generic alternate

world, D X ~ust be true of the original world.

This is the

idea behind one natural deduction rule in #15.)

One must

keep in mind, of course, that there may be no alternative
worlds at all.

One is merely assuming that, if there are

any alternate worlds, a strict subordinate derivation will
uncover facts about them.
If one adopts this generic-alternate-world
interpretation for strict subordinate derivations, one is
led to formulate natural deduction rules in the style of
Fitch [1966].

(Also see Siemens [1977] for an idea of the

versatility inherent in such an approach.)

We will call

our systems based on such an interpretation A-style
systems.

(We use A here because in

traditional treatments of logic, A propositions are the

171

AXIOM SYSTEMS AND NATURAL DEDUCTION

universal affirmative ones: all alternate worlds are what
we consider.)
The second intuitive interpretation one may adopt is
that a strict subordinate derivation is an argument about,
not a generic, but a particular alternate world, one whose
existence is ensured by the argument that led up to the
starting of the strict subordinate derivation.

(So i f <>X

is true of the original world, there must be a particular
alternate world in which X is true. This is the idea
behind a rule in #13.)

In this approach, generally, one

tries to argue towards a contradiction, and the appropriate
natural deduction rules are much like tableau rules.

We

will call our systems based on such an interpretation
I-style systems. (We use I because in traditional logic
development, I propositions are the particular affirmative
ones: some alternate world is what we consider.)
#13 I-STYLE NATURAL DEDUCTION RULES
We keep all the natural deduction machinery from #10, and
make some additions.

The main one is that we now allow

strict subordinate derivations.

We symbolize one by

enclosing it in a box, like an ordinary subordinate
derivation, but with a double line at the top and the
bottom.

(We will give examples shortly.)

They differ from

ordinary subordinate derivations in several very important
ways.
First, the Iteration Rule, as stated in #10, only
applies to ordinary subordinate derivations, not to strict
ones.

We will give a Strict Iteration Rule below.

172

CHAPTER FOUR

Second, the top line of a strict subordinate
derivation is not taken to be an assumption. Indeed, no
assumptions are directly involved in strict subordinate
derivations.
Third, none of the ~-introduction rules apply to
strict subordinate derivations, for the obvious reason that
there are no assumptions to be discharged.

We introduce

another rule below to provide for an exit from a strict
subordinate derivation.
On the other hand, ordinary and strict subordinate
derivations may be inter-nested, and all the usual rules
continue to apply, with the provisos just noted.
Now we take up these points in greater detail.

We

begin with a strict iteration rule.
Recall the definition, from #10, of a formula
occurrence and a box having the same nest level.

We
continue to use that definition, but from now on, box means
both ordinary box and strict box.
Now, we keep the Iteration Rule from #10, for
repeating formulas into ordinary boxes. But for strict
boxes we use the following.
Strict Iteration Rule:

Let B be a strict box and let S be

the set of signed formulas that: 1) have occurrences above
B that 2) have the same nest level as B. Then any
member of S# may be repeated directly inside B.

(Here S#

is defined according to which modal logic is involved,
using the chart in Chapter Two #2.)

AXIOM SYSTEMS AND NATURAL DEDUCTION

173

We note that starting a strict subordinate derivation,
or strict box, amounts to moving to an alternate possible
world so, as usual, information S about the world gets
replaced by information S# about alternates.
Next point: since top lines of strict subordinate
derivations are not assumptions, we need some way of
getting a strict box started.
Creation of a Strict Box Rule:

If a formula rr occurs in

the course of a derivation, a strict subordinate box may be
started, at the same nest level as the occurrence of TT,
with TT

0

as the first line.

Schematically,

TT

1T

0

We note that it is this rule that says strict boxes
"represent" particular alternate worlds that must exist,
given the preceeding derivation.
Third point:

since there are no assumptions to be

174

CHAPTER FOUR

discharged in a strict box, we need some way of getting out
of one.
Contradiction Return Rule:

If T~ is derived in a strict

subordinate derivation, that strict subordinate derivation
may be closed off, and T..L returned outside.
Schematically,

T.L

Finally there are a variety of special rules,
depending on which modal logic is involved.
Special Rules:
1)

For K and K4, none.

2)

For T and S4,

3)

For D and D4, one may start a strict subordinate

v

derivation at any point.
This completes the description of I-style systems.
Example 1:

The following is a proof, using rules

appropriate to K, of D(X::lY):::>(OX ::> aY).

Note that we

AXIOM SYSTEMS AND NATURAL DEDUCTION

175

have used the (derived) Reverse Rule from #11. We give
reasons for each step as we go along, by numbering lines
and making comments. These are not properly part of the
proof.
(1)

TD(X:::.Y)

assumptio n

(2)

T OX

assumptio n

(3)

T Cl(X;:,Y)

iteration on ( 1 )

(4)

F DY

assumptio n

(5)

TDX

iteration on (2)

(6)

TD(X:::>Y)

iteration on (3)

(7)

FY

( 8)

TX

creation of strict box on (4)
strict iteration on (5)

(9)

TX =>Y

strict iteration on (6)

(10) TY

T :::> E on ( 8) , ( 9)

( 11 ) TJ...
(12) T.L

contradic tion on (7),(10)
contradic tion return on ( 11 )

(13) TOY

reverse on (4),(12)

(14) T(DX=>D Y) T ::::.I on (2) ,( 13)
T ';)I on ( 1 ) , ( 14) •
(15) TD(X';)Y) ::.l(DX:>O Y)
Actually the above can be somewhat condensed , by
judicious combinati ons of the iteration rules. For
example, if a strict box occurs inside a nested sequence of
ordinary boxes, and if S is the set of signed formulas
occurring in the various boxes in the nest, outside the
inner strict box, then any member of S# may be entered in
the inner strict box. This strengthe ned version simply
results from several ordinary iteration rule applicati ons
followed by strict iteration . In the proof above it would
allow us to leave out lines (3), (5) and (6). We use this

176

CHAPTER FOUR

rule in the next example.
Example 2:

Here is a proof in the K4 system of

OX :::>CJ(ClXVY).

(1)

TOX

assumption

(2)

FC(OXVY)

assumption

(3)

F(CI X VY)

creation of strict box on (2)

(4)

FOX

FVE on (3)

(5)

FVE on (3)

(6)

FY
TOX

(7)

T..L

(8)

T.L
TIJ(CIXVY)

contradiction on (4) ,(6)
contradiction return on (7)

(9)

strict iteration on (1)

reverse, on (2),(8)

(10) TCX:::> O(CXVY)

T :::> I

op ( 1 ) , ( 9 ) •

#14 I-STYLE COMPLETENESS AND CORRECTNESS
We strengthen the natural deduction systems of #13 to allow
the use of axioms, then we prove appropriate completeness
and correctness results.
Definition:

Let L be one of K, K4, T, S4, D or D4.

Let S

and U be sets of signed formulas and let TZ be a single
signed formula.

We say there is an I-style natural

deduction derivation of TZ

(~

of ~) in the _b. system, using

members of.!!~ local assumptions and members of~ as
global assumptions provided there is a proof of TZ using
the I-system rules for L as given in #13, together with the
additional rules:

AXIOM SYSTEMS AND NATURAL DEDUCTION

Local Assumption Rule:

177

any member of U may be used as

a line in the proof provided it is not inside a strict box;
Global Assumption Rule:

any member of S may be used

as a line in the proof, inside a strict box as well as
outside.
Thus the examples in #13 are for the special case
where S = U = 0.

We will show TZ is deducible from U as

local and S as global assumptions in the !-system for L if
and only if S 1=

L

U~ TZ.

Curiously, the completeness half

of this is somewhat easier, so we begin with it.
Theorem 14. 1: Suppose S 1= U ---+ TZ. Then there is a proof
L
of TZ in the !-system for L, using members of S as global,
and members of U as local assumptions.
Proof:

Define a collection C of sets of signed formulas as

follows:

put a set Bin C provided there is no !-style

deduction of T..1.. using members of S as global and members
of B as local assumptions.
L-consistency property.

We claim C is an S-compatible

Actually, the verification is

quite straightforward, and we leave it to the reader.
Now suppose there is no proof of TZ in the !-system
for L, using members of S as global and members of U as
local assumptions.

Then Uv {FZ} e: C.

For otherwise, using

S as global and UV{FZ} as local assumptions we could
derive T ..1., and this could be turned into a derivation of
TZ from S as global and (just) U as local assumptions,
using Reverse as a derived rule.
Then by the Strong Model Existence Theorem 2.5.3,
there is an L-model in which the members of S hold at every

178

CHAPTER FOUR

possible world, while the members of U V{FZ} hold at some
possible world. Hence S ~ U - TZ.
L

Next we turn to showing the correctness of our
I-system rules.

For this we need to introduce some

machinery first.
Suppose we have an I-system proof.

For each line n of

it we define the set of assumptions alive at line E.•
denoted A(n).

Loosely, the idea is that A(n) is to be the
set of all assumptions made through line n (other than

global ones) and not yet discharged, but starting over
whenever a strict box is entered, and going back to where
we left off whenever a strict box is exited.

More

precisely, A(n) is defined recursively by the following.
By convention, A(O) = 0.

First we take care of lines that do not involve
starting or finishing boxes.
If line n is a global assumption, or comes from
earlier lines by one of iteration, contradiction,

o< I,

o<E or (3E, then A(n) = A(n-1).

If line n is a local assumption Z, then A(n)

=

A ( n-1 ) u { Z} •

Next we take care of the start and end of boxes.
If part of the proof looks like

AXIOM SYSTEMS AND NATURAL DEDUCTION

(n)Z

( n+ 1 )W

(k)Q

(k+1)R

then A(n+1) = A(n) v {W} and A(k+1) = A(n).
If part of the proof looks like

(n)Z

( n+ 1 )W

(k)Q

(k+1)R

then A(n+1)

= 0 and A(k+1) = A(n).

179

180

CHAPTER FOUR

Note:

This completes the characterization of A(n) for the

logics K, K4, T and S4.

For D and D4 the first line of a

strict box need not be TT
can also have things like

0

for an earlier lT, rather one

(n)Z

n

and various other combinations.

The easiest way to define

A(n) to handle such things is to suppose a strict box
always begins with a formula, though sometimes it may be
the "truth formula".

Thus if we think of the above as

"really" being

(n)Z
(n+1 )TT

n

then we may simply apply the rules as given above.
By a coherent part of an I-system proof we mean any
strict box that is part of the proof, and also the proof
itself.

AXIOM SYSTEMS AND NATURAL DEDUCTION

181

Let n be a line of a proof, and P be a coherent part.
We say line n is an immediate part of P if line n occurs in
P and does not occur inside a strict box that in turn is
properly contained in P.
Likewise, given two coherent parts P and P of the
1

2

same proof, we say P is an immediate part of P if p
--

1

2

1

is

contained in P but P is not contained in a strict box
2
1
that in turn is contained in P •
2

By a partial interpretation of an I-system proof in a
model <G, B, 11-> we mean a mapping v from some of the
coherent parts of the proof into G, such that, if P and p
1

2

are coherent parts, if v is defined for both P and p , and
1

2

if P contains P as an immediate part, then v(P )Rv(P ).
1
2
1
2
We say a given I-system proof is correct under a
partial interpretation v if, for each line of the
proof, say

(n)Z

where line n is an immediate part of the coherent part P,
if v is defined on P, then
v(P) 11- A(n)~ Z.
Lemma 14.2:

Let L be one of K, K4, T, S4, D or D4.

Suppose we have an !-system proof P in the logic L, using S
as global assumptions (never mind what the local
assumptions are).

Let <G, B, If-> be any L-model in which the

CHAPTER FOUR

182

be any member of G.

members of S are valid, and let r

There is at least one partial interpretation v of the proof
P in the model <G, R, 11-> such that v(P) = r , and P is
correct tlnder v.
Proof:

The partial interpretation is created inductively

as we go through the proof P line by line.

The ideas are

simple, though messy to state.

We sketch the basics and

leave the details to the reader.

For convenience, we

suppose L is one of K, K4, T or S4.

The logics D and D4

are quite similar.
Begin by setting v(P) = r .

Now start going through

the proof P line by line until the first strict box is
encountered.

It is quite straightforward to check that,

until a strict box comes up, the proof is correct thus far.
That is, if line n is Z, and we have not yet encountered a
strict box by line n, then r II- A( n) ~ Z that is,
v(P) 1r- A(n) -z.
Now suppose we encounter a strict box whose first
entry is at line n+1.

What is on that line must be rr for

some earlier Tf, thus we have

0

183

AXIOM SYSTEMS AND NATURAL DEDUCTION

( i) 1r

(n)Z

( n+ 1) 1T
0

(k)Q

(k+1)R

also, incidentally, A(i) = A(n) =

We know r If- A(i)~TT
Now either

A(k+1).

r ..If- A(i) or else r 11- A(i) and

r If- rr •
If r ~ A(i), leave v undefined on this strict box,
and on any inside it.

Since A(i) = A(k+1) then

r -if A(k+1)

hence r If- A(k+1)-R, that is, v(P) 11- A(k+1)--R and the
proof will be correct under v through line k+1 as well.
Otherwise,

r *If- IT •
0

r 11- 1T.

Then there is some

Choose one such

displayed above equal to

r* such that

r * and set v of the strict box

r*.

Then certainly the proof is

correct under v through line n+1 as well.

In this case, we

simply continue, as above, line by line until the next
strict box, if any, is encountered.
This completes the sketch of the proof.

184

CHAPTER FOUR

Theorem 14.3:

Suppose there is a proof of TZ in the

!-system for L, using members of S as global, and members
of U as local assumptions.
Proof:

Then S 1=

L

U~ TZ.

Let P be a proof of TZ in the !-system for L, using

S as global and U as local assumptions.

Let <G, R, If-> be

any L-model in which the members of S are valid.
any

Choose

r E: G ; we show r lr U--7 TZ.
By the lemma there is at least one partial

interpretation v of P in this model such that v(P) = r
Pis correct under v.
P.

and

Say linen is the last line of proof

Line n consists of TZ since P is a proof of TZ.

v(P) If- A(n) --7TZ that is,

r 11- A(n) --Tz.

Then

Since, by the

last line of a proof, all boxes must be closed off, then
all assumptions have been discharged except for local and
global ones, and since the set of assumptions alive at line
n does not count global assumptions, we .must have A( n) £ U.
It follows that r 11- U ~ TZ.

This concludes the

correctness proof.
#15 A-STYLE NATURAL DEDUCTION RULES
We continue to use the basic natural deduction machinery
from #10, and we continue to use the symbolism for strict
subordinate derivation from #13.

But now the rules for

working with a strict subordinate derivation are quite
different.

Instead of representing some alternate world,

it represents an arbitrary, generic alternate world.

While

the rules in #13 had a certain resemblance to tableau
rules, the ones below resemble the axiom system rules from
earlier in this chapter.

(We begin with K; weaker

185

AXIOM SYSTEMS AND NATURAL DEDUCTION

axiomatically characterized logics will be considered in
Chapter Six.)
It is important that the present rules for working
with strict boxes not be mixed up with those of #13.
are for quite disparate proof systems.

They

(Though it might be

useful, in a practical sense, to introduce separate
notations for the two kinds of strict boxes, and use both
sets of rules in one derivation.)
Now, the modal rules.
Strict Iteration Rule:
Note:

Exactly as in #13.

In both A and I systems, a strict box

"represents" an alternate world, so of course the strict
iteration rule is the same for both systems.

They differ

in how one starts and stops a strict box.
Creation of a Strict Box Rule:

A strict subordinate

derivation may be started at any point.
-v -Return Rule:

box, then v

If v

0

occurs directly inside a strict

may be returned outside.

Schematically

This rule is the analog of the Rule of Necessitation
for axiom systems in #5.

It is the two rules above that

embody the notion that now a strict box "represents" any

186

CHAPTER FOUR

alternate world.
Finally, the usual variety of rules that are
logic-dependent.
Special Rules:
1)

For K and K4, none.

2)

For T and S4,

v

vo.
3)

For D and D4, the rule

T OX
T<>X.

Remark:

By making use of the Reverse Rule, one can easily

show that
1T
0
Tf

is a derived rule of T and S4, and
F <>x
FOX
is a derived rule of D and D4.
Example 1:

The following is a proof, using rules

appropriate to K, of D(X :::> Y) :::> (a X :> o Y).

AXIOM SYSTEMS AND NATURAL DEDUCTION

( 1)

T D(X ::JY)

assumption

(2)

T OX

assumption

187

strict box created
(3)

TX

( 4)

TX :::l Y

Strict Iteration on (2)
gen. Strict Iteration on ( 1)

( 5)

TY

T ::J E on ( 3) , ( 4)

(6)

T DY

v -return on (5)

(7)

T(OX :JOY)

T::>I on (2),(6)

(8)

TD(X::>Y)::>(OX::>OY)

T :::> I on ( 1) , ( 7)

Example 2: The following is a proof in the K4 or S4 system
of QX:JO(OXVY)

#16

(1)

TClX

assump1t·1on

(2)

TClX

Strict Iteration on (1)

(3)

FY

assumption

(4)

ToX

Iteration on (2)

(5)

T(OXVY)

(6)

TD(OXVY)

T " I on ( 3) , ( 4)
v-return on (5)

(7)

TOX ::>D(DXVY)

T :::> I on ( 1 ) , ( 7)

A-STYLE COMPLETENESS AND CORRECTNESS

Just as in #14, we add rules to allow the use of axioms,
then we prove completeness and correctness.
Very simply, we allow local and global assumptions by
a rule that is, word for word, the same as the one given in
#14, except that here the A-style modal rules are used
instead of the !-style ones assumed in #14. We do not

bother writing the rule out in full.

188

CHAPTER FOUR

Theorem 16.1:

Let L be one of K, K4, T, S4, D or D4.

Suppose S ~

U ~ TZ. Then there is a proof of TZ in the
L
A-system for L, using members of S as global, and members

of U as local assumptions.
Proof: Define a collection C as follows. Put a set B of
signed formulas in C provided there is no A-style deduction
of T .l... using members of S as global and members of B as
local assumptions.
property.

We claim C is an L-consistency

Much of this is quite straightforward; we check

one of the conditions and leave the rest to the reader.
Suppose B v { rr} e: C; we show B/1 V { TT } E. C.
0

For

simplicity we will assume n is T <>X. And as usual we show
the converse. Thus, suppose Bll u {TX} t. C, and thus there
is an A-style derivation of T.J... using members of S as
global and members of Bll U {TX} as local assumptions.

Using
it, the following is a derivation of T.J.. using Bu{T<>X} as
local assumptions, hence it is not in C either.

189

AXIOM SYSTEMS AND NATURAL DEDUCTION

}
}

members of B (and S)

TOX

members of B# by Strict
Iteration (and members of s,
which are global assumptions)

TX

assumption

1

derivation exists
by hypothesis

T.i
FX

Reverse

FOX

v -return

T..L

contradiction rule

Thus C is an L-consistency property, and it is
Now the proof may be concluded exactly as

S-compatible.

the proof of Theorem 14.1 was.
In #14 we defined the notion of a partial
interpretation of an I-system proof.

We now use the same

definitions, but for A-system proofs.

We also use the

notion of a proof being correct under a partial
interpretation.
Now, Lemma 14.2 asserted the existence of at least one
partial interpretation under which a given I-system proof
is correct.

An analog of that Lemma, but for A-systems, is

similar, but with "at least one" replaced by "all".

The

proof is similar to that sketched for Lemma 14.2 and is
omitted.

The appropriate Lemma reads as follows.

CHAPTER FOUR

190

Let L be one of K, K4, T, S4, D or D4.
Suppose we have an A-system proof P in the logic L using S
Lemma 16.2:

Let <G, R, 11-> be any L-model in
which the members of S are valid. P is correct under all
as global assumptions.

partial interpretations
in <G, R, II->.
Theorem 16.3:

Suppose there is a proof of TZ in the

A-system for L, using members of S as global, and members
of U as local assumptions. Then S 11- U---> TZ.
L

Proof:

Derived from Lemma 16.2 in the same way that

Theorem 14.3 is derived from Lemma 14.2.

CHAPTER FIVE
NON-ANALYTIC LOGICS

#1

INTRODUCTION

We are now going to consider five logics, KB, DB, B, S5 and
G that, for various reasons, do not fit the pattern of
The most eccentric of these is the logic
G which, as defined by its model theory (Chapter One #2) is

earlier chapters.

The other four logics, KB, DB, B and S5, are
compact, but have other pecularities that set them apart
not compact.

from the logics of earlier chapters. Now KB, DB, B and S5,
in many ways, resemble each other rather closely, and
differ markedly from G.

We have chosen to treat the five

in a single chapter largely as a matter of convenience.
The main theoretical reason for grouping them together is a
negative one: none of them (apparantly) have tableau
systems of the sort considered in earlier chapters, in
which each step must involve a simpler formula than any
previously on the branch. We elaborate on this point.
All the logics considered in earlier chapters had what
we will call analytic tableau systems. Loosely speaking,
these work by analyzing what we have into simpler parts.
More precisely, they obey a subformula principle: every
formula added to a branch (other than a local or global
assumption) must be a signed strict subformula of some
signed formula already on the branch. The logics KB, DB,
B, S5 and G probably do not possess analytic tableau
systems that ar~ (strongly) complete.
191

192

CHAPTER FIVE

For G and S5 we have curious substitutes to offer,
however.

For these two we will offer (weakly) complete

tableau systems that do not violate analyticity very much.
In the system for G, one rule will introduce onto a branch
subformulas that are not strict.

In the system for S5, one

rule will introduce onto a branch a formula "built up" from
something already present, but this rule needs to be used
only once.

Each of these tableau systems is unique and is

treated as such; neither is one of a family of similar
systems.
Going back to Gentzen, a rule called cut has often
been considered in the framework of tableau (or sequent
calculus) systems.

Using a cut rule we can easily provide

strongly complete tableau systems for KB, DB, B and S5,
tableau systems that naturally group themselves into a
family.

But the cut rule (considered in #2) is certainly

not analytic.

It allows one to introduce entirely

arbitrary formulas into a tableau argument.
systems may be called synthetic.

Such tableau

Unfortunately, synthetic

tableau systems are not very attractive.

For example, one

can not use them in decision procedures, and one can not
base interpolation theorem proofs on them.
Smullyan has considered a notion he called analytic
cut, for Classical logic tableaus.

In this, one is allowed

to "cut" only on subformulas of formulas that already
appear on the tableau branch.
principle is saved.

In this way the subformula

However, such an idea does not work

for the logics we are considering; analytic cut is not
enough.
Following ideas of Osamu Sonobe (private
communication, January 1982) we consider instead what we

NON-ANALYTIC LOGICS

will call semi-analytic cut.

193

In this, the cut rule is

restricted to subformulas of formulas already on the
branch, and to formulas built up from them by prefixing
modal operators.

Thus semi-analytic cut certainly does not

obey a subformula principle.

On the other hand there is a

check on the total arbitrariness inherent in the full cut
rule.

It is a useful compromise.

We will call tableau

systems allowing this restricted cut rule, semi-analytic
tableau systems.
We present a family of semi-analytic tableau systems,
for KB, DB, B and S5, due to Sonobe, and prove them
strongly complete.

Further, again following Sonobe, we use

them, or rather the corresponding symmetric Gentzen
systems, to prove interpolation theorems for these logics.
Though the tableau system for G is not a member of this
family, it is close enough so that we are able to prove an
interpolation theorem for it too.

We also present a

curious second tableau system for S5, one that is complete
but probably not strongly so.

And we present a·second

proof of interpolation for S5.

Finally, we prove

decidability of S5 and G.

Decidability of KB, DB and B

will be shown in Chapter Eight; semi-analytic cut, since it
can introduce formulas of arbitrarily high degree into a
proof, makes it impossible to use the methods of this
chapter.
#2

SYNTHETIC KB, DB, B AND S5 TABLEAUS

Recall from Chapter One #2 the characteristics of the
Kripke models for KB, B, DB and S5.

Basically, they are K,

T, D and S4 models, respectively, that are also symmetric.

CHAPTER FIVE

194

So we ask: how can we "capture" symmetry with tableau
rules?
Suppose we are in a symmetric model, and we jump from
one world to another: what information may we take with us
because of symmetry?

This will provide us with an

appropriate tableau branch modification rule.
holds at world r , i.e.
know about .0.?

at

r lrX, and say r R A; what do we

Very simply, since rRA and R is

symmetric, then also
that

Well, say TX

A Rr ,

and since r 11-X, it must be

D.!r- <>X, i.e. T <>X holds at t:>.

Similarly if FX holds

r and r R A, then F 0 X holds at A •

r II- n and r R A then 6.lr TT.

In brief, if

This is the information

0

symmetry alone provides.
Thus we are led to re-define S# from Chapter Two #2,
which codifies the branch modification procedure.
propose the following.
S# = { -v

0

We

For KB

I "\1 E. S} u { TT I TT € S}
0

(only the first of the two terms of the union was present
in the K-version) •

If r

is a world in a KB-model, the

members of S are all forced in r , and r R A, then the
members of S# are all forced in

A •

These considerations apply equally well to B and to
DB.

Suppose now, as well as being symmetric, R is also

transitive.

Then we get one additional feature.

r II- <>X and r R .0..
and Jli!-X.

Suppose

r II- ~X then for some .!l' r R ..n
Since r R A, then by symmetry, A R r, and then
Since

by transitivity, AR!l.

Now, since flA-X, then Aii-¢X.

Likewise if r ,11'- ox we will have A Jl'- DX.

In brief, if we

have both symmetry and transitivity, then if

r lr rr and

195

NON-ANALYTIC LOGICS

r lll A then A If- rr.

This suggests a tentative definition

of S# for S5, namely
Sll

= { v I v E S} v { rr I rr E S} v { rr I n e S}.
0

Here the first clause is the S4-part, from Chapter Two #2,
while the other two clauses reflect the discussion above.
We prefer, however, to adopt a different definition.
The one above has a rather jarring assymmetry in its v and
n requirements. Now, for S4 we did not need to define
S/1 = { v

I v E s} v { v I v E s} .
0

Since S4 models are also reflexive, there is an S4 rule,
from v to infer v , which makes the second clause above
0
superfluous. Well, the "dual" of that rule, from TT to
0

infer rr, will be an S5 rule (derived or primitive) so the
third clause in the proposed definition of S# for S5 above
likewise becomes superfluous.

We thus adopt the following.

For S5:
S# = { v
Remarks:
for B.

I v € S} u { Tr I TT E S}.

The rule, from TT to infer TT , is also correct
0
But it is not hard to see that adopting it for B

leads to no simplifications in the definition of S#, or
indeed in any of the other tableau rules. Consequently we
consider the extra rule for S5, but not for B, primarily
for aesthetic reasons: things look more balanced between
and rr that way. This may sound frivolous, but there it
is.

-v

196

CHAPTER FIVE

Our definition of S# may be taken in the signed or in
the unsigned sense, as may the tableau rules below.

Our

examples, though, will use the signed version.
Now we give our (still tentative) tableau systems for
KB, B, DB and S5.

We take the usual

0(

and f3 rules,

together with the following.
LOGIC

DEFINITION OF S#

v -RULE

rr -RULE

KB

{v I VE. S} u

none

s, 7T

0

{IT

DB

{v
{TT

0

I 1T e S}

Sll, rr
0

0
I v e. S} u

s

I TT E. S}

Sll

0

s, 1T
--Sll,

rr

0

B

{ v I V E S} U
0
{ rr I TT e S}

-v

S, TT

v

S5

{V I v

ES} u

Sll, iT
0

-v

---

{TT

0

0

1T E S}

"0

S,TT

Sll, rr
0

Unfortunately, this does not give us tableau systems
that are complete in a strong sense, for any of these
logics.

The following example illustrates this for the

B-system.
Example:

In a B-model,

0 <><X 1\ Y) is true at any world at

which both X and Y are true (as the reader may easily
check).

Consequently there ought to be a closed B-tableau

for F o ~(X A Y) using TX and TY as local assumptions.
Suppose we try.

We begin

197

NON-ANALYTIC LOGICS

FO¢(XAY)
TX

(2)

TY

(3)

(1)

Here (1) is the formula in question, while (2) and (3) are
added in accordance with the local assumption rule from
Chapter Three #3.

We apply the TT -rule to ( 1), getting the

modified branch
r a <>ex/'<¥)
H-

(2)

H-

(3)

T ¢X

(4)

T¢Y

(5)

F O(X AY)

( 1)

(6)

The reader may try various continuations of this, but none
will close.

The difficulty is that closure must involve

both ( 4) and ( 5) but both are rr -formulas and any attempt
to simplify one will complicate the other.
The "ultimate" source of the difficulty is quite
simple.

Before the T1 -rule application to 1 ine ( 1 ) above,

we had both TX and TY on the branch.

If we think of the

branch as a partial description of a possible world r in
some B-model, then at r we have both X and Y.
course,

r 11-X A Y.

Then, of

If we could only have put TX 1\ Y on the

branch, the tableau would have closed, thus.

Begin

198

CHAPTER FIVE

FO<>(XAY)
TX

(2)

TY

(3)

TXAY

(4)

(1)

Here (1), (2) and (3) are as before, while (4) is added
somehow.

Then a rr -rule application gets us
F n o (X • Y)
B{-'

(2)

!f¥-

(3)

~

( 4)

( 1)

T <>(XA Y)

(5)

F<> (XI\ Y)

(6)

Here (5) is from (4) and (6) from ( 1), using the IT-rule.
And we have closure.
So the problem is, what rule can we add that will let

us "build-up" from TX and TY to TX /\ Y?

And, clearly, other

"build-up" cases will also arise in other derivations, and
our rule should cover them too.

Now, tableau rules

generally are "break-down" rules, not "build-up" rules.

So

what we propose is to get the effect of "build-up" rules by
using "break-down" rules as follows.
If the temporary assumption of Z on a branch leads to
contradiction (the branch closes using the usual
"break-down" rules) then we may add Z to the branch.
This would allow us to go from TX and TY to TX /\ Y as
follows.

NON-ANALYTIC LOGICS

199

TX

TY
FX 1\ Y

(temporary assumption)

/~

FX

FY

closure

closure

Since we get closure, the proposed rule says we may add
TX 1\ Y (instead of the temporary assumption).
Actually, this version of the new rule is not as
convenient as it might be, since it has us carry out a
tableau construction (with Z involved) only to discard it
if it succeeds, in favor of one with z.

So

instead we

adopt a version which says: at any point in a tableau we
may split the end of a branch, and add Z to one fork and Z
to the other.

Then the fork involving Z corresponds to the

temporary-assumption-tableau, while the fork with Z
corresponds to the replacement one.
front of us at once.

We simply have both in

This rule, called cut, is the one we

officially add, and is the one which will allow the
necessary "building up."
Cut Rule:

z

z

Or, if one is dealing with unsigned tableaus, the
appropriate version of the cut rule is

200

CHAPTER FIVE

-z

z

Thus, finally, our KB, B, DB and S5 systems are as given
above, together with the cut rule.
Remarks:

Adding the cut rule gives us the promised S5

derived rule (from rr to infer 1T). For example, suppose
0
in an S5 tableau we wish to go from TX to T <>X on a branch,
thus:

TX

T ~X.

Instead, using cut, we could proceed

201

NON-ANALYTIC LOGICS

TX

F ~X

(2)

FX

(4)

( 1)

T<>X

(3)

closure
Here (2) and (3) are introduced by cut; (4) is from (2) by
the v -rule.

The left branch is closed, and we can

continue with the right branch as if it were the solitary
branch displayed earlier.
The reader should note the non-analytic features that
the cut rule introduces.
formulas.

We can cut to entirely arbitrary

They need bear no "nice" relationship to the

formula being proved.

There is no subtlety to the cut

rule.

#3

SEMI-ANALYTIC KB, DB, B AND S5 TABLEAUS

As described in the previous section, one may cut "on" any
signed formula.

It turns out that a more restrictive rule

will still provide us with complete tableau systems.

In

this section we give such a tableau rule, and in the next,
the corresponding consistency property version.
convenience, we state things for signed formulas;

For

202

CHAPTER FIVE

corresponding unsigned versions will be obvious.

The idea

of using a restricted cut class is due to Osamu Sonobe.
Definition:

Let C be a set of signed formulas.

We call C

a cut class if:
1)

C is closed under signed subformulas; that is, if

TX or FX belongs to C, so does every signed subformula of X
[note that since X is a subformula of itself, if either TX
or FX is in C, then both are];
2)

C is closed under the operation of prefixing modal

operators; that is, if TX or FX belongs to C, so do T ox,
T<:>X, FOX and F<?X.
Restricted Cut Rule:

Let C be a cut class.

The cut rule

restricted to C is the rule: at any point in a tableau we
may split the end of a branch, and add Z to one fork and Z
to the other, for any Z E: C.

We call an instance of the cut
rule, restricted to C, a C-cut. Schematically,

C-Cut Rule:

Z

Z where ZEC.

For example, the set C of all signed formulas is
trivially a cut class.

For this choice of C, the C-cut

rule is just the ordinary cut rule, given in #2.
Another, more useful example is the following.
be some set of signed formulas.
cut class, C, extending C .

Let C

0

There is a unique smallest

[This follows since the
0
intersection of cut classes is easily seen to be a cut

203

NON-ANALYTIC LOGICS

class, hence we can take C to be the intersection of all
cut classes extending C.]
0

The Cut rule, restricted to

such a cut class, will be a primary tool in this chapter.
Consequently it is useful to introduce some special
symbolism.
Definition:

For a set S of signed formulas, by C(S ) we
0

0

mean the smallest cut class extending S •

For a single

signed formula Z, by C(Z) we mean C({Z}).

For a setS

0

unsigned formulas, by C(S ) we mean C(TS ).
0

0

of

0

Note that, in practice, C(S ) can be "constructed"
rather simply as follows.

0

First adjoin all signed

subformulas of members of S •
0

Then close under the

operation of prefixing modal operators.

It is easy to see

that this amounts to the same thing as above.
Now, let L be one of KB, DB, B or S5.
described synthetic L-tableau systems.
arbitrary sets of signed formulas.

In #2 we

Let S, U and V be

Suppose we have an

L-tableau for V using members of U as local assumptions and
members of S as global assumptions.

We call it a

semi-analytic tableau if every cut rule application in it
is actually a cut restricted to C(S U U UV).
such cuts semi-analytic cuts.

And we call

[Note that in order to know

whether a given cut application is semi-analytic or not,
one must know what the tableau is for, that is, what it is
supposed to prove.]

As a special case, a semi-analytic

L-tableau proof of X would be a closed L-tableau for FX in
which every cut rule application was restricted to C(X).
Semi-analytic cuts can introduce formulas of arbitrarily

204

CHAPTER FIVE

high degree.
their power.

But they are not completely unchecked in
For example, they can introduce no variables

that are not already present in S, U or V.
Continuing the example begun in the previous section,
we observe that there is a semi-analytic B-tableau
derivation of Cl<>(XAY) from {X,Y} as local assumptions.
It is as follows.

A

(6)

(closure)
Explanation:

(1)

TX

(2)

TY

(3)

~TXAY

FX/\Y

FX

FD<>(XAY)

(4)

FY

(5)

(7)

(closure)
(1) is the formula to be derived, while (2)

and (3) are our local assumptions.

(4) and (5) are by the

cut rule.

Notice that the formula involved, XAY, is a
sub formula of D <>(X 1\ Y), hence this is a semi-analytic

cut.

( 6) and ( 7) are by the {3 -rule on ( 4) , after which

the two left-most branches are closed.
Now, continuing on the right-most branch only, using
the rr -rule of B we get

NON-ANALYTIC LOGICS

F 1:1 ~ (X>'•Y)

Explanation:

205

( 1)

'f*-

(2)

-H-

(3)

TXI\Y

(5)

T¢(XI\Y)

(8)

F~(XAY)

(9)

We use the rr -rule on ( 1) , which causes much

crossing out, and also much adding of formulas.

We have

only adjoined (8), which comes from (5), after which (9)
was added, which comes from (1). Now the tableau is
closed.
#4

CONSISTENCY PROPERTIES FOR KB, DB, B AND S5

Having seen tableau systems for KB, DB, B and S5 in the
previous section, corresponding notions of consistency
property for these logics come easily.

We give things for

signed formulas and leave an unsigned version to the
reader.
Definition:

Let L be one of KB, DB, B or S5, and let C be

a cut class as defined in the previous section.

If C is a

Classical consistency property (as defined in Chapter Two
115), we call C an L-consistency property with cut class f
if, for each S E: C, first
_ (cut condition) for any signed formula Ze: C, either
S U {Z} € C or S u {Z} E C, and
rr e. S ~ S# u { .rr } e. C, where Sl/ is defined in the
0
chart in 112;

206

CHAPTER FIVE

and second:
for KB, no other conditions;
for DB, the condition SEC:: ===> Sf/ e: C::, where Sfl is
appropriate for DB;
for B and S5 the condition v E: S ~ S u { v } € c.
0

Strong Model Existence Theorem 4.1:

Let L be one of KB,

DB, B or S5, and let C be an L-consistency property with
cut class C that is U-compatible. If C extends ~ and Q
then, if Sis C-consistent, Sis satisfiable at a world in
some L-model <G, R, 1r-> in which the members of U hold at
every possible world.
The proof is very much like that of Theorem 2.5.3, the
Model Existence Theorem for the non-symmetric logics;
consequently we just sketch the general ideas here.
Lemma 4.2: Let C be an L-consistency property with cut
class C. For any S E: C and for any signed formula Z, not
both Z E Sand Z E:S.
By induction on the degree of Z.

Proof:

If Z is atomic,

the result is part of the definition of (Classical)
consistency property.
Now suppose the result is known for formulas of lower
degree than n, and Z itself is of degree n.

There are

several cases.
case 0< )
(:3 -formula.

Since
0< €

o< e: S then

S u { o<

S U { o<

Suppose Z is an o< -formula.
Now, suppose we had

1

S u { 0<

1

,

o< } e:
~

c.

0< E:

Then Z is some

S and also ex e: S.

Since 0< E: S, then also

and since D< is some ~< -formula, either
I""
, o< } V { ( 0< ) } € C or S u { 0< , ex } u { ( o< ) } € C •
But
1

2

, 0<

},

2-

1

1

2

2

NON-ANALYTIC LOGICS

207

since ( <>< ) = oc and ( <>< ) = 0( , and both 0< and oc
1
1
2
2
1
2
are of lower degree than 0< , this contradicts the induction
hypothesis, that the result is known for formulas of degree
less than that of Z.
There are three more cases, namely

f3 , v

and rr •

All

are similar to that above and are left to the reader.
Now, we proceed with the proof of the Model Existence
Let c

Theorem itself.

r c be

{W 1'1

c I w€ c}.

Because of the

closure conditions imposed on cut classes, it is easy to
check that C t C is again an L-consistency property with cut
class C.

Further, if C extends U, then C f C will be

U-compatible, and if C extends S, and Sis C-consistent, S
will be C t C-consistent.

It is with C r C that we work.

Extend C t C to C by throwing in all subsets of
1

members of C r C.

The proof of Lemma 2.5.4 still works, and

C 1 is again an L-consistency property with cut class C,
one that is U-compatible if C t C was.
Next, let C 1 1 consist of those sets, all of whose
finite subsets are in C 1 •
goes through: C
cut class C.

11

will be an L-consistency property with

(Checking the cut condition is much like

checking the~ -condition.)
if C 1 was.
ThUS C

The proof of Lemma 2.5.5 still

Also C 11 will be U-compatible

r C Can be extended tO C

I I

Which iS Of finite

character.

Now Proposition 2.5.7 applies unchanged: every

member of C

11

can be extended to a maximal member.

Something that should be noted explicitly: every
member of C 11 is a subset of c.
Now we use C 11 to construct a model in the expected
way, following the pattern of Theorem 2.5.3.

For

208

CHAPTER FIVE

convenience, we state the argument for KB; the versions for
DB, B and S5 are essentially the same however.
Let G be the set of maximal members of C 11 •

r , D. E: G, let r R b. mean r II c;;; .c,..

For

We claim the resulting

frame <G,R> is a KB-frame, that is, that R is symmetric.
The argument goes as follows.

r R .6.

Suppose

We show

r ,. and hence D.R r . Well, let X E .C,.fl; we show XE r .

.C:,./1<;;;;

v

Then, we have two cases: case 1) X is
case 2) X is 1T for some
separately.

0

for some v E .c:,.;

We treat each

TT €. D..

0

v e D..

Since

Suppose X t r .
VE D. and all members of C 11 must be subsets of C,

v E C.

Since cut classes are closed under signed

case 1)

subformulas,
says

X is v

v

0

r u {X} E c

E C,

I I

for some

0

that is, XEC.

r u {X} E c

or

II.

Then the cut condition
But since

in C" , this implies X E r or XE: r .

-

implies XE r, i.e.

-v

0

E r.

r

is maximal

Hence our supposition

Now rR~, so rtf GA.

And

v is some TT -formula, with ( v ) = v . Hence, since
0
0
v E r then V € r II, so V E t:;.. But also
0

v E A and this contradicts Lemma 4.2.
X E r.

Hence in this case

case 2)

X is IT for some 1T E D.. Again suppose
0
Then, as in case 1) , we can argue that X € r, that

Xt

r .

is,

rr € r.

(Here we need that cut classes are closed

under the prefixing of modal operators.)

But 1T is some

so rr = ( TT ) E rt/. But r II c;; t:;., so 1T E f:::.,
0
0
0
and since TT E A we again contradict Lemma 4.2. Hence
0
also in this case, X E r •
V -formula,

Thus in either case, if X E A II, then X E r, so
All c;;; r, or AR r .

KB-frame.

Thus R is symmetric and we have a

209

NON-ANALYTIC LOGICS

Now the rest of the proof of Theorem 4.1 is exactly as
in Chapter Two #5.

It is only in verifying symmetry that

cut is needed.
#5 IMMEDIATE CONSEQUENCES
Even though a cut clause is included in the definitions of
consistency property in #4, this is no bar to use in
proving tableau completeness, compactness or deduction
theorems, indeed, proving them by the same arguments that
were used in Chapter Four for the analytic logics.

This

section is, essentially, just the official record that this
is so.

The cut clause does, however, get in the way of a

proof of dedicability; we will treat it by quite different
methods, partly in Chapter Eight.
Tableau Correctness and Completeness:
DB, B or S5.

Let L be one of KB,

Also let S, U and V be sets of signed

formulas, and use the semi-analytic L-tableau syste~s of
#3.

There is a closed semi-analytic L-tableau for V using

the members of U as local, and the members of S as global
assumptions if and only if

sF u-v.
L

In one direction the argument is the same as that of
Theorem 3.3.1, and in the other, as that of Theorem 3.3.2.
Except, of course, that the Model Existence Theorem 4.1
takes the place of Theorem 2.5.3.

In applying the Model

Existence Theorem, we take C(S v U u V) for the cut class.
Compactness and Finiteness:

Theorems 3.4.1 (Finiteness),

3.4.2 (Local Compactness) and 3.4.3 (Global Compactness)

210

CHAPTER FIVE

all extend to cover KB, DB, B and S5 with no change in
wording or proof.

For compactness proofs using the Model

Existence Theorem, we can simply take the set of all signed
formulas as the cut class.
Arrow Deduction Theorem:

Theorem 3.5.1 covers the logics

KB, DB, B and S5 with no change in wording or proof.
Turnstyle Deduction Theorem:

Theorem 3.5.2 covers the

logics KB, DB, B and S5 with the same wording and proof.
(Here, too, we take the set of all signed formulas as the
cut class.)

Then Corollary 3.5.3 holds for Band S5, since

both have reflexive models, and Corollary 3.5.5 holds for
S5.
#6

KB, DB, B AND S5 AXIOMATIZED

The presence of a cut clause in the definition of
consistency property poses no difficulty when applying the
Model Existence Theorem in axiom system completeness
arguments.

In this section we sketch correctness and

completeness proofs for standard axiomatizations of KB, DB,
B and S5.
Definition:

0

B is the set of all formulas of the form

X:::> O<)X.

We leave it to the reader to verify that the members
of B0 are valid in all symmetric Kripke models.
sketch that

0

KB is axiomatized by K u B

Now, we

211

NON-ANALYTIC LOGICS

DB is axiomatized by DuB
B is axiomatized by TUB

0

0
0

S5 is ax iomati zed by S4 UB

where K, D, T and S4 are the sets of formulas defined in
Chapter Four #7, and the underlying logic U of Chapter Four
113 is assumed.

Correctness Theorem 6.1:
If S v L 1-

U

Proof:

X then S f:

L

Let L be one of KB, DB, B or S5.

X.

Exactly like that of Theorem 4.6.1, or Theorem

4.7.2.
Completeness Theorem 6.2:
or S5.

Again let L be one of KB, DB, B

If S F X then S u L t- X.
L
U

Proof: Essentially the same as that of Theorem 4.6.3 or
Theorem 4.7.3. We sketch the key differences. We begin
under the assumption that L is KB.
Call {A , ••• ,A} S-KB-inconsistent if
1
n
S u KB 1- (T A A 1\ ••• A A ) ::> ..1... and call {A , ••• , A }
U
1
n
1
n
S-KB-consistent if it is not S-KB-inconsistent.
Let C be the collection of all (finite)
S-KB-consistent sets of formulas. We claim C is an
S-compatible KB-consistency property (in the unsigned
sense) with cut class being the entire set of formulas. We
show only one clause of the consistency property definition
holds (the key one, however).
Suppose F is a finite set and FE" C.

We show

lTE: F

~ F# u { TT } E: C (where F# is defined in the unsigned
0
sense, for KB). Actually we show the equivalent statement

212

CHAPTER FIVE

TTE: F and

Fll U { TT } t. C ==> F t. C •
0

Say F = { 0 A , ••• , 0 A , ¢X, C , ••• ,C }, where the
1
n
1
k
are all the v -formulas of F, and <>X is the

D A
i
TT -formula being considered.

ThenF#

= {A , ••• ,A ,

n
1
OOA , ••• , ¢0A, ¢¢X, <>C , ••• ,<>C} and 1T :X.
1
n
1
k
0
Since Fll U { lT } t. C we have
0
s u KB t- ( T A A A ••• A A A <> 0 A 1\ • •• A ¢ OA
U
1
n
1
n
/\<><>X AOC A ••• 1\ <>C AX) :::> .L
1
k
hence, by standard manipulations,
SUKB 1- (OT" oA A • • • A cA A
U
1
n
O¢DA A ••• AD¢DA A DODXA
1
n
DOC"··· A O¢C) ::> O-X.

1
k
is a member of K, and each formula of the form
Z ::> ooz is in B0 • It follows easily that

Now

oT

s u KB 1-

( tJ A " ••• A 0 A

1\ CJA A ••• A CIA
A
1
n
1
n
A ••• AC) .:::>o--x
1
k
from which, successively,

U
OXAC

SUKBt- (DA A ••• ADA /\OXAC A ••• AC A-D-X)::JJ..
U
1
n
1
k
s UKB 1- (DA A ••• ADA AOX/\C A ••• AC ):::>.J..

u

1

n

1

k

S UKB 1- (TAOA /\ ••• ADA AOXAC A ••• I\C )::>..L.
U
1
n
1
k
hence F t. C.

The rest of the proof is the same as that of Theorem
4.6.3, except that the Model Existence Theorem for KB takes
the place of that from Chapter Four.
B and DB are handled in essentially the same way as
KB.

For S5, the work is similar and is left to the reader.
One needs, for it, the fact that
S5, for each X.

OX :::::1 DOX is provable in

The proof is as follows.

oo( ....... X) is an S4 axiom hence
-co-x "::J -o-x

0(-X) ::>

NON-ANALYTIC LOGICS

213

<><>X =><>X

so

o <><>X::> DOX.

Now

(<>X)~

0
D<>(<>X) is a B axiom hence on combining the

last two lines,
OX :::> DOX.

#7

NATURAL DEDUCTION FOR KB, DB, B AND S5

In Chapter Four #12 we observed that there were two styles
of modal natural deduction systems, which we called A-style
We do not repeat the motivation here, but
simply sketch appropriate systems for KB, DB, B and S5 in

and !-style.
both styles.

For an !-style system, use the general rules from
Chapter Four #18, and for an A-style system, use the
general rules from Chapter Four #15, with S# defined
And use the following
appropriately for KB, DB, B or S5.
Special Rules.
For !-style:
1)

for KB no special rules.

2)

for DB, one may start a strict subordinate

derivation at any point.
3)

for B and S5, the rule

v
\).

0

For A-style:
1)
2)

for KB no special rules.
for DB, the rule

CHAPTER FIVE

214

TDX
T <>x

3)

for B and S5, the rule
v

We omit correctness and completeness proofs as they
are much like those in Chapter Four #14 and #15.
#8

SYMMETRIC GENTZEN SYSTEMS AND INTERPOLATION

The interpolation theorem has a rather peculiar status
where the logics presently under consideration are
concerned. For example, Gabbay [1972] gives semantic
proofs of interpolation theorems for many modal logics, but
KB, DB, B and S5 are not among them.

On

the other hand,

Weaver and Welaish [1979] gives a semantic proof that
interpolation does hold for propositional versions of some
of these logics. The situation is clarified in Fine
[1979], where it is shown that a Craig interpolation
theorem does not hold for these logics, once quantifiers
are added.
In this section we provide syntactic arguments for
interpolation for KB, DB, B and S5, without quantifiers, of
course.

The idea, once again due to Osamu Sonobe, is to

use a suitably restricted version of the cut rule. The
proof can be given using consistency properties directly,
much as in the First Proof in Chapter Three #8.

But we

find the argument easier to follow if symmetric Gentzen
systems are used.

Consequently we present them first, and

prove their correctness and completeness.

Then we use them

NON-ANALYTIC LOGICS

215

to establish that the logics under consideration do have
the interpolation property. Incidentally, more
conventional Gentzen systems for these logics can be
constructed along the lines of Chapter Three #6. We leave
this to the reader.
First we need notions of S# and SP for our logics.
S# was defined in #2, but we repeat the definition here for
convenience.
LOGIC

Sll

KB, DB, B

{v I

Sl:>

0

V E. S}U

{ rr I IT E S}

{v

{v I v E S} u

{Tr

0

S5

{TT

{TT

ITT<:.S}

As usual, Sp

= S#.

0

I 1T € S} u
I v E S}
0

ITTeS}U

{v I v e S}
Note that for S5, S# = Sp.

Now, we use the Classical symmetric Gentzen system
rules from Chapter Three #7, add some cut rules, and some
rules that vary from logic to logic.

We begin with the cut

rules.
Cut Rules:

Let C be a cut class.

rule applications:
CL)

S

1

,Z ~ S

2

for any Z c C,
S

S --+S

1

1
2

,Z ~ S

2

The following are C-cut

216

CHAPTER FIVE

CR)

S

CM)

1

~S

2

,Z

1

2

s 1 ----- s 2

s,z~s

1

S ---+ S , Z

s-s,z

2

1

2

s1 - s2

Next, rules common to all our logics.
Common Rules:
TTL)

S II, lT ---+S p
1

s

su-s 1>, v
1
2
0
s -s, v

VR)

0
2
rr ~s
1'
2

1

2

Finally, the special rules for the various logics.
Special Rules:
For KB:

no other rules.

For DB:

D)

S II --+S 1>
1
2

s -s
1

2

For B and S5:
VL)

S, v ---+S
1
0
2
S,v--+S
1
2

1TR)

S

S

1

2
0
--+S,TT
1
2

Let L be one of KB, DB, B or S5.
U - V is

--s , TT

We say a sequent

provable in the L-system using cut class .f. if

there is a proof using the Classical axioms and rules, the
common rules above, the special rules for L, and the cut

217

NON-ANALYTIC LOGICS

rules with cut class C.

We claim we have correctness and,

for a suitable choice of cut class, completeness too.
We use the definition of variant from Chapter Three
#7.

Proposition 3.7.1 said that, for the systems

considered there, if a sequent was provable, so was any
variant.

That result still applies to the present systems,

with essentially the same proof.

As a matter of fact, a

stronger result is actually established by the same proof:
if a sequent is provable, so is any variant, and with a
proof of the same length.
Establishing correctness is straightforward.

Each

axiom is L-valid, and each rule preserves L-validity, for
any choice of cut class.
Completeness Theorem 8.1:

Let L be one of KB, DB, B or S5,

and let U and V be finite sets of signed formulas.

If

U ~v is L-valid, then U---> V is provable in the L-system
using cut class C(U v V).
The proof is essentially the same as the corresponding
one in Chapter Three #7.
C as follows.

We sketch it.

Form a collection

Put a finite set S of signed formulas

into C if some (hence any) sequent associated with S is not
provable using the L-system with cut class C( U u V).

Then

one checks that C is an L-consistency property with cut
class C(U u V).

Then, if U-----?V is not deriv~ble using the

L-system with cut class C(UVV), the set UVV will be in
C.

But C(UVV) extends uuv hence by Theorem 4.1,

uvv

218

CHAPTER FIVE

is locally L-satisfiable, which implies that U~ V is not
L-valid.
Thus we have both correctness and completeness.
for some refinements.

Now

Say, in the course of a proof, the

cut rule was applied, with Z as cut formula.

As a matter

of fact, we can arrange things so that any one of the three
versions of the cut rule is used.

For instance, say we

used version CM:

s ' z -----? s
1

s -----? s ' z

2

s

1

-----?

s

2

2

Then, before this rule is applied, we have derivations of
S ,Z ---+S
1

2

and S

1

~s

2

,Z.

so is any variant, so S

1'

But if a sequent is derivable,

z ~s

Hence instead we could use CL:

s z -----+ s
1'

2

s z -----+ s

S --+S
1
2

1'

2

must also be derivable.

2

From now on, we will arrange things so that rule CM is
never used, and we will place restrictions on CL and CR.
Suppose we are trying to give an L-system proof of
U--. V, using cut class C( U v V).
C(U u V) = C(U) v C(V).

It is easy to see that

So if, in the course of the proof we

use the cut rule on a signed formula Z, it must be that
Z E C(U) or Z E C(V).

Let us arrange things so that i f

Z E C(U), we use the CL version of cut, and i f Z E: C(V) we
use the CR version.

(If Z is in both C(U) and C(V) either

219

NON-ANALYTIC LOGICS

version will do.)

We call such a proof semi-analytic .

More precisely,
An L-system proof of U ~ V is semi-analytic
if, in it, the only cut rule applications are of the

Definition:

following two forms:
CL)

S ,Z---+S
2
1

s ~s

S ,Z---+S
2
1

1

where Z E. C(U)
CR)

S

~ S ,Z

s ---.s
1

where Z E. C(V).

2

s ------> s •z
1

2

We have now established that, if U---"V is L-valid, it
has an L-system semi-analytic proof.
Actually this result could have been established
directly, using consistency properties. We leave this to
Remarks:

the reader.
One key feature of semi-analytic proofs is this.
semi-analytic proof of U ----+V, if the sequent S ~s
1

In a
2

appears, then S £C(U) and S <;;C(V). We also leave this to
2
1
the reader to show, by working "upward" from the last 1 ine,
U ---7V, of the proof. Now C(U) and U are sets of formulas
involving the same variables, and similarly for C(V) and V.
It is on these observations that much depends in the proof
of the following theorem, in particular, the
appropriatene ss of our candidates for weak interpolants
(defined below) for the Gentzen system axioms.

220

CHAPTER FIVE

Craig Interpolation Lemma 8.2:
or S5.

Let L be one of KB, DB, B

If A::::> B is L-valid, then A B has an interpolation

formula in L.
Proof:

We use the terminology of Chapter Three #8.

there is one change in methodology.

But

In Chapter Three we

showed each line of a proof had its interpolation formula.
What we show now is somewhat weaker.

We show:

If S - s is a line in a semi-analytic symmetric
1
2
Gentzen L-system proof of U - V, then there is a formula X

such that
1)

S

2)

TX - s is L-valid,
2
all propositional variables of X are common to U

3)

1

~ TX

is L-valid,

and V.
Let us call such an X a weak interpolant for S ---+ S
X

--

1

and write S ~s to indicate this. Thus U and V are
1
2
understood, and are not displayed in the notation.

2

Of course, in a semi-analytic proof of u~v. if we
can show u----v itself has a weak interpolant, this must be
a proper interpolation formula, and the theorem will be
established. As we remarked above, we will, in fact, show
each line of the proof has a weak interpolant.
Now the general outline of our present proof is the
same as that of the Second Proof in Chapter Three #8.
Suppose we have a semi-analytic L-system proof of U-- V.
We show that, for every line S ~ S of the proof there is
X

1

2

an X such that S ~s . We do this by showing it for
1
2
axioms, and by showing the property is preserved under rule
applications.

As a matter of fact, although the present

condition is somewhat different than that of Chapter Three,

221

NON-ANALYTIC LOGICS

the same formulas given there as interpolants still work in
our present circumstances as weak interpolants.

Thus we

follow the construction of Chapter Three #8 for the
Classical rules and for the common modal rules.

Further,

the Special rule for DB is treated just as the Special rule
for D and D4 was in Chapter Three, and the Special rule for
B and S5 is treated like the Special rule for T and S4.
Thus we only have the (two) cut rules to consider.
These are treated as follows.
CL)

(for Z e: C(U))

X
S ,Z -----+ S
1
2

-

y

s ,z-s
1

2

XVY

s~s

1

CR)

2

(for ZEC(V))

X
S --+S ,Z

1

2

y

s ~s ,z
1

2

We leave it to the reader to verify that all this
provides us with suitable weak interpolants for each line
of the proof of u--v. This concludes the argument.
#9

PECULIAR NON-PECULIARITIES OF S5

We have carried our systematic development of KB, DB, B and
S5 about as far as we can.

The cut clause in their

consistency property definitions bars use in decidability
arguments, for instance. But for S5 we can give a few
further results, and re-prove some already given.

Our

proofs will be quite ad hoc, however, and depend on certain

222

CHAPTER FIVE

peculiar features of S5.
In the next few sections we will show the following.
The cut rule is not needed in S5 tableaus for proving the
S5 valid formulas (provided we allow one other simple
rule).

We will give another proof that the interpolation

theorem holds for S5.

And we will show that S5 axiomatic

proofs need, in addition to the S4 machinery, only an
easily specified finite number of extra axioms.
But, as we said, our proofs depend on special features
of S5 and do not seem to generalize.

Recently Weaver and

Welaish [1979] have given a general model theoretic proof
of the Interpolation Lemma that includes KB and B as
special cases.

But we do not know of satisfactory cut-free

tableau systems for these logics, and rather doubt that any
exist.
#10

AN EMBEDDING OF S5 INTO S4

The following theorem, one of several similar ones proved
in Matsumoto [1955], is the basis of our proof of the weak
completeness of a cut-free S5 tableau system given in the
next section.

We give a model-theoretic proof of the

embedding, though a proof-theoretic one, based on an
axiomatic formulation, is equally easy.
Theorem 10.1:

X is S5 valid if and only i f ¢ OX is S4

valid.
Corollary 10.2:
Proof:

S5 is decidable.

Since S4 is decidable.

223

NON-ANALYTIC LOGICS

The rest of this section is devoted to a proof of
Theorem 10.1.
One direction is trivial.

Suppose <> oX is S4 valid.

Then <:>OX is also S5 valid since every S5 model is also an
S4 model.

But it is easy to see that if

<> Q X holds at a

world of a symmetric model, so does X, hence X is S5 valid.
For the harder converse direction we need the
for every formula A, both

Key Observation:
<>O(OA

:::J

D<>A)

<) 0 ( <> o A :J OA)

are S4-valid •
The verification is left to the reader (it is easiest,
probably, to show S4-provability using S4 tableaus).
Also we need the
Suppose <;> 0 Z , <> 0 Z , •.• , <> o Z is
k
2
1
a finite list of S4 valid formulas, <G, R, 11-> is an S4
S4 accumulation fact:
r e: G.

Then there exists some

A €

r R .6., and each of Z , Z , ••• ,Z holds at

D..

model, and

1

2

Proof of S4 accumulation fact:

k

Since <> 0 Z

1

G such that

is S4-valid,

r II- <> OZ , hence for some r *, r*if-OZ. SinceODZ is
2
1
1
S4-valid, r * II- ¢0 Z hence for some r**, r** 11-DZ • But
since

2
r*ll!! r**, R is transitive, and r *II- oz

r ** If- oz

.

2

1

, it follows

r ** forces both D Z and

0 Z •
2
1
1
Continuing in this way we arrive at a world r ** ... * = 1:>. ,

that

Thus

DZ , ••• ,oz hold. And, of course,
k
2
hold at A too, by reflexivity.

at which all of DZ,
all of Z ,Z , ••• ,Z
1

2

1

k

224

CHAPTER FIVE

Now for the other half of Theorem 10.1.
We show 0 DX is S4-valid.

S5-valid.

More precisely, let

it-> be a given S4-model, and let
r If- <>ox.

<G,R,

Suppose X is

rEG; we show

Let A ,A , ••• ,A be a listing of all the subformulas
1 2
n
of X. By the Key Observation, each of 0 D (¢A ::::> D<>A )
i

and () D ( 0 D A :::> DA ) is S4-valid, fori= 1,2, ... ,n.
i

i

i

So,

by the S4 accumulation fact, there is some A E G such that

r R .c., and each of 0 A
Now, let G

0

i

::::>

o <>A and <> CIA ::J o A holds at
i

= { .0.. E G

6 JHl } •

i

Let R

which holds between any two members of G .

0

0

between members of G

be the relation
Define

and atomic formulas A by f2. II-

0

filf- A.

i

Then, as usual,

If-

0

0

A iff

can be extended to cover all

formulas, so that <G , R , 11- > is a Kripke model.
0 0
0
it is an S5 model.
Claim:

11- 0

Obviously

n. e: G and for each A , a sub formula of X,
0
i
n tr- A.•

For each
iff

l

By induction on degree. If
is atomic,
.
i
the claim holds by definition.
Proof of claim:

A

Now suppose A. is not atomic, and the claim is known
l
for all sub formulas of X of lower degree than that of A
i
We show it holds for A itself.

.

i

If A is a conjunction, disjunction, negation or
i

implication, the step is trivial.
Now suppose A

i

= <>A

similar and we omit it).
Suppose fllf-OA .•

11 * II- A .
j

J

j

(the argument for

oA

j

is

Then for some .O.*E«ii with flR.(l*,

But since 1l E: G , ..C:.Rfl., so 6 R fl.* using
0

225

NON-ANALYTIC LOGICS

transitivity of R.

Thus fl* E G

A is also a subformula

a·

j

of X, and of lower degree than A , so by the induction
i

A • Since fiR il* then ill!- 0 A •
j
0
'
0
0 j
Now suppose .Illf- () A • Then for some ~ E G ,

hypothesis, 12* If-

0

0

j

Now,

Again, by the induction hypothesis, ~ If- Aj.
2. E::G so C.R 2., and .L If- A_, so Cl.lf- 0 A .• Also

D. If-

0 A. :::J

Since

then 1111- () A •
This completes the proof ot the claim.

!: If-0 Aj.

0

J

A II- 0

0 <>A . ,

<>A

J

J

J

Now Jl. E G so

so 6 11- o () A •
j

0

A RJl. •

It follows that for each D. E G

o'

Jllf-0 X iff Jl If- X.
But X is assumed S5-valid and <G ,R , ~ > is an S5 model,
0
0 0
so fl If- X for all .n ~ G • Thus Jl If- X for all fl e: G ,
0
0
0
i.e. for all ile:G such that Cl.Ril. Thus Alf- OX.

Finally' since
#11

r R A' r If- <> 0 X and we are done.

ANOTHER S5 TABLEAU SYSTEM

In #2 we briefly considered a rule, from IT to infer TT.
0
We pointed out that it made possible a somewhat simpler
definition of S# for the logic S5, and we noted that it was
a derived rule once (semi-analytic) cut was added. In
fact, the whole point of the cut rule was to get just such
"building up" rules into our tableau system. Now we show
the curious fact that the "building up" rule, from TT to
0
infer TT, is the only one needed for a weakly complete S5
system.

If we add it, we can dispense with cut entirely.

By the weak S5 tableau system we mean the
tableau system using the S5 rules from #2, without cut (in

Definition:

226

CHAPTER FIVE

any form) but with the additional rule

Example:

The following is a proof, in this weak S5 system,

of ODX=>X.

It begins

FODX::JX

(1)

TODX

(2)

FX

(3)

FOX

(4)

Explanation:

(2) and

(3)

are from ( 1) by

o<.

(4) is from

(3) by the rule: infer rr from rr •
Now an application of
0
the usual S5 rr-rule to (2) will produce a closed tableau.

We will show weak completeness of this tableau system
after we prove an appropriate Model Existence Theorem.
before we do, a few observations. First, the strong
completeness of this system is an open problem.

But

Second,

the effects of dropping cut but adding explicit "building
up" rules to the logics KB, DB and B, is not known. For
example, do we have weak completeness if, instead of cut,
we add all the following:

ts2
{3

Definition:

iT

Let C be a Classical consistency property.

call C a weak S5 consistency property if, for each S E: C,

We

227

NON-ANALYTIC LOGICS

1)

VES

2)

rre.s

3)

7r E S

0

~

~

Su{v }E.C
0
Sll v { 1T } E C
0
Su{TT}E.C.

(In 2, Sll is defined appropriately for S5, of course.)
11.1:

Single formula model existence theorem for S5
C be a weak S5 consistency property and let

single signed formula.

Proof:

Z be a
0

If there is a set S that is

C-consistent, such that Z
S5-satisfiable.

Let

0

E S

0

0

, then {Z } is
0

Suppose C is a weak S5-consistency property,

S E «: and Z E S • We follow the steps from Chapter Two
0
0
0
115, to construct a model, and we see what the result is.
To begin, Lemmas 2.5.4 and 2.5.5 both apply to C, with
essentially unchanged proofs, and hence Proposition 2.5.6
applies.

That is, C can be extended to a weak S5

consistency property C' that is of finite character.

Then,

of course, Proposition 2.5.7 applies, so each member of C'
may be extended to a maximal member of C'.
Next, as usual, we use C' to create a Kripke model,
<G,R, 11->.

c'.

For

The members of G are the maximal members of

r , A E: c, r R A means r II £ tl •

An

interpretation v is defined by
if TA E r
v( r ,A)

= { TF
otherwise

( rEG, A atomic).

And this interpretation v determines a

unique model <«; R, 11->.

Then in the usual way, one may show:

for each r € G and for each signed formula Z,

zer ====> ru-z.

(*)

CHAPTER FIVE

228

Now we take a closer look at this model.
First, for the S5 definition of#, just as for the S4
version, we have r # = r fill and r # c;; r. It follows (just
as it did for the S4 case in Chapter Two #5) that R is
transitive and reflexive.

Hence <G, R, 11-> is an S4 model,

but not necessarily an S5 one.
Now recall, S
S E C 1 hence S
0
S *E.G).
0

0

0

<;:. S

E C

0

(and z E S ) •
0

Since S e: C then
0

0

*E. C 1 where S * is maximal (and so
0

For simplicity, let us suppose Z = FX; the argument

is similar if Z is signed with T.
FX

E.

0

Since C

S *.
0

1

0

Now, Z ES, so Z
0

(}

But S * is maximal in
0

c I so s * u {FOX} can not properly extend it.
0

*·

Thus

r E G such that S *li r .

Then s *fl c
0 and n- formulas of S * are in r. In

Now, take any
hence all the v

=

is a weak S5 consistency property, by

clause 3) above, S *U{FDX}€.C 1 •
0
FOX E S

0

0

particular, F D X e: r •

0

0

It follows by ( *) that

r ,11'- oX, for every r E G such that S *li r.
0

r,

rji-FDX,or
Hence

S*-1!'-<>DX.
0
The preceeding shows <>oX is not S4-valid.

Hence by

Theorem 10.1, X is not S5-valid, so {FX} is S5-satisfiable,
that is, {Z } is S5-satisfiable.
0

Corollary 11.2:

This completes the proof.

The S5 tableau system without cut, but

with the rule, from 1T to infer TT, is weakly complete.
0
That is, if X is S5-valid, X has a proof in this system.
Remark:

A close look at the proof above will make it clear

that condition 3) in the definition of weak S5 consistency
property is actually used just once, essentially to be

229

NON-ANALYTIC LOGICS

certain that if Z ( =rr ) E. S * then also 1T E S *. If we
0
0
0
0
begin with the knowledge that Z is a rr -formula, condition
o3) will not be needed at all. Thus the same proof also
establishes the following.
Theorem 11.3:

Let C be a Classical consistency property

that also meets the two conditions
1 ) vc:s -===:> Su{-v }EC
2)

TT e s

~

0
Sfl u { 1T } E C
0

( Sll in the S5 sense) •

If there is a set S that is C-consistent, such that
0

then { TT } is S5-sati sfiable.
TT E. S
o'
It follows from this that, not only is the S5-tableau
system (without cut but with the extra TT-rule) weakly
complete, but in proving a particular formula X, the extra
rr-rule needs to be used only once, at the very beginning.
The present S5 tableau system is a close relative of
the one presented in Fitting [1977], but we find this one
of more use here.
1112

FINITE AXIOMATIZABILITY

This section really consists of two parts.

First, none of

KB, DB or B can be characterized over K using a finite list
of local axiom schemas (S5 can be). This is a
straightforward continuation of Chapter Four #8, and can be
done quickly.

Then we extend the work of Chapter Four #9

to S5, showing that to prove a given formula X in S5, in
addition to the S4 machinery only a finite list of easily
specified global axioms will be needed (and similarly then

230

CHAPTER FIVE

for a local axiomatization, on use of the S5 Deduction
Theorem, version 3.5.5).

This work is similar to that in
Chapter Four, but there are certain twists peculiar to S5.
Also we do not know how to extend this development to KB,
DB or B.
To begin, we sketch a series of results leading to a
proof that KB has no axiomatization over K using a finite
list of local axiom schemas (see Segerberg [1971] pp
177-183 and Lemmon [1965]). Comparable results for DB and
B are proved similarly, and are left to the reader.
In #6 it was essentially proved that
X is KB-valid

iff

[P ::J o <> P] I=

X.

K

(Recall, square brackets mean axiom schemas are involved.)
Then the Turnstyle Deduction Theorem (3.5.2) and the
Finiteness Theorem (3.4.1) gives us
FK [ D

0

(P => D<>P),

D

1

(P => DOP),

0

2

(P::> o<>P), ••• ]

---->X

for exactly the KB-valid X.

We first show no finite number

of these schemas can replace the whole list.
Lemma 12.1: Let P be a variable. It is not the case that
0
n
n+1
I= [0 (P::>DOP), ••• , o (P:::>D<>P)]-----?0
(P::>D<>P).
K

Proof:

Let G =

on G by

r Rr
i

i+1

r Rr
i+1
i
Schematically,

r , r , ... , r
}.
0
1
n+2
fori= 0,1, ••• ,n+1
fori= 0,1, ••• ,n

r~r~r.,_.

0

1

Define a relation R

2

... ~r~r
----+r
n
n+ 1

Define an interpretation v by

n+ 2

231

NON-ANALYTIC LOGICS

r E. G and all variables A.
This determines a model <G, R, 11-> and all members of
v( r ,A) = T for all

n
0
[0 (P::>D<>P), ••• ,O (P::>OOP)]

r , but o n+1 (P :::> o <> P) does not.

hold at

0

Let KB
0

k

be the set of formulas X such that
k

FK [P (P :::> ooP), ••• , 0 (p:::::. DOP)]---;X
and let KB.,., = U KB • It is easy to see that KB 00 is just
k k
the set of KB-valid formulas. And the KB sequence forms a
k
strictly (by Lemma 12.1) increasing chain between K and KB.
Theorem 12.2:

KB is not axiomatizable over K using a

finite list of local axiom schemas.
Proof:

Essentially the same as that of Theorem 4.8.2,

given the observations above.

We omit details.

Now we turn to the second of the two topics considered
in this section: what global axioms are needed to turn S4
into S5, on a case by case basis.
For a formula Z, let S5(Z) be the finite set
of formulas consisting of 1) ¢A :::> D <>A where ¢A is a
Definition:

subformula of Z, and 2) <> OA ::> DA where DA is a
subformula of Z.
Proposition 12.3:
0 X then DX is valid, trivially, in
Proof: If S5( 0 X) I=
S4
all S5 models. We concentrate on the other direction.

Suppose S5( 0 X)~

S4

0 X.

We will show

~

S5

OX.

Let

232

CHAPTER FIVE

C be the collection of all sets S that are locally
satisfied in some S4-model in which S5( oX) is globally
satisfied.

It is easy to show that C is an

S5( DX)-compatible S4-consistency property (in the unsigned
sense) and { ~ oX} £ C •
Note that if S e: C then any subset of S will also be in

c.
Next, let S(DX) be the set of all subformulas of ox,
and their negations.

Let C f S ( D X) be the collection of all

sets of the form S II S( oX) where S E C. It is easy to
0
0
show that crs(oX) is also an S4-consistency property.
Further, since ~oX E S( oX) we must have
{~DX}E CfS(OX).

We claim d S( 0 X) meets the hypotheses of Theorem
11.3.

Now, crs(DX) is already known to be an

S4-consistency property, hence all that is left to show is
that condition 2) of Theorem 11.3 holds •. (Note: we have a
version of condition 2 with # used in the S4 sense; we are
to show it holds with # used in the S5 sense.)
Suppose SE crs( OX) and

TT e: S.

S must be finite, say

it is {¢A, ••• , <>A, ~DB , ••• ,~DB ,C , ••• ,C} where
1
n
1
k 1
m
C , ••• , C are all the non- Tr formulas of S.
1
m
Now, SE cfS(DX) so Sc;;.S for some S E C. Since
<>A E S then 1) ¢A E S
1

OX, hence <>A

1

1

:J

D<>A

0

0

1

and 2) ¢A
E

S5(DX).

0

1

is a subformula of
Since Cis

S5-compatible, S U {<>A ;:::, o<>A } E C.
0

1

Since C is a

1

Classical consistency property, S u {~<>A } E: c or

0
1
S U{O<>A }EC. Since the members of C are consistent
0
1
and <)A E S , the first alternative is impossible, so
1
0
S U{D<;>A }E.C. Call this set S •
0
1
1

In a similar way one shows S

2

= S U { D ()A , D <>A }
0

1

2

233

NON-ANALYTIC LOGICS

E C, and so on.
S

0

After n+k such steps, one has

U { 0 ¢A , ••• , D ()A } u { - <> 1J B , ••• , ~ <>DB } E C.

n

1

Call this set S*.

1

Recall, lT €. S, so iT e: S

k

and hence 1T E S*.

0

C is an

54-consistency property, hence S*ll u { TT } e: C, where II is
0
used in the S4 sense. But S*# is simply
S II u { 0 ¢A , ••• , o <>A } u { - <> 0 B , ••• , - <> DB }
0
1
n
1
k
(since the members of the latter two sets are all
-v -formulas) •

Again, since C is an 54-consistency property, it
satisfies the condition that if -v belongs. to a member, so
does the result of adding

~ •

0

this we have
S II U{ 0 <>A , ••• ,
0

U {<>A

1

1

0 <>A

n

After n+k applications of

} U {-¢DB , ••• , - <> OB }
1

k

, ••• , <>A } V { - 0 B , ••• , - CJB } V { ,. } E C.
n

1

k

0

Finally, since C is closed under subsets, we have
Sll V { ¢ A , ••• , ¢A } u { ...- 0 B , ••• , - CJ B } u { iT } E C •
1
n
1
k
0
(We need for this the facts that S ~S and II is monotone.)
0
Since all the members of this must be in S( 0 X) then this

set is also in cfscox).

Now, the members of S# are all

the -v -formulas of S, while the members of

{ <> A , ••• , <>A } u {- D B , ••• , - o B } are all the
1

n

TT -formulas of S.

1

k

Consequently we have that

Sll u { TT } € cfsc D X) where # is used in the S5-sense.
0

We have shown that cfS(DX) satisfies the hypotheses

of Theorem 11. 3.

Since {-... D X} is a member, then {-...oX}

is 55-satisfiable, hence ,f: 35 0 X.
Corollary 12.4:
Proof:

iff

S5 ( c X) I=

S4

X.

By the above and the fact that in S4 and S5 we have

234

CHAPTER FIVE

both OX;:) X and the Rule of Necessitation (Proposition
4. 5. 1).

Remark:

Essentially this result is contained in Fitting

[1978].
#13

S5 INTERPOLATION THEOREMS

We conclude our special investigation of S5 with an
alternate proof of interpolation for it.

This proof, which

works only for S5, makes use of some interesting features
of S5, which we establish first.
Definition:

A formula X is said to be of modal degree ~

if, in X, no modal operator is within the scope of another.
We first show the standard result that, in S5, every
formula is equivalent to a formula of modal degree one.

We

begin with a few preliminaries to that.
First, in Classical propositional logic, every formula
is equivalent to one in disjunctive normal form, and also
to one in conjunctive normal form.

A disjunctive normal

form is a disjunction, each term of which is a conjunction,
each term of which is atomic or the negation of atomic.
Likewise a conjunctive normal form is a conjunction, each
term of which is a disjunction, each term of which is
atomic or the negation of atomic.

For these purposes,

conjunctions and disjunctions are assumed to permit n
components, not just the usual 2.
A proof that this is so may be found in many standard
textbooks in logic.

See, for example, Quine [1950] pg 56.

235

NON-ANALYTIC LOGICS

But as a matter of fact, the tableau method suggests a
simple way of putting a formula X into disjunctive normal
form, which we now sketch.
unsigned tableau for X.

First run a (Classical)

Then, for each open branch of the

tableau, write down the conjunction of the atomic formulas
and the negations of atomic formulas that occur on the
branch.

Then X will be equivalent to the disjunction of

the set of such conjuncts, one for each branch.
For example, consider the formula
(P:;:)S) v (-PA(R :::>Q)).
A (complete) tableau for this is
(P:::>S)v (-P/\(R::>Q)

~

P::>S

~

.-PA(R:=~Q)

1\s
-P

~p

R::>Q

!\

-R

Q

and the disjunctive formula we get is
( - P) v (S) v (- P 1\-R) v (--- PA Q).

It is easy to see that this is equivalent to the original
formula.
Likewise, the simplest way, here, to put a formula X
into conjunctive normal form is to first put -X into
disjunctive normal form, D, as above.

Then, using

De Morgan's laws on -D, "drive the negation all the way

inside", surpressing double negations at the atomic level.
The result will be a conjunctive normal form for X.

CHAPTER FIVE

236

Since it does not really matter to the Classical logic
techniques just what is meant by atomic formula, except
that an atomic formula should not be analysable in terms of
the Classical propositional connectives, we will use the
normal forms described above, taking atomic to mean:
"truly" atomic, or a formula beginning with a modal
operator.

For convenience, in the rest of this section, we

refer to such formulas as pseudo-atomic.
Next we need that certain equivalences hold in S5.
The list is:
1)

D(XVDY) =
O(X v -<>Y)

2)

(OX v DY)

=

(DXV-¢Y)

D(Xv <>Y):: (OXv<>Y)
O(X v -oY) =: (oxv-aY)

3)

<><X A ¢Y) =

C<>X~"¢Y)

<>(Xr--aY) =

4)

<)(XA DY)

= (¢XAOY)

<><X A -<>Y)

5)
6)

(¢XA-DY)

= (<>XI'-<>Y)

= <>X
o-ox
= -ox
DDX = ox
= -<>X
0 OX

o~<>x

7)

<>OX=

OX

<>-<>X== -<>x

8)

<><>X == <>X
<>-ox ==

9)

...... ox

O(XAY)- (CJXAOY)

10) <>(XvY) _

C<>Xv<>Y).

We leave the proofs of these to the reader.
tableaus are simple here.)

(Semantic

Note that 6) and 8) hold in S4,

237

NON-ANALYTIC LOGICS

while 9) and 10) actually hold in K.
Note also that as a consequence of 5)- 8), in S5 any
string of modal operators may be replaced by the last item
in the string.
The pertinent facts from the list above can be
presented in a more compact and useful form.

We do so now.

First, a convention. Let D be a disjunction of some
s
finite set S of formulas, and consider the formula D vx.

s

If S happens to be the empty set, we will take D v X as
s
synonymous with X. Likewise we will take ClD v X as
synonymous with X if S = 0.

s

We adopt a similar convention

where conjunctions of finite sets are combined with another
formula using A.
Using this convention, then, items 1) and 6) say: if
D is a disjunction of the members of S,
s
0 ( D Y OY) =< ( aD v QY)
s
s
whether S is empty or not.
More generally, let 0 be one of o,

~ 0,

() or - (),

and let D be a conjunction of the members of the finite
s
sets. Then items 1), 2), 5) and 6) give us
O(D YOY)

s

= (ODs

VOY)

whether S is empty or not.
There is a similar result involving conjunctions and
() , namely: let C be the conjunction of the members of the
s
finite set S. Then
()(C

s

AOY)

= ( <>C 1\0Y)
s

whether S is empty or not.

Now we describe the process of turning a formula into
an equivalent one, in S5, of modal degree one.

What we do

238

CHAPTER FIVE

is describe a process for reducing "nesting complexity."
By repeating this enough times, one must get down to a
formula of modal degree one.
Let Z be a formula that is not of modal degree one.
Then we must be in one of the following two cases.

Z has a subformula of the form OX where X
contains modal operators.
case 2) Z has a subformula of the form <>X where X
contains modal operators.
We consider case 1) in detail. So, suppose we have
case 1)

0 X to

deal with.

X must

be some truth-functional

combination of pseudo-atomic formulas.

Put X into

conjunctive normal form, say C 1\C -"'· •• AC (it is
1
2
k
possible that k = 1). Then, using item 9),

ox =-

O(C 1\C

1

2

A ••• 1\C

k

)

==(DC "DC A ••• " DC).
1
2
k
We next say how to simplify each of these conjuncts.
Consider one of them, say the ith.

Now, C is itself a
i
disjunction of pseudo-atomic formulas and their negations,
sayC

i

: D v D v ••• vD

1

2

n

(itispossiblethatn=1 ).

If

none of these D. contains a modal operator, 0 c. is already
J
l
of modal degree one and needs no further simplification.
Otherwise .we proceed as follows. We can re-order the
disjuncts so that D contains a modal operator. Then D
n
n
must be OA where 0 is one of o, ~o, () or ~o. Then,
D C
i

-

0 (D v D v ••• v D )
1
2
n

v ••• v D
) v OA )
1
n-1
=
0 (D v . •• v D
) v OA •
1
n-1
Now repeat this step with o(D v ••• v D
) , then again
1
n-1
with the result, and again, and so on until the empty set,
=

0 ( (D

or no modal operators among the disjuncts, results.

At

NON-ANALYTIC LOGICS

length, DC will have been replaced by a formula in which
i
the "nesting complexity" is less (by one). Of course, we
do this for each C as well (i = 1,2, ••• ,k).
i
This completes the description of the procedure in
case 1.

In case 2 one proceeds analogously, but using

disjunctive normal forms instead.
It should be clear that repeated use of the steps
above must eventually result in a formula of modal degree
one.

It should also be clear that the process does not

change the propositional variables present, does not
interfere with the positiveness or negativeness of their
occurrences, and so on.

More formally, we have shown the

following.
Proposition 13.1:

In 55, each formula X is equivalent to a

formula X' of modal degree one, containing the same
propositional variables, and with occurrences of them
having the same polarity as in X.

Further, if X is

necessity (possible)-like, the same will be the case with
X'.

(These terms are defined in Chapter Three #9.)

Remark:

The procedure above is, in essence, to be found in

Waj sberg [ 1933].
Next we say why we are interested in formulas of modal
degree one.
Proposition 13.2:

55 and 54 have the same valid formulas

of modal degree one.
Proof:

If X is 54-valid it is automatically 55-valid,

239

CHAPTER FIVE

240

whether it is of modal degree one or not, since every S5
model is also an S4 model.
Now suppose X is of modal degree one and is not
Say X is not forced at r in the S4-model
0
<G,B, If->. Well, define a new S4 model as follows.

S4-valid.

Let G = { A e: G I r :1 .o.} and let B and lr be B and to
0
0
0
respectively, restricted to G • It is easy to see that
0

<G , B , 11- > is still an S4 model and, at worlds common to
0

0

0

G and G , the same formulas are forced in both models.

Since

0

then, we have r ~ X.
0
0
0 0
Now define an S5 model as follows.
r- e G

Let G* = G

a·

Let

B* be the relation that holds between any two members

of G*. Let I~* agree with lr on atomic formulas, and then
0
be extended to all formulas in the usual way. Then an S5
model <G*, B*, II-*> is produced.
It is easy to see that for any non-modal formula Z,
and for any world A e: G 0 = G*, .C. If- 0 Z ·iff 6 II-* Z. From
this it follows easily that, in the two models, the same
formulas of modal degree one are forced at

r ..II'* X so X is not S5-valid.

r0• Hence

0

Remark:

This result can be extended to encompass many more

modal logics than just S4 and S5, but this is enough for
our purposes. We do not know the origins of the result.
The present proof was, rather cryptically, announced in
Fitting and Sonobe [1975].
Theorem 13.3:

If A:::lB is S5-valid, then A:::lB has an

interpolation formula in S5.
Proof:

Suppose A:::lB is S5-valid.

Replace A and B by

241

NON-ANALYTIC LOGICS

equivalent formulas A' and B' of modal degree one, having
the same propositional variables.

Then A1 -:J B1 is also

S5-valid, and is, itself, of modal degree one, hence is
S4-valid.

Then by the S4 interpolation theorem (3.8.1),

there is an interpolant, Z, for it in S4.

But since every

S4-valid formula is also S5-valid, Z is an S5 interpolant
for A' -:JB', hence for A::>B.
Remarks:

In the same way an S5 version of the Lyndon

Interpolation Theorem (3.9.1) and also of Theorem 3.9.2 can
be shown.

Finally, S5 versions of the results in Chapter

Three #10 and #11 hold, with unchanged proofs, since we
have compactness and deduction theorems for S5 available.
We skip details.
See Schumm [1976] for a proof of the S5-interpolation
theorem along quite different lines.
#14

THE SIGNIFICANCE OF G

We now turn to the last of the logics considered in this
chapter, in many ways the most peculiar of them, the logic
G.
In G6del [1931] the incompleteness of first order
Peano arithmetic was shown, possibly the most famous of all
results in metamathematics.

In the proof, the tool now

known as G6del numbering was introduced.

Numbers were

assigned to the well-formed formulas of Peano arithmetic
(and to other entities as well) in an effective, systematic
way.

Then, informal arguments about the formulas of Peano

arithmetic could be turned into "equivalent" arguments
about their G6del numbers and these, being arguments about

CHAPTER FIVE

242

numbers, could often be carried out in a formal way within
Peano arithmetic itself.

In particular, G6del was able to
construct a certain formula of Peano arithmetic which he
called Bew(x), with one free variable, that in a suitable
way captured the notion that x is the G6del number of a
formula provable in Peano arithmetic.

The motivation for

doing this, loosely, was to get Peano arithmetic to
"discuss" its own proof theory, via G6del numbering.
Later, G6del [1933] concerned itself with "Heyting's
sentential logic, 11 what we are calling Intui tionistic logic
here.

In effect, what G6del did was consider a particular

modal logic and assert that Intuitionistic logic could be
obtained from it by using a certain translation (see our
Chapter Nine).

The presentation of the logic, now known as

S4, was particularly elegant. This was the first
appearance of the Rule of Necessitation, while the modal
axioms were the ones we used in Chapter Four (of course
with o T dropped in favor of the Necessitation Rule) •
G6del 1 s underlying idea was that DP could be read "P
is provable". (In fact, he used B instead of o, to
suggest beweissbar.)
observed that

But at the end of his brief note he
DP could not be read "P is provable in a

particular formal system S", where S is a consistent
extension of Peano arithmetic.

Indeed, he gave an example

to show that under such a reading,

DP ::::> P could not be

correct (for every choice of P) or else his so-called
Second Theorem, from G6del [1931] would be violated.
Nonetheless, the remaining basic parts of G6del's
modal logic are correct under the restrictive reading given
above, namely the Classical logic foundation, the axiom
schemas D(P:::>Q) :::J(O P:::J ClQ) and OP ::::> ODP, and the Rules

243

NON-ANALYTIC LOGICS

of Necessitation and Modus Ponens.

In other words, all of

K4 is correct under such an interpretation in a particular
system S.

The question naturally arises: if we take S to

be Peano arithmetic itself, do we have completeness?

That

is, is a formula K4-valid exactly when it is correct under
G6del 1 s suggested interpretation in Peano arithmetic? The
answer is no; more must be added to K4 to produce a
complete system in this sense.
In proving his incompleteness theorem for Peano
arithmetic, G6del constructed a formula that intuitively
asserted its own unprovability and showed, in effect, that
it was true but unprovable.

Henkin raised the question of

the status of a similar formula that intuitively asserted
its own provability.
direct.

For this, the answer is much less

But the question was settled in L6b [1955] (the

formula is both true and provable). What was shown was,
again speaking loosely, if it is provable in Peano
arithmetic that a certain formula asserts its own
provability, then it must be provable. The formal version
of this is now known as L6b 1 s theorem.
Under G6del 1 s reading of o , to say a formula P
asserts its own provability is to say DP=> P.

Then, L6b 1 s

theorem, under G6del 1 s interpretation of o in Peano
arithmetic, corresponds to the modal formula
D ( 0 P ::::> P) => a P.

The logic G, axiomatically presented, is

simply the logic K4 with all formulas of the above form
(L6b axioms) added as axioms.

And G is complete under

G6del 1 s reading.
Let us say what we mean by complete in a little more
formal a way. Set up a mapping v from formulas of modal
logic to (closed) formulas of Peano arithmetic as follows.

CHAPTER FIVE

244

For a predicate letter P, v(P) is some (arbitrary) closed
formula of arithmetic.

Then build up inductively as

follows.
v( J..)

= ..1..

V( T ) :

T

v(X "Y) = v(X) A v(Y)
v(X VY) = v(X) v v(Y)
v(~X)

= ~v(X)

v(X ::;:,y) = v(X)::;:, v(Y)
and finally, the key clause,
v( D X) = Bew(the Gadel number of v(X))
where Bew(x) is the formula Gadel constructed in Gadel
[1931]. Then, X is a theorem of the modal logic G if and
only if v(X) is a theorem of Peano arithmetic for every
such mapping v.

This is generally known as Solovay's

completeness theorem, and is to be found in Solovay [1976].
This means that we can establish certain results about
-Peano arithmetic by working with the modal logic G (and
conversely).

In particular, many of the arguments centered

around Gadel's proof of Peano arithmetic incompleteness are
particularly perspicuous when considered, as far as
possible, in G.

Boolos [1979] is a fine presentation of

some truly beautiful results in this area.
Here we will be considering G purely for its own
sake.

We will only show completeness with respect to the

Kripke model theory presented in Chapter One.

Establishing

connections with Peano arithmetic would take us too far
afield.

But they should be kept in mind as the "real"

reason for the interest in G.

245

NON-ANALYTIC LOGICS

#15

TABLEAU RULES FOR G

This time, rather than starting with the model theory and
working backwards, we start with the axiomatic presentation
of our logic and try to capture the essential ideas by
The system we wind up with is essentially

tableau rules.

the one used in Boolos [1979].
G is K4 plus the U:Sb axioms,

D(OX~X)::)

OX.

So we

start with the usual K4 tableau rules and modify them
according to what extra these U:Sb axioms add.
we are on a tableau branch and we apply the
say to F OX.

Thus we go from

s

Fax
to

Sil

FX.

Now, suppose

TT -rule

of K4,

CHAPTER FIVE

246

If we use a L6b axiom we can easily get a little extra
onto the branch, as follows.

s

(1) FOX

(2) TD(OX::JX)::JOX

(3) FD(OX::JX)

(4) T CJX

(closure)
In this, the branch through (1) is the same as above.
is a L6b axiom whose truth we are assuming.
are by a f3 -rule on (2).

(2)

(3) and (4)

Now the right branch is closed.

And if, on the left branch we apply the TT -rule, not to ( 1)
but to (3), the left branch turns into the following (items
(1) and (2) will, of course, disappear; and we also use the
ex -rule).

NON-ANALYTIC LOGICS

247

Sll

(5)

FDX::>X

(6)

T OX

(7)

FX

Now formula (5) can safely be ignored since any use we
might make of it can just as well be replaced by a
comparable use of (6) and (7).
got above when we applied the

Formula (7) is what we also
TT -rule

directly to FoX.

The "extra" is the formula ( 6), the conjugate of F 0 X.
This is what the L~b axioms have gained for us, in this
rather simple case.
Thus the following tentative tableau system for G is
suggested.

Use the (signed) tableau rules for K4 from

Chapter Two, but replace the
S

TT -rule

by

TT

Sfl, TT , 1T
0

Likewise, for an unsigned tableau system for G, use these
rules, interpreted in the unsigned sense, taking
conjugation, in the only case that concerns us, as given by

CHAPTER FIVE

248

ox

~ox

~ax

ox

Of course we have not yet proved anything.

The

discussion above was suggestive, but that's all.

We have

captured some of the effects of the L6b axioms.

It remains

to be shown that we have captured them all.

Completeness
(and correctness) must still be demonstrated, and will be

in the next few sections.
As a matter of fact, the relationship between axioms
and tableau rules can sometimes be misleading.

A curious

fact, discovered by several people, is that for an
axiomatically formulated G, instead of adding the L~b
axioms to K4, one can add them to the weaker system K.
transitivity axiom OP :::;) a a P can then be derived.

The

Indeed,

the reader can easily show, using tableaus, that the
following is a theorem of K:
[Cl(OZ::>Z)=>DZ]: ::;, (op:::;,aop)
where Z = P A OP.

Nonetheless, modifying the K tableau
system, as we did the K4 system above, does not produce a

complete proof procedure for G.
We conclude this section with an example that shows
the new tableau rules (based on K4) do allow us to give
tableau proofs of the L6b axioms. The reason this is not
enough to say we have captured all of axiomatic G by
tableau rules is that we don't know the set of formulas
having tableau proofs is closed under the rules of G, in
particular, under modus ponens. This is equivalent to
whether cut is needed as another G-tableau rule or not. As

249

NON-ANALYTIC LOGICS

a matter of fact, it is not, but for us that is a
consequence of a completeness proof.
Example:

We give a signed tableau proof of D ( oX:::> X) ::> oX

using the G tableau rules.
have

First, using the ~-rule, we

( 1)

F 0 ( Cl X :::>X) ::::> CJX

(2)

T D( OX :::>X)

(3)

FOX

Now we use the iT -rule of G, on line ( 3).

The branch is

modified to
(4)

TO(OX::>X)

(5)

TOX:::>X

(6)

T OX

(7)

FX

Here formulas (4) and (5) are the only members of S#, where
S is the set of signed formulas on the original branch.
And (6) and (7) are 1T and TT respectively, for
0
F oX. Now a (3 -rule application gives closure.
#16

1T =

G TABLEAU CORRECTNESS

In Chapter One #2 we listed two versions of a Kripke model
In both, transitivity was required.
addition, version 1 models had to be finite and
theory for G.

In

irreflexive; version 2 models were required to have no
infinite R-chains. It is easy to see that every version

250

CHAPTER FIVE

1-G-model is also a version 2-G-model.

Hence if we prove

correctness of our G-tableau system with respect to version
2-G-models, we automatically have it for version 1-G-models
too. We do this according to the usual pattern, begun in
Chapter Two #3.

We continue to use the terminology of that

section.
Key Lemma 16.1:

Suppose Tis a G-tableau that is

satisfiable in the version 2-G-model <G,B, ~>.

Let T' be

the tableau that results from a single G-tableau rule being
applied to T.

Then T' is also satisfiable in the same

model.

(Satisfiable means locally satisfiable, of course.)

Proof:

The arguments for all the usual tableau rules are

familiar by now.

We consider in detail only the TT -rule

for G.
Suppose the 1T -rule is applied on branch
produce T 1 •

Say

~

of T to

e consists of S, rr, and is replaced by

6' consisting of Sll, Ti , 7T , where Sll =
0

{ -v I v €. S} u { V

r E: G.

Thus

I v E S}. And say e is satisfiable at
0
0
r It- s and r II- TT • We claim e• is also

satisfiable in this model.

Well, suppose

6' is not

satisfiable; we produce a contradiction.
Since r If- rr , for some
and a is transitive,
assuming

r*, r * 11- 1T •
0

Since r 11- s,

r * 11- S# (Lemma 2.~ 1). But we are

e' is not satisfiable, hence TT must not be

forced at r*, so rr is.

Thus Sll, rr, TT is forced at TI*.
0

r• II- 1T so there must be some r** such that
r ** If- TT • Since r* If- Sfl' then r ** If- S##. But for the
0
K4 definition of#, S#<:.S#fl, so of course r** 11- Stl. Then
r **If- TT since otherwise S#, 1T, rr would be satisfiable.
0

NON-ANALYTIC LOGICS

251

Thus Sll, Tf, IT is forced at r ** too.
0
Now repeat the argument to produce r *** at which
again all of S#, IT, IT is forced, then again, and so on.
0
In this way we produce an infinite R chain,
r , r•, r**, ••• , contradicting the assumption that <G, R, it->
was a version 2-G-model.
Thus S#, rr, TT must be satisfiable, and the proof is
0
finished.
Correctness Theorem 16.2: If X has a G-tableau proof, then
X is valid in all G models (of either version).
Proof:
#17

Similar to that of Theorem 2.3.3.

We omit details.

G CONSISTENCY PROPERTIES

Definition:

Let C be a Classical consistency property.

We

call it a G consistency property if, for each S e. C,
TT EO. S ~ S# u { 'TT , TT } €. C where

0

namely Sil = { v I -v e. S} u { v
Remark:

0

S# is used in the K4 sense,
1 v e: S} •
0

This definition serves for both signed and

unsigned versions.

In the work below we will have the

signed version in mind, though the actual effect of this is
very minor.
Finite set model existence theorem for G 17.1:
P be finite sets of signed formulas.

Let F and

If there is a G

consistency property C that is P compatible, such that F is
C-consistent, then F is satisfiable at a world in some

CHAPTER FIVE

252

G-model in which the members of P hold at every possible
world.
The rest of the section is devoted to a proof of this
theorem.
Suppose C is a G consistency property that is
P-compatible, and FE C, where P and F are both finite
sets.

We show F is satisfiable at a world in some version

1 G model in which the members of P are valid (version
models are finite, transitive and irreflexive).

Since

every version 1 model is also a version 2 model, this will
establish the theorem for both notions of G model.
Let C be the collection of all signed subformulas of
the signed formulas in F V P.

As usual, by ere we mean all

sets of the form S f'l C where S e: C.

It is easy to see that

etc is again a P-compatible G-consistency property
(that is, Proposition 3.12.1 holds even if L =G).

And

trivially, FE ere.
From here on we essentially follow the procedure of
Chapter Two #5, but working with CfC instead of with C.
To begin, let C' consist of all subsets of members of

etc.

It is easy to see that C' is again a P-compatible

G-consistency property that extends ere (see Lemma 2.5.4).
Now F and P are both finite, hence C must be finite.
The members of etc are all subsets of C, hence ere is also
finite, with finite members.
true of C'.

Then, of course, the same is

It follows that if a set has all its finite

subsets inC', the set itself must be inC'.

Thus we do not

need to carry out the construction of Lemma 2.5.5; C' is

253

NON-ANALYTIC LOGICS

already of finite character.
Then Proposition 2.5.7 applies to C': each member may
Now, in the familiar way,

be extended to a maximal member.
we use C' to construct a model.

Let G be the set of all maximal members of C'.

Since

(This is the only

C' is finite, G must be finite.

place in the proof that the finiteness of F and P is really
needed.)
For

r,t::.~G. let

rRL>. mean rll~t::. but All¢ r.

This is our main departure from the pattern of Chapter Two
115. (We are using II in the K4 sense, of course.)
We claim B is transitive.
show

Suppose

r R t::. and ARll.; we

ran.
First,

rllfl£6.11 so
rll<;;;;rllll.

r II c;: A and

t::.ll c;; I2.

rll/lr;;,Il.

Also it is easy to see that

Since II is monotone, then

Hence rllc;;;Il.

Second, since .6.Rll., then Illl ¢A.

Then there must be

v ¢ t::.. Now, if
0
v E r, since r II G A, we must have V, v E t::., which is

some

V€:11.

r.

Since

V€.Il.ll,

Thus r II c; .0. but Illl <j; r, so

r Bfl.

impossible.
.f'UI ¢

such that either v¢ t::. or
Thus

V~

0

it follows that

r.
R is thus shown

to be transitive.

r R r , we would have r II c: r but r II c;j; r .
Hence we never have rR r. R is irreflexive.
If we had

Thus <G,R> is a G-frame.
Now define an interpretation in the familiar way: for

r E G and atomic A,

CHAPTER FIVE

254

T if TA r
= {F
E

v( r ,A)

otherwise
This interpretation determines a unique Kripke model

<G, R, II-> which must be a G-model.
We claim: for each r e: G and for each signed formula

Z,

z e: r ==::} r It- z

c*)

The proof, as usual, is by induction on degree.

We omit

all but the v and rr cases.

r c G and all formulas of

Suppose (*) is known for all
degree < n.

And now suppose Z is of degree n.
Z = -v.

Case v )
with

rac..

v e: r.

Suppose

Then, in particular,
A If-

the induction hypothesis,

c. E G with r R D..

Then

Before doing the
observation.

v

r It- v .

TT -case

0

Take any c. e: G

rll~ L>,

so

v

0

By

e £::...

, and this for all

we make the following

No member of a G-consistency property can

contain a formula and its conjugate.

This has an easy

verification, by induction on degree, which we omit.

(See

Lemma 3. 2.)

z = TT.

Case TT)

c

I

Suppose

By construction,
A/I ~ r.

r.

A,

rll <;;A.

of C 1 •

0

Then

and

A€ G.

Now, suppose we had

SO

IT

e: r.

But 1T e: r and

can not contain a formula and its conjugate.
We have shown that
TT

0

r

Consequently

r R A.

e: .6., by the induction hypothesis,
Since r R c., then r If- TT •
Since

I

Again by construction, IT e: t:; and rr is some

-formula, hence TI E All,

All ¢. r.

rE c

Since

r II u { TT. TT } E: c I .

is a G-consi stency property.

Extend it to a maximal member,

V

Tr E:

A

It- rr •
0

NON-ANALYTIC LOGICS

255

Now, FEC 1 (since it is a subset of FE.CtC).
it to a maximal member,

Extend

r • Then rEG and F c;;;, r, so by

the above, each member of F is forced at r , so F is
satisfied at r in the model <G, B, 11->.
Further, suppose
is P-compatible, hence

A

E.G,

.t::.. u {W} c. C 1 •

C so it follows that W€ A.
1

A

11- W.

Since

t::.

and WE P.

A

e: C 1 , which

But .t::... is maximal in

Then by the above,

is arbitrary, the members of P hold at

every world of the model <G,B, 11->.
proof.
#18

Then

This concludes the

CONSEQUENCES

Having proved a model existence theorem for G, most of the
usual consequences follow by familiar arguments.

We

summarize, and leave most of the details out.
Tableau Completeness
Theorem 18.1:

If X is valid in all G-models then X has a G

tableau proof.
Proof:

Along the lines of the proof of Theorem 2.6.1.

One can not, however, get a full analog of the Strong
Tableau Completeness Theorem, 3.3.2.

The closest we can

get is a finite set version.
Theorem 18.2:

Let S, U and V be finite sets of signed

formulas. If S I= U~v then there is a closed G-tableau
G
for V using the members of U as local and the members of S

CHAPTER FIVE

256

as global assumptions.
Proof:

Essentially that of Theorem 3.3.2.

The role of finiteness in the Model Existence Theorem
for G, and in its proof, makes it impossible to use it to
get a full Strong Completeness Theorem, or Compactness
Theorems.

As a matter of fact local compactness, as

defined in Chapter Three #4, does not hold for G.

There is

the following counterexample.
Let P , P , P , ••• be an infinite sequence of distinct
3
2
1
variables, and consider the set S consisting of the
following formulas:
OP

1

0 (P ::> <>P )
2
1
D(P ::> <>P )

2

3

D(P ::> <>P )
4
3

The reader can easily check that any finite subset of S is
locally satisfiable in some G model.

But for the entire

set S to be locally satisfied, an infinite R-chain must
exist, hence S itself is not locally satisfiable in any G
model.
We do not know the status of global compactness for G.
Deduction Theorems
The Arrow Deduction Theorem (3.5.1) holds for G with
no change. The Turnstyle Deduction Theorem takes the
following form.

257

NON-ANALYTIC LOGICS

Turnstyle Deduction Theorem 18.3:

Let S, U and V be finite

sets of unsigned formulas, and let X be a single unsigned
formula. Then S,X 1= U- v iff
0 G 1
n
for some n, s 1= oX, IJX, ••• , CJ x,u-v.
G

Proof:

Along the lines of 3.5.2.

And this can be strengthened, using the proof of
3.5.4, to
Corollary 18.4:

For finite S, U and V,

S,X 1=

sF X, OX,U----?V.

G

U----?V

iff

G

Gentzen Systems
One can easily construct "ordinary" Gentzen systems
for G (see Chapter Three #6).

We omit a treatment, and

instead present a symmetric version.

Very simply, use the

Classical Rules from Chapter Three #7, but instead of the
Common Rules given there, use the following (taking # and

v in the K4 sense).
TTL)

Ufl, 1T, Tr - ? VP

u, rr --v

VR)

Uf/~V~

,v, -v

u --v,v

Completeness and correctness are proved as they were in
Chapter Three #7.
Interpolation Theorems
Theorem 18.5:

If A.::::> B is G-valid, then A::> B has an

interpolation formula in G.

25 8

CHAPTER FIVE

Proof:

Either of the two proofs given in Chapter Three #8

can be adapted. For the second one, using Symmetric
Gentzen systems, it is enough to replace the treatment of
the Common Rules by

X

If Ufl, TI , TT ----->V P

0

and

X

If Uti ~vi> , v , v

0

~X

then

U, TT ---->V

then

u-----'~

OX

v, v

The rest of the argument then goes through.
The proof of the Lyndon Interpolation Theorem breaks
down for G.
Theorem 18.6:

But we still get the following.
Suppose X:::JY is G-valid.

Then there is an

interpolation formula Z in G for X -::JY such that:
1)

If y

2)

I f X is

is possible-like so is Z.
necessity-like so is Z.

3) I f both Y is possible-like and X is
necessity-like, then Z is non-modal.

Proof:

See the proof of Theorem 3.9.2.

Beth Definability Theorem
Theorem 3.10.1 continues to hold for G, with the same
proof, using the Craig Interpolation Theorem. The stronger
version, Theorem 3.10.2, can no longer be proved since
compactness is lacking.
Non-Modal Equivalents
Theorem 18.7:

Suppose, in G, that X is equivalent to both

a necessity-like formula and to a possible-like formula.
Then X is equivalent, in G, to a non-modal formula.

259

NON-ANALYTIC LOGICS

Proof:

See that of Theorem 3.11.1.

Decidability
G is decidable.

The proof of decidability used in

Chapter Three #12 adapts easily.
Axiomatization
As remarked earlier, G is axiomatized by adding to the
K4-system of Chapter Four #6 the LOb axioms: all formulas
of the form D(DX:>X) :::>ox.

We also use G to denote the

set of K4-axioms plus these LOb axioms.
The proof of correctness and (weak) completeness
remains essentially the same as in Chapter Four #6 and #7.
ox :>X is most definitely not an axiom schema of G.
Indeed, its addition produces an inconsistent system.
amusingly enough, in G we do have the derived rule:

But,

ox
X

This may be shown as follows.

Suppose OX is G-valid.

Then there is a closed G-tableau starting with FOX.
this is a rr -formula, so the very first tableau rule

Now

application modifies the branch to
T OX

FX
and it must be possible to continue this to closure. But a
closed tableau with these as its first two entries is,
except for a missing first line, a closed tableau for

260

CHAPTER FIVE

F(OX:::>X).

Thus DX::>X must beG-valid.

Since OX also is

G-valid, X itself must be.
We also note that there can be no theorems of G of the
form

~X.

Very simply, if we start a G-tableau with F<>X,

there is no tableau rule that applies.

K4 and K also have

similar features, with slightly easier proofs.
Finite Axiomatizability
Theorem 18.8:

For a formula X, let G(X) be the set of

formulas consisting of

0 ( D A-::> A) :> Cl A where

subformula of X, and <>A =><>(~<>AAA) where
subformula of X.
Proof:

Then

F X iff
G

G(X) F

K4

Cl A is
~A

a

is a

X.

Similar to the work in Chapter Four #9.

Natural Deduction Systems
An !-style system seems easier here than an A-style
one.

We simply use the !-style Strict Iteration and

Contradiction Return Rules from Chapter Four #12 (with # in
the K4 sense) but replace the Creation of a Strict Box Rule
by

NON-ANALYTIC LOGICS

Completeness and correctness are proved much as in Chapter
Four 1113.

261

CHAPTER SIX
NON-NORMAL LOGICS

ill INTRODUCTION

In the literature, several very natural modal logics have
been studied that are weaker than those we have considered
thus far.

In this chapter we want to take a look at some

of them.

(For our present purposes, we may think of a

modal logic L simply as a certain set of modal formulas,
called L-valid, or L-theorems.
need concern us here.

No particular structure

Then weaker is strict subset of.)

The terminology of Segerberg [1971] is convenient and
we introduce some of it now (the form of our definitions is
rather different from his, but the content is the same.)
A modal logic L is normal if it can be characterized
by adding a set S of global axioms to K, where S is closed
under substitution.

That is, L is normal if there is a set

S of formulas, clQsed under substitution, such that X£ L
iff

SF

normal.

K

X.

For example, Proposition 4.8.1 says that Tis

So are K4, KB, S4, B, S5, D, D4, DB, G and of

course K itself.

Thus, up to this point we have been

largely concerned with normal modal logics.
A modal logic L is guasi-normal if it can be
characterized over K using both global and local sets of
axioms closed under substitution.

That is, L is

quasi-normal if there are sets S and W of formulas, both
closed under substitution, such that

X€ L iff

S I= W~x.. For example, the modal logics T defined in
K
k
the proof of Theorem 4.8.2 are all quasi-normal. So are
262

263

NON-FORMAL LOGICS

the modal logics D defined in the proof of Theorem 4.8.6.
k

Of course, every normal logic is also quasi-normal.

The

converse is not true; T and D are counter-examples. And
k
k
clearly, K is the weakest normal, or quasi-normal modal
logic.
Every modal logic we have studied thus far has been at
least quasi-normal.

Indeed it is difficult to see how to

deal with anything else since quasi-normal logics are built
on K, and the K-models are, after all, all Kripke models.
If we want to consider a weaker class of logics than the
quasi-normal, we will have to generalize the notion of
model in some way, and it is not immediately obvious how to
proceed.
For motivation we turn to the axiomatic development of
Chapter Four #2,3,4,5 where certain logics turned up (C and
U) that we could not adequately treat at that time.
Ultimately this will lead to a natural broadening of Kripke
model theory, allowing us to deal with a wider class of
modal logics, namely the regular and the quasi-regular ones
(definition later).
Recall that, axiomatically, we began with the
underlying logic U, added the schema

Q(X=>Y)::>(o X:::> DY)

to get a logic called C, and turned this into K by adding
OT as an axiom. It is the role of this rather innocuous
appearing axiom CT
Clearly,

DT

that we want to consider now.

plays a major part.

Using it we were

able to derive the Rule of Necessitation from the weaker
'
machinery of U. Further, since X :::> T is a tautology, from
it by Rule M we get
any X, we have

o T.

OX:::> DT.

That is, if we have

Thus, assuming

DT

OX

for

is equivalent to

assuming that some proposition is necessary.

264

CHAPTER SIX

Now, Lemmon [1957] proposed a number of interesting
modal logics in which there were no theorems of the form
OX.

And some of the well-known and historically important

Lewis systems can be interpreted naturally in those of
Lemmon.

So it makes sense to, somehow, elaborate the

notion of model so that we can isolate the effects of DT.
This was done in Kripke [1965] (see also Lemmon [1966,
1966AJ), by a very direct device.

Since

T

is forced by

every world of a model (and it is undesirable to tamper
with this), as long as If- is evaluated for o by the
familiar rules,

CT

will be forced by every world too.

So, one introduces into the model machinery certain queer
worlds in which o and <> follow peculiar rules, but the
propositional connectives behave as usual.

At a queer

world,

Since we still

OT

is simply declared to be false.

want the machinery of U to apply, we should have ClX ::::1 o T
as we observed above, so at queer worlds· we must further
take OX to be false, no matter what X is.
can derive <>X

Also, in U we

= -e-x. It follows that we must take <>X

to be true at queer worlds.
This is the elaboration of the model machinery that
will concern us for the bulk of the present chapter.

The

simple addition of queer worlds leads to a surprising
richness of models, capable of handling many of the logics
that have been proposed syntactically in the literature.
It will turn out that the logic C plays a role
analogous to K.

That is, K is the logic appropriate to all

models, without queer worlds, while C is the logic
appropriate to all models, allowing queer worlds.

Then the

concepts of regular and quasi-regular mentioned above will
be defined in much the same way that normal and

NON-FORMAL LOGICS

265

quasi-normal were defined, but using C in place of K.

Most

of the logics considered in this chapter are quasi-regular,
many are even regular.
Recall that, to characterize K axiomatically, we added
to U not just the axiom o T but also the schema
0 (X =>Y) :::> ( CJ X:::> OY).

role of

DT ,

Most of the chapter deals with the

but toward the end we also consider the role

of D(X.::>Y)::>(cX =>OY).

A further elaboration of models

will be introduced then.
#2

AUGMENTED KRIPKE MODELS

We elaborate the notion of model from Chapter One, to allow
"queer" worlds.

The source of this material is Kripke

[1965]; also see Lemmon [1966, 1966A].
As usual, let G be a non-empty set, whose members are
called possibl~ worlds, and let R be a relation on G of
access!~~~~~~·

Let Q be a subset of G, possibly empty.

We

will refer to the members of Q as gueer worlds and the
members of G-Q as normal worlds.

We call the triple

<G,Q,B> an au&~ent~~ frame.

Let <G,Q,B> be an augmented frame, and suppose
relation between the members of G and formulas.

We call

the quadruple <G, Q, li, 11-> an augmente~ (Kripke) model
provided the following conditions are met:
for every

0)

reG

r 11- T and

r~ J...

1)

r 11-- ex A Y)

~

2)

r 11- (X v Y)

~

3)

r lr

~

4)

(X:::> Y)

r 11- -x

~

r 11- X and r 11- Y

r II- X or r 11- Y
rAt'- x or r u-- Y
r .11'- x

lr is a

266

CHAPTER SIX

5)

r e: G-Ql
r If- ox ~

6)

r If- <>X

for every

for every
7)

<=:::==7

r *) r * 11- x
< 3 r * ) r * 11- x
< "'

rE.IQ

r If- <>X and r,Ji'- ox.

We have used our convention that
arbitrary <::::. such that r li D..

r* denotes an

Conditions 0) - 4) say that all worlds behave properly
as far as Classical logic is concerned.

Conditions 5) and
6) say that in normal worlds 0 and () behave in the normal
way. But condition 7) says that, in queer worlds
everything is possible, nothing is necessary.
the accessibility relation

Note that

really plays no role in the

evaluation of lr at queer worlds.
An augmented model <G ,Q ,li, II-> in which Ql = 0 is,
essentially, just a model in the style of earlier chapters.
A model in which Q = 0 is called a normal model.
As usual, given an augmented frame <G,Q,li>, an
interpreta~io~

is a map v from worlds and propositional

variables to the set {T, F}.

And, as usual again, each
interpretation v on <G,Q,B> determines a unique augmented

model <G,Ql,li,ll-> (and conversely, of course). We omit the
proof of this, but we use the fact quite often.
We continue to use unified notation both in signed and
unsigned versions.

We continue with the convention that

r lr TX means r 11- X, while r 11- FX means r )f- X. When
signed formulas are used, for example, the clauses of the
definition of an augmented model may be given in the
following equivalent format:

NON-FORMAL LOGICS

267

for every reG
0)
r 11- TT and r 11- F .1.
0 I)
r II- TX ~ r,Jr FX
or

0") exactly one of
1)

r n- 0(

~

2)

r II- ~

~

for every re: G-Q
3)
r ll-- v ~
4)
r II- TT ~

r 11- Z, r 11- z

r If- <X

and r 11- 0(
2
r 11- ,61 or r It- fl2
1

( v r*> r * 11- -v
(3

0

r*> r*ll- lTO

for every re.Q
5)
r If- rr and r ~ -v.

Finally, we will generally be considering augmented
models meeting special conditions, analogous to the model
conditions of Chapter One.

Since the accessibility

relation B does not really figure into the evaluation of 11at queer worlds, the phrasing of the conditions is somewhat
more complicated here than it was in Chapter One. For
convenience, we use the following terminology when
referring to an augmented frame <G,Q,B> or an augmented
model <G, Q, II, It->.
Reflexivity on n~~~~~~~~ds means the relation B,
restricted to the normal worlds, G-Q, is reflexive.
Transitivity based on normal worlds means, for any

r, A, .0..€G, if r and b. are normal, and rill A and AB.n.,
then r Bil.
Symmetry on normal worlds means the relation R,
restricted to the normal worlds, is symmetric.
Idealization based on normal wo~~~~ means, for every
normal world r there is some A such that r B A.

268

CHAPTER SIX

Now, in order to bring out the analogies between the
logics studied in the present chapter and the normal logics
studied earlier, we have decided to use the following
naming device.

If a certain condition from Chapter One #2

(reflexivity, say) determines a class of normal models
called L-models, then we will call the corresponding
augmented models (determined by reflexivity on normal
worlds, say) CL models.

The only exception is that we

abbrevite CK to just C.

Thus we have the following chart.

THE BASIC CONDITIONS
NAME OF AUGMENTED

CONDITIONS

MODELS

c

no conditions

CT

reflexivity on normal worlds

C4

transitivity based on normal worlds

CB

symmetry on normal worlds

CS4

reflexivity on normal worlds and
transitivity based on normal worlds

CTB

reflexivity on normal worlds and

CS5

reflexivity on normal worlds,

symmetry on normal worlds
symmetry on normal worlds and
transitivity based on normal worlds
CD

idealization based on normal worlds

CD4

idealization based on normal worlds,
transitivity based on normal worlds

CDB

idealization based on normal worlds
and symmetry on normal worlds

269

NON-FORMAL LOGICS

The models of earlier chapters are just augmented
models in which there are no queer worlds.

A weaker

condition than this is to allow queer worlds but make it
impossible to get to them from normal worlds.
Definition:

An augmented frame <G,Q,R> is called closed

if, for each

r E G-Q, r * e: G-Q.

That is, any world

accessible from a normal world is also normal.

An

augmented model is closed if the corresponding frame is
closed.

Terminology is from Lemmon [1966, 1966A].

We follow the convention of using CN instead of C in
the name of a class of models if being closed is included
among the conditions.

For example, CNT models are those CT

models that are also closed.
Remarks:

Our system of names is not standard in the

literature.

The most commonly used names are those of

Lemmon [1957, 1966, 1966A].

Also Segerberg [1971]

introduced an elaborate nomenclature, required because of
the huge number of logics he considered.

We conclude the

section with a chart giving name equivalences for various
systems.

270

CHAPTER SIX

PRESENT

LEMMON'S

SEGERBERG'S

NOTATION

NOTATION

NOTATION

c

C2

c

CT

E2

CT

CTB

E2(S)

CTB( 1)

CS4

CT4

CS5

E3
E3(S)

CNS4

E4

CNS5

E5

CNT

ET

CNTB

EB

0
CT4 B(1)
10
CN T4
1
CN T4B(1)
1
CN T
1
CN TB( 1)

CD

D2

CD

CD4
CND4

D3
D4

CD4
10
CN D4

#3

SEMANTIC TABLEAUS

Because of the large number of logics listed in the
previous section, an elaborate treatment is not possible,
nor is it necessary.

We present in some detail tableau

systems for a few representative logics, and summarize the
rest. We begin with the most general one, C itself.
Naturally, we will want to keep all the Classical
logic rules, from Chapter One #4.

To discover appropriate

modal rules, we ask ourselves the familiar question: when
we jump from one world of a model to another accessible
world, what information may we take with us?
Say S, ~ is the set of formulas on a tableau branch.
Intuitively, this is a partial description of some world
in some C-model.

Thus

r 11- S and

r 11- TT •

Now, if _!:._ is

normal, the situation is much like that for K, given in

271

NON-FORMAL LOGICS

Chapter Two f/1.

That is, if r

is normal, since

r 11- rr ,

there must be some r * such that r * n- n . And it is easy
0
'
to see that also r * It- S#, where Stl = { v 1 l.i e: S}, the
0

But, if~ is queer nothing so
elaborate can be said. If r is queer, of course r It- rr,

K-definition of S#.

and that's the end of it. No alternate worlds need apply.
So the question is, when may we think of a tableau branch
as describing a queer world, when a normal one?
It turns out that a successful C-tableau system
results if we always assume a queer world is involved,
unless the tableau branch makes this impossible. If the
set S contains any v formulas, the world r being
described by the branch must be normal since v formulas
are never forced at queer worlds. This suggests the device
that, for C-tableaus, we just use the usual K-tableau
rules, but we only apply the

TT -rule

when there are

v-formulas involved.
Definition:

A set S of (signed or unsigned) formulas is

normal i f v E S for some v .
Tableau Rules for C:

The usual Classical rules, together

with the Tf -rule:
S, TT

S#, IT

0

provided Sis normal.

(S# is used in the K sense.)

We also keep all the usual tableau paraphernalia,
including how to make use of local and global assumptions.
The resulting C-tableau system is strongly complete.

272

CHAPTER SIX

Example: We produce a closed C-tableau for
FD(P:::>Q)::J O(DP::::>DQ) using TD(P::>Q)::>O(CJT :::> Cl(P::>Q))
as a local assumption.

Thus, assuming tableau completeness

and correctness, this shows

l=c O(P=>Q)=> o(aT :::> o(P=>Q))
- - O(P:>Q) ::J Cl(O P ::> oQ).
We begin
FD(P::>Q):::>D(ClP=>CQ)

(1)

T O(P::>Q) ::>a( CIT::::> o(P::>Q))
T D(P::>Q)

(2)

(3)

FO(DP?'CJQ)

(4)

/-----TD(OT :::> O(P:JQ))

FD(P::>Q)
Explanation:
with.

(5)

(1), of course, is the formula we must start

(2) is by the local assumption rule.

are from (1) by the« -rule.
the

~-rule.

(6)

(3)

and (4)

(5) and (6) are from (2) by

The left branch is closed because of (3) and

( 5).

We continue on the right branch.
involved is normal, because of (3).
Tf -formula,

The set of formulas
And (4) is a

so we may apply our 7T -rule.

When this is

done, formulas (1) and (2) are deleted; the il-formulas (3)
and (6) are replaced by the corresponding v -formulas; and
0
the rr -formula (4) is replaced by 1T • For simplicity, we
0

display only the active formulas on the right branch.
TP ::>Q

(7)

FDP::::>DQ

(8)

T D T ::::> D(P ::>Q)

(9)

273

NON-FORMAL LOGICS

Here (7) is from (3), (8) is from (4) and (9) is from (6).
Now an 0(. -rule application to (8) and a ,B-rule application
to (9) produces
TP:::>Q

(7)

FDP~OQ

(8)

T O"T :::l c(P:::lQ)

TOP

(10)

FaQ

(11)

(9)

~
(12)
TO(P:::>Q)

( 13)

F OT

Now, the left hand branch involves a normal set of
formulas, because of ( 10) •

Then the 1r -rule may be applied

to ( 12), producing F T and closing the left branch.
The right branch also involves a normal set of
formulas, because of either (10) or (13).

Applying the

rr-rule to (11) gets us TP (from 10), FQ (from 11) and
TP ~ Q (from 13) •

And closure is immediate, using the

f3 -rule.
Remarks:

Recall the intention was that C should be like K

but without the o T assumption.

What happens if o T is

used as a global assumption, in conjunction with the
tableau system for C above?

Well, it means, whenever we

want, we can put TaT on a tableau branch so, in effect,
there is always some v -formula present.

Thus 'the

restriction on the rr-rule for C to normal sets becomes
vacuous; the rule simply becomes the K rule.
We will consider, starting in #11, the very different
effects of adding o T to C as a local assumption.

274

CHAPTER SIX

Now we turn to the next logic whose tableaus we want
to consider in some detail, the system C4, where we have
transitivity based on normal worlds.
In Chapter Two #1 we argued that what transitivity
brought to normal models was the feature that, if
then

r* 1~ v

also.

r ~v ,

This can hardly be the case once queer

worlds are involved.

Indeed, since no queer world can

force any v-formula, it is not hard to see that such a
transitivity condition would imply that any world
accessible from a normal world was again normal; that is,
that the model is closed.
Actually, a little more care shows us that what we are
entitled to say is: in a model having the property of
transitivity based on normal worlds, if r ~ v , then

r *If- v

provided

r * is normal.

Now, to say

is equivalent to saying r * I~ D T

r * is normal

Then, to say r * lr v

provided r * is normal is to say, if r * 1~ aT

then

r *If- v . And this in turn is equivalent to saying
r *If- ( o T :;:;, v ) , assuming unsigned formulas are involved
for the moment.

If we write v* for

0 T :;:;, v, the

condition imposed by transitivity based on normal worlds
may be simply stated as: if r lr v

then r * If- v *.

Now we

incorporate this into some tableau rules for C4.
Definition:

We define

as follows.

First, unsigned:

~*

for unsigned and signed formulas

275

NON-FORMAL LOGICS
V*

DX

OT :::>OX

~~x

-( Cl T -" ~X)

Actually, in either case v* is equivalent to

OT :::> v,

which will do as well.
Next signed:

T0 X

T ( 0 T :::;, OX)

F¢X

F(OT /1. <>X)

Using notation from Chapter Four #11, in either case, -v*
is T !JT < V.
Now, S# for K4 was defined to be

I 11 E. S} u { v I v E S}. Clearly, the appropriate
version for C4 is { V I -v E: S} u { v* I -v ~ S}. We assume
{ V

0

0

this in the following.
Tableau Rules for C4:

The usual Classical rules, together

with the n -rule
S, IT

Sll, 1T
0

provided Sis normal (and S# is defined as above).
Example: We produce a closed C4-tableau for
F O(P ::> Q) ::> 0 ( 0 P :::> oQ). We begin

276

CHAPTER SIX

FD(P.::>Q):::>O(OP:JOQ)
TD(P:JQ)

(1)

(2)

FD(OP::JDQ)

(3)

Where, of course, (2) and ( 3) are from ( 1) by the

o<. -rule.

Now the set of formulas on the branch is normal,
because of ( 2) , so we may apply the C4 rr -rule to ( 3) , to
get
FP(P:JQ)3D(ElP3c:JQ)
TD(P::JQ)

(1)

(2)

Fo(np :J oQ)

(3)

(4)

T(P .:J Q)

T DT ::J D(P:>Q)
F DP :J CIQ

(5)

(6)

Here (4) and (5) are from (2), being

v

respectively, while (6) is from (3).

We continue (omitting

0

and v*

crossed out lines)
(4)

T(P :>Q)

T 0 T ::::> D( P :J Q)

FOP.::>DQ
TOP

(7)

FoQ

(8)

(6)

~

F 0 T

(9)

( 5)

T D(P :>Q)

(10)

Items (7) and (8) are from (6) by
( 10) are from ( 5) by f3 •

o<.,

and items (9) and

277

NON-FORMAL LOGICS

Now, the set of formulas on the left branch is normal
because of (7). Applying the -rr-rule to (9) produces FT
which closes the left branch.
The right branch is also normal because of (7), or
Applying the 1T-rule to (8) will produce, among
other things, FQ (from 8), TP (from 7) and T(P :::>Q) (from
(10).

10).

Then a f3 -rule application closes the right branch.

Finally, we consider appropriate tableau rules to
reflect the requirement that models be closed.
Specifically, we produce tableau systems for CN and CN4.
In a closed model, any world accessible from a normal world
In a tableau, we want to arrange things

is again normal.

so that if the set of formulas on a branch is normal, and
we apply a TI-rule, the resulting set is again normal. The
simplest way to accomplish this is just to incorporate
into the definition of S#.
for CN , S# = { v
for CN4, S#.=
Examples:

Thus

I v E S} u { CJ T }

0

{v

OT

0

1

VE.S}V{v*l v € S}V{ PT}.

The reader can easily show

D T ::::> o o T

is

provable using the CN rules, and OX :::> o ox is provable
using the CN4 rules.
Actually, the CN4 system can be simplified quite a
bit.

Recall our earlier discussion that,

r* 1~ v

r 11- v ====:>

implied a model was closed. The effect of this
is, for CN4 we can just use the K4 definition of S#, and
never mind about v* or o T •

Thus

Alternate for CN4
S# = { v

0

I v E s } u { v I -v E. s} .

CHAPTER SIX

278

The reader should try proving oX :::> o ox in this revised
CN4 system as well.
It should come as no surprise, having seen Chapter
Five, that for those logics involving symmetry on normal
worlds, a cut rule is probably indispensible.

This takes

the usual form.

1\

cut

z

z

Further, we can restrict cut rule applications, just
as we did in Chapter Five, to what we will still call
We continue to use the definition
of cut class from Chapter Five #3 generally, but there is
semi-analytic instances.

one modification necessary.

Consequently we give the

definition in full.
Definition:

We call C

Let C be a set of signed formulas.

a cut class if:
1)

Cis closed under signed subformulas,

2)

C is closed under the operation of prefixing modal

operators,
and for the logics CS5 and CNS5,
3)

C is closed under the following: . i f v

v* E c.

0

E C then

We continue to write C(S ) for the smallest cut class
0

Then, as in Chapter Five #3, in an L-tableau
0
for V using U as local and S as global assumptions, a cut

extending S •

279

NON-FORMAL LOGICS

application restricted to C(S liU UV) will be called
semi-analytic.

As always, such cuts introduce no new

variables into an argument.
Finally, we summarize tableau systems for all the
logics introduced in #2, in chart form.

It is assumed

that, for each logic, all the usual Classical rules are
available.

In the chart, "cut" means "semi-analytic cut".

In each case, the TI-rule is to be applied only if the
set S is normal. Likewise for CD, CD4 and CDB, the v-rule
only applies if S is normal.

280

CHAPTER SIX

Sll

v -RULE

rr-RULE

OTHER RULE

I v E S}

none

s, rr

none

Sll, lT
0
S, rr

none

LOGIC

c
CT

{II

0

{ -v I -v E. S}
0

Sll, rr
0

C4

{ -v I v E S} u
0
{ "V *I v E S}

CS4

{ v I v E S} u

v

CD

{ v *I II c:: S}
{ -v I v E S}

v
0
s

CD4
CB
CTB

0

0

Sll

Sll, rr
0
S, Tr

none

Sll, Tr
0

s. 1T

Sll, 1T
0

none

s. "IT

none

{v* 1 vE. S}

Sll

{ v I v E. S} u

none

Sfl, 1T
0
S, iT

cut

I v E. S} u

v

s, · rr

I TT E. S}
0
{ v I v E S} u

1)

v

s, rr

{v*l

1)

Sll, rr
0

s

s, Tr

Sll

Sll, 1T
0

0

1

v e S} u

0
{ rr 1 1T E. S}
0

{v

0

0

{VI

{TT

VES}V

0
0

llTES}

{1T

CDB

none

s

{v

{IT

CS5

s, rr

0

VES}U

llTE-S}

0

Sll, Tr
0
Sll, TT

0

cut
cut

cut

For each logic CL, a tableau system for the
corresponding closed logic CNL may be obtained by using the
CL system from the chart above, but adding D T (more
properly, T 0 T signed, OT

unsigned) to the set S/1.

Alternately, for the four logics involving transitivity,
the following simpler definitions of Sfl will suffice.
for CN4,

Sfl = { 1)
0

I v E s} \) { v I v E s}

281

NON-FORMAL LOGICS

for CNS4, Sfl = { v 1-v e: S}
for CND4, Sfl = {v

0

IVE.s}u{- v 1 ve.s}

for CNS5, Sfl = { v I v c= S} u { TT I lT E. S}.
114

CONSISTENCY PROPERTIES

As customary for us, the completene ss of the tableau
systems introduced in the last section will be derived from
appropriate Model Existence Theorems. We begin with a
definition of Consistency Property for the various logics.
First, a summary of the S# definition s.
LOGIC

Sfl

C, CT, CD

{v

C4, CS4, CD4

{v

CB, CTB, CDB

£ v o I -ves}u{1T 1 1T0 e.s}
£ v I v E. S} u { V* I v E S} LJ { TT I TT E.S}

CS5
CN, CNT, CND
CN4, CNS4, CND4

£v

0
0

0

0

I "\) E. S}

I v E S} u {'V * I v E. S}
I VE.S}LJ{ OT}
I v E. S} u { v * l v E. S} u { o T }

£v
0
or { v

0

VE.S}U { v I VE.S}

or, just for CNS4, { v
CNB, CNTB, CNDB
CNS5

I -v E: S}

I v E. S} u { TT I TI0 E. S} u { 0
{ v I v E. S} u { v * I v E S} u

{v

0

1" }

0

{Tr ITIE.S}U{ ClT}

or { v

I v E S} u { rr I rr E: S}

Next we define appropriate notions of consistency
property. For some of the logics, a cut condition is
involved, and we remind you that the definition of cut
class is different for CS5 and CNS5.

282

CHAPTER SIX

Definition:

Let L be one of the logics listed in the chart

above, let C be a Classical consistency property, and let
C be a cut class.

We call C an L-consist~~~~ property
0
(with cut class C , for those logics requiring a cut
0

condition) if, for each SEC:
first, S normal and

TIES ==9 S/IU{TI }EC
0

and second:

for C, C4, CN and CN4, no other conditions;
for CT, CS4, CNT and CNS4, the condition

-v ES =9

Su{-v }EC·
0

'

for CD, CD4, CND and CND4, the condition S normal===?
S/1 E C;
for CB and CNB, the cut condition, for any signed formula Z
in the cut class C, su{Z}E:C or SU{Z} E.C;
0

for CTB, CS5, CNTB and CNS5, the condition v €. S ~
S v {l.i } E. C, and the cut condition, for any signed formula
0
Z in the cut class C, sv{Z}EC or SU{Z}EC;
0

for CDB and CNDB the condition S normal ======> S/1 E: C, and the
cut condition, for any signed formula Z in the cut class
C ,
0

s u { z} E C or S u {Z} E C.

Note that consistency properties for CB, CNB, CTB, CS5,
CNTB, CNS5, CDB and CNDB are semi-analytic, but not
analytic; all the others are analytic.
Strong Model Existence Theorem for L 4.1:

Let L be one of

C, CT, CD, C4, CS4, CD4, CB, CTB, CDB, CS5, CN, CNT, CND,
CN4, CNS4, CND4, CNB, CNTB, CNDB or CNS5.

Let C be an

L-consistency property that is V-compatible (let C be an
L-consistency property with cut class C if L is one of the
0
logics CB, CNB, CTB, CS5, CNTB, CNS5, CDB OR CNDB). If S

283

NON-FORMAL LOGICS

is C-consistent (and C extends S and V for those logics
0

with a cut condition), then Sis (locally) satisfiable at a
world in some L-model <G,Q,Il, 11-> in which the members of V
hold at every possible world.
Proof:

The proof is virtually identical to that of Theorem

2.5.3 (for those logics not involving cut) or Theorem 5.4.1
(for those logics involving cut).

We omit most details,

but give a general outline, as a guide.
If we are working with a logic L whose consistency
properties include a cut condition, then we begin, just as
in the proof of Theorem 5.4.1, by replacing C by etc ,
where C is the cut class.
0

0

If we are working with an

analytic logic, we use C itself.

Then, we extend etc , or
0

C, as the case may be, to another consistency property,

call it C', that is of finite character (see Lemmas 2.5.4
and 2.5.5).

InC', every member can be extended to a

maximal member (see Proposition 2.5.7).
Now use C' to create an augmented frame as follows.
Take the set of possible worlds G to be the set of maximal
members of C'.

Call a possible world r normal if it is

normal when considered as a set of formulas.
of the non-normal worlds.

r #~A.

Let Q consist

Define B by: r B .t::. means

At this point it is straightforward to show

<G,Q,B> is an augmented L-frame.

Actually, this is a

case by case argument, no one of which is difficult, but
there are a lot of them.

We leave most of them to the

reader, and we give details for just one, CS5, which is
somewhat more complicated than the others, since the notion
of v*, and a modified cut class are involved.

284

CHAPTER SIX

So, suppose <G,Q,R> has been constructed following the
outline above, starting with eTc
symmetric on normal worlds.

0

.

We show the frame is

We omit verification of the

remaining CS5 conditions.
First, a few observations.

Our construction

techniques will produce a frame <G,Q,I> such that, for any

rEG,

r <;;.C •
0

Se.cond, if r

is normal, then T DT E r.

We verify this in detail.
C is not empty, since we are assuming it extends S.
0
Then it must contain some formula of the form TA, hence by
the extra closure condition, C contains T( o T ::::> oA).
0

Then, by closure under signed subformulas, C contains
T0T .

0

Now, using the cut condition on T CJ T ,

r u {T 0 T } E c I or r u {F Cl T} €. c I ' hence by the maximali ty
of r in c I' T 0 T E r or F D T E r . We are supposing r
is normal, and FDT is a IT-formula, hence r/IU{FT}EC 1 ,
which is impossible.

Thus T D T E r.

Now for the heart of the argument.

r, D. E G,
We show .6 R r , that
Suppose

r I .6 , and both r and D. are normal.
is, we show .6.11 c;;;; r, assuming r II c;;;; .6, using the CS5

definition of #, which contains three clauses, hence our
argument has three parts.
Case v *)

v* E. r.
two

Suppose v* €. .6.11, where v E: .c..

v -subcases, the other is similar.

Now since

We show

For clarity, we give the argument for one of the
V € .6.,

Suppose

v = T OX.

by an observation earlier, V E C , and

hence v* E C • That is, T( D T ::;, OX) E C •
0
0
cut clause, r u {T( o T :::l D X)} E C: 1 or

r U {F(DT::;, ClX)} EC 1 •

Since r

means either T(DT :::> aX) E r

0

Hence by the

is maximal in C 1 , this

or F(Or :::::> ax) E. r.

had the second alternative, we must also have

I f we

285

NON-FORMAL LOGICS

T 0 T ,F DX E r.

Now

r II c;;;. A and since F CJX is a iT

formula, it follows that F 0 X E: A, which is impossible
Thus we must have T(DT :::>DX)E

since TDXEil.

r, i.e.

V* E r.

v0)

Case

Suppose

v 0 E Ail where v E Ll.

We show

v E r. Once again we consider only the single subcase
0
v = T D X. By exactly the same argument as in the previous
case, we can show T( aT => oX) E r.

is normal,

Since r

T a T E r.

It follows (again using maximality of r) that

TDX E. r.

Then

r U{TX} f..C' and, by maximality once again,

TX e r, that is,
Case rr)
~ E

r.

v

0

E

Suppose

r.
1T E Ail

where

rr E A.

We show

Once again, for convenience, we consider a single

rr = F ox.

subcase, say

Suppose FoX t

r .

Using the cut

condition, TOXE r, and since rii«;;;A, T(or ::>oX)€ A.
We are supposing

A

is normal, hence T aT e. A

follows that T OX E A which is impossible.
i.e.

TT E

and it

Thus Fax E r,

r.

Thus, for CS5, R is symmetric on normal worlds.
As we said earlier, we leave the checking that

<G,Q,R> is an L-frame to the reader for the other
We proceed with the overall outline.

choices of L.

Next, define an interpretation v by: for a variable A,
v( r

,Al

~

if TA E r

{:
otherwise.

Then v determines a unique relation

11- so that <G,Q,R, 11->

is an augmented model, hence an L-model.

And one may show,

by induction on formula degree: for each r E G,

Z € r ===? r lf-Z.

From this the theorem follows easily.

286

CHAPTER SIX

Remark:

The above was phrased for signed formulas.

As

usual, there is a similar unsigned version.
Now we turn to the easy consequences.
Tableau Completeness and Correctness, 4.2:

Let S, U and V

be sets of signed formulas, let L be one of the logics
listed in the statement of Theorem 4.1, and use the
L-tableau system of #3.

There is a closed (semi-analytic)

L-tableau for V using the members of U as local, and the
members of S as global assumptions if and only if

sF

L

U-----7V.

Proof:

The argument in both directions is along the usual

lines: see Theorems 3.3.1 and 3.3.2.
Compactness and Finiteness:

Theorems 3.4.1 (Finiteness),

3.4.2 (Local Compactness) and 3.4.3 (Global Compactness)
all extend to the logics of the present section with no
changes in wording or proof.
#5

DEDUCTION THEOREMS

For this section L is one of C, CT, CD, C4, CS4, CD4, CB,
CTB, CDB, CS5, CN, CNT, CND, CN4, CNS4, CND4, CNB, CNTB,
CNDB or CNS5.
The Arrow Deduction Theorem (3.5.1) covers the logic L
with no changes in wording or proof, so we do not re-state
it. The Turnstyle Deduction Theorem, on the other hand,
goes through considerable modifications from what was

287

NON-FORMAL LOGICS

appropriate to normal logics (see Chapter Three #5).
We begin with the following special notation.
0

X =X
n+1
=
X

OT=>DX

Thus, for example,

X

n

1

= oT

::> t:JX

and X

2

=

DT:::>O(OT:::>DX).

Let <G, iQ, R, If-> be an L-model.

Lemma 5. 1 :
1)

2)

0

1

2

If X is valid in the model, so are X , X , X , •••
n
n+1
, then r * It- X •
I f r e G is normal, and r 11- X

Proof:
0

If X is valid in the model, trivially so is

Part 1)

n

X • Now, suppose X is valid in the model; we show the
n+1
If r is queer, then
Let
same is true of X
n+1
n
On the
r .ll' 0 T • hence r u- [J "T ::;, [J X • so r 11- x
other hand, for every r * we have
n

n

r* If- X since we are

assuming X is valid in the model. Then, if r is normal,
n+1
n
n
r If- 0 X • hence r If- o T :::::> I:J X ; again r If- X
n
n+1
r If- 0 T :::> ox . I f r is
Part 2) I f r If- X
• then
also normal,

r If- a T

so

,

r If- oX

n

n

and thus r* lf-X .

Turnstyle Deduction Theor:_em -~~r:_l:_,~_5_._~:

Let S, U and V be

sets of unsigned formulas, and let X be a single unsigned
Then

formula.
S, X I=

L

U0

1

V iff

s 1= u,x ,x , ... ,x
L

Proof:

n

for some n
~v

(modeled after that of 3.5.2)

288

CHAPTER SIX

Part 1)

Sf:

Suppose, for some n,
n
U,X,X, ••• ,x-v. TakeanyL-model
0

L

1

<G,Q,B, 11-> in which the members of S, and X are all

valid; we must show U----> V is also valid in this model.

r such that r Jr U.

Take any world

Since X is valid in
0 1
n
r If- X ,X , ••• ,X , so since

the model, by Lemma 5.1 part 1,
0 1
n
s 1= u,x ,x , ... ,x -----?V, r forces some member of V.
L

U----+ V is valid in the model.
Part 2)
S f:

0

L

Thus

This shows S,X ~\ u --v.

Suppose for no n do we have
n
---+ V.
We show we also do not

1

U,X ,X , ••• ,X

have S,X F U ~v.
L

Define a collection C of sets of signed formulas as
follows.

Put a set W in C provided, for each n there is an

L-model <G ,Q, R, 11-> in which the members of S are valid, and
0 1
n
there is a world reG such that r 11- {X ,X , ••• ,X } and
also r If- w.
We claim C is an L-consistency property, as defined in
#4.

As usual, we check only one of the conditions.
Suppose We C, W is normal and

Wll u { TT } E C.
0

Pick an integer n.

rr E W; we show
Since WE C there must

be an L-model <G,Q,lll, 11-> in which the members of S are

valid, and a world r E G such that r If- W and
0 1
n n+1
r II- {X ,X , ••• ,X ,X }. Since W is normal, the world

r must be normal.

r *, r* II-

r

11

Since rr E W then r 11- rr

hence for some

Also r* If- W#. And by Lemma 5.1 part 2),
n
If- {X ,X , ... ,X }. Since n was arbitrary it follows that
0

1

TT •
0

Wll U { rr } E. C •
0

It is trivial that C is also T(S u{X})-compatible.

Now, we began by supposing, for no n do we have

Sf

0

L

1

U,X ,X , ... ,X

n

-v.

It follows that TUVFVE:C,

Then by Theorem 4.1, TUV FV is (locally) satisfied in some

289

NON-FORMAL LOGICS

L-model <G,Q!,lll, lr> in which the members of S U{X} hold at
every possible world. This, of course, implies we do not
have S,X 1=

L

u ~v.

As might be expected, for certain logics Theorem 5.2
can be strengthened. We begin by showing that in close~
logics the form of the formulas involved can be simplified.
Lemma 5.3:

In CN (hence in any logic whose models must be

closed) the following is valid for each n>O:
0 T ,:) OnX).
xn

=(

Proof:
If n=1, the formula is valid in every modal

Part 1)

1

logic, since X=

--

1

(oT::>DX) is simply (OT ::>oX)=

(DT :::>OX).
The reader may show (tableaus is perhaps

Part 2)

easiest) that
CD ::>B):::> E I=

(A:::> DB)::> (A::> DE).
n
C
n
Now let A=D= D T , B= 0 X and E=X • We get
n
n
n
n
(DT ::> o X)::> X
(OT-::>00 X) ::> ( 0 T -:>OX)

l=c

that is,
(OT ::>

CJ

n

X) :::>X

n

l=c ( 0 T ::> o

n+1

X) ::>X

n+1

From this and part 1) it follows by induction that, for all
n>O,

n

( 0 T :::> D X) ::>X

n

is C-valid.
Part 3)

Again, the reader may show

(DT ::> CJA)::>( OT ::> OB).
CN
(This is a good exercise in tableaus, for logics with
n
n
closed models.) Now let A =X and B = oX. We get
A-=>(OT :::>B) j::

290

CHAPTER SIX

n
X :::) ( 0 T

::J

That is,
n
X :::> ( 0 T

::>

n
n
n
0 X) FCN ( 0 T :J 0 X ) :> ( p T :J Cl 0 X) •
0

n

n+1
n+1
X) FCN X
~ ( 0 T :::> 0
X) •

Then by induction (using part 1 again) we have, for each
n>O,

n

n

X ::>(PT :J oX)
is CN valid.
The lemma follows now from parts 2 and 3.
CorollarL_!2_:._i±_:

Let L be one of the "closed" logics, namely

CN, CNT, CND, CN4, CNS4, CND4, CNB, CNTB, CNDB or CNS5.
Then
S,X F=
S I=

L

U ~v iff for some n

L

1

U,X, OT=>DX, ••• ,

DT ::> 0

n

X ~V.

Next we show that for logics whose models involve
transitivity, the number of formulas involved can be
reduced.
Lemma 5.5:

In C4 (hence in any of the logics whose models

must be transitive based on normal worlds} the following is
n
n+1
valid for each n>O: X ::J X
Proof:

The reader may show, by tableaus say, that

I=

OX:Jo(OT :::>oX).
C4
From this, by Classical logic manipulations,

FC4 [ 0 T :J 0 X J :J [ 0 T ::>
That is,
1

2

F X :>X •
C4
Again, one may easily show
A :::>B I=

c

DA ::::>DB.

0 ( 0 T

:::> 0 X) J •

291

NON-FORMAL LOGICS

Hence, of course,
A:::>B F

[DT :::>

ClA]:J[ClT :::>DB].

n+1
Cn
We get
Now let A = X and B = X
n+1
n
n+1
n
]
FC [OT ::::> DX ]:::>[DT :::>oX
X :::>X
or

n

X :::>X

n+1

n+1

i=C X

:;)X

n+2

The lemma now follows by induction.
Let L be one of the "transitive" logics,
namely C4, CS4, CD4, CS5, CN4, CNS4, CND4 or CNS5. Then
Corollar:t__5~~:

s,x 1= u ~v
S I=

1

L

L

iff

U,X,X ----+V.

Finally we consider the simplifications due to
reflexivity.
In CT (hence in any of the logics whose models
must be reflexive on normal worlds) the following is valid
n
n+1
::>X •
for each n>O: X

Lemma 5.7:

It is easy to see that

Proof:
I=

so

CT

F

OA:JA

D(OT:::>OZ):::>(tJT::: > Z).

CT
Then by Classical logic manipulations,

I=
so
I=

CT
CT

[DT :::> Cl(DT :::> Z)] "':J[ClT ":::> ( DT :::>Z)]

[ ClT ":::> Cl( Cl T :::> Z)] :::>[DT :JZ].

k

Now let Z = DX •
I=
CT
That is,

We get

k

k

[OT:::> Cl(DT ":::> DX )]:J[DT ::::>OX].

292

CHAPTER SIX

I=

k+2

CT

X

Corollary 5.8:

:=JX

k+1

Let L be one of the "reflexive" logics,

namely CT, CS4, CTB, CS5, CNT, CNS4, CNTB or CNS5.

Then

S,X F U----+V iff for some n
L
n
S J= U,X,X ----+V.
L

Remarks:

Perzanowski [1973] also provides deduction

theorems for the logics considered above, and many others
as well.
#6

INTERPOLATION THEOREMS

Gentzen systems of the conventional sort for the logics
considered in this chapter are quite easy to produce,
following the techniques of Chapter Three #6.
this to the reader.

We leave

Instead, we present symmetric Gentzen

systems for several of these logics, and use them to prove
interpolation theorems, as in Chapter Three #7,8.

We only

present proofs for those logics not involving cut; for
those that do, the proofs can be modified along the lines
of Chapter Five #8.

We leave this to the reader.

To save time, we will present the Gentzen system
rules, and indicate interpolants at the same time.

When we

write

we mean: 1) in the sequent calculus under discussion, the
sequent U1 -

V1 follows from the sequent U ___, V, and 2) if

293

NON-FORMAL LOGICS

X is an interpolant for U--;. V then X' is an interpolant
for u•~v•.

We use the definition of interpolation

formula for a sequent given in Chapter Three #8.
As might be expected, for symmetric Gentzen systems we
need not only the S# notion but also a dual SP. For
convenience, we summarize the definitions, for those logics
not involving cut, in chart form. We use signed formulas,
and we also use a TT* notion, paralleling the v* one
introduced in #3.

We begin with it.

<>X)

T <>X

T( D T

F0 X

F ( D T :::> OX)

Note that IT* = IT*, where

A

TT

is some -v -formula of course,

and the definition of v* from #3 is used.
Now we give the chart for S# and Sp, covering the
logics that concern us here.
LOGIC

DEFINITION OF S#

C, CT, CD

{v

C4, CS4, CD4

{v

CN, CNT, CND

{v

CN4, CNS4, CND4

0

I V E S}

I v E: S} u
{ -v* I VE: S}
0

I v E. S} u
0
{T 0 T}

DEFINITION OF S!;1

f rr

0

I TTE.S}
I TTE.S} u

f 7T
0
{rr*l TT"E.S}
{TT

0

I TT E. S} u

{F 0 T}

I Tr e: S} u

I V E S} u
{v *I v E. S} u

{TT*I TTE.S} u

{T DT}

{F D T}

{v

0

Note that in each case Sp

{rr

0

= S#.

The key feature of S# is: in a model (appropriate for

294

CHAPTER SIX

the particular logic in question) if r is a normal world
and r If- S then for all r *, r * If- S/1.
if

In other words: ( 1)

r is a normal world and r 11- Z for all Z e: S, then for

each

r *, r *If- Z for all Z € S/1.

easily, using the fact that SP

From this it follows

= S/1, that:

(2)

if r

is a

r * 11- Z for some Z E S 17

normal world and for some

r *,

then r 11- Z for some Z E S.

We make much use of ( 1) and

(2).

Now we present the sequent rules (and interpolants)
for the logics listed in the chart above.
The Axioms and Classical Rules from Chapter Three 117,
and the corresponding interpolants from Chapter Three 118
are assumed.

In addition, we have the following.

Common Rules:
TIL)

Uti, rr

X

------7

0

vP

y

u, lT -----> v
2rovided u uv is normal.
And for the interpolation forrnula:
1)

2)
II R)

if u is normal, y = OT 1\ ~X;
if u is not normal, y = ~X.

X
U l l - VI?, v

0

y

u ~v.v
provided U u V is normal.
And for the interpolation formula:

NON-FORMAL LOGICS

1)

i f U is normal, Y = D X;

2)

i f U is not normal, Y =

295

<>.L v ox.

Special Rules:
For C, C4, CN and CN4:

VL)

u, v

X

---->

0

1T R)

--X

u, v
X

no other rules.

v
v

u -----? v, TT

0

X

u - V, Tf
For CD, CD4 ,__CND and CND4:
D)

X

Uti -----.. V 1:>
y
u~v

provided U u V is normal.
And for the interpolation formula:
1)

if U is normal, Y =ox;

2)

if U is not norrnal, Y = <>X.

This completes the presentation of the .')yste•ns and the
interpolants.

1/e now sketch why they do the job.

296

CHAPTER SIX

The correctness of the sequent calculus systems is
easily established in the usual way:

each axiom is L-valid

and each rule takes L-valid sequents to L-valid sequents.
Likewise, completeness follows from the Model Existence
Theorem 4.1 by the same argument that worked in Chapter
Three #7.

We omit details.

We argue for the appropriateness of interpolants.

We

concentrate_on a representative case, rule 1TL).

So,

suppose Uu V is normal, we have that U#, TT

~ Vp

, and we

know X is an interpolant for this sequent.

Let us show Y

0

is an interpolant for the sequent U, rr - - V where 1) Y =
oT

A

<>X if U is normal and 2) Y = <>X if U is not normal.
In either case, it is obvious that all propositional

variables of Y are common to both sides of the sequent
U, lT----? V, since we know all propositional variables of X
are common to both sides of U#, rr ~VI> •
0

We must yet

show that both of U, rr --+TY and TY ~ V are L-valid.
<G, Q, R, rr-> be an L-model, and

Let

r e G; we show these sequents

are forced at r .
Case 1)

r

is normal.

Suppose

r 1~ U, rr •

Since

r If- rr , for some r *,

r *If- lT • Since r II- U, r* I~ Ufl. Thus r* If- U#, rr •
0
0
But we are assuming that X is an interpolant for
U#, lT --+VIo , hence Ufl, TT ----?TX is L-valid, and thus
0
0
r * I~ X. It follows that r If- <>X. Also since r is
normal, r If- o T

so

either choice of Y.

r If- o T

"

<>X.

Hence r D- TY for

We have shown r 11- (U, rr-- TY).

r ~ TY. Then, for either choice of Y, we
must have r If- <> X. Since r is normal, for some r *,
r * D- X. Since X is an interpolant for U#, rr -vp then
0
TX ---?VI> is L-valid, so r * forces some member of VI> • It
Suppose

NON-FORMAL LOGICS

follows that r forces some member of V.

297

We have shown

that r If- (TY----? V).
Case 2) r is queer.
Subcase 2a)
01"

1\

Suppose U is normal, and hence Y =

ox.

Since U is normal, it must contain v-formulas, hence

r Jl'- u since r is queer. Thus r It- (U, TT ---+TY).
Similarly i f r 11- TY we would have r Jf- c T which is
impossible since

r is queer.

Hence

r .JI'- TY, so

r II- (TY-V).
Subcase 2b)

Suppose U is not normal, and hence Y =

<> X.

Note that, for rule TTL) to have been applied, U u V
must have been normal. In this subcase, U is not normal,
and it follows that V must be normal.
Now, since r is queer, r It- 0 X, i.e.

r It- TY, hence

r It- (U, rr---+ TY).

Since Vis normal, V contains some v-formula, hence V
contains some n -formula.

Then r forces some member of V

since r is queer. Thus r II- (TY---+ V).
This ends the verification for rule TTL.

The other

rules are similar, or simpler, and are left to the reader.
Now, since the symmetric Gentzen systems are complete
and correct for the logics in question, the Craig
Interpolation Lemma follows, just as it did in Chapter
Three #8.

Indeed, the argument actually proves an analog

of the stronger Lyndon version (3.9.1).
Theorem 6.1:

Formally,

Let L be one of C, CT, CD, C4, CS4, CD4, CN,

CNT, CND, CN4, CNS4 or CND4.

I f A::> B is L-valid then A::> B

has an interpolation formula Z in L such that every
propositional variable that occurs in Z occurs in both A

CHAPTER SIX

298

and B with the same polarity with which it occurs in Z.
Remarks:

The analog of Corollary 3.8.2 fails for these

logics.

That is, it can happen that A~B is L-valid and A

and B share no variables, but neither --A nor B is L-valid.
An example that shows this for all these logics is
o (P ::> P) :::> o (Q :::> Q) where P and Q are distinct variables.
In Hallden [1951] a notion was introduced which has
become known as Hallden completeness.

A logic L is called

HalldE{n complete if, whenever A v B is L-valid and A and B
share no variables, either A or B is L-valid.

Since A=> B

is equivalent to -A v B, the example above shows none of
the present logics is Hallden complete.

Similarly the

Remarks following Corollary 3.8.2 establish Hallden
incompleteness for the systems considered there, while
Corollary 3.8.2 itself is really a Hallden-completeness
result.
Consequences:

For the logics listed in the statement of

Theorem 6.1, one may derive the Beth Definability Theorem
from the Interpolation Theorem by the same argument as was
used for Theorem 3.10.1.

Also an analog of the Strong

version (3.10.2) holds with almost the same proof as that
of Chapter Three.

The only change is that the Deduction

Theorem of the present chapter (5.2) must be used in place
of the Deduction Theorem appropriate for normal logics.
Likewise the analog of Theorem 3.11.2 (concerning
which formulas are preserved under simple extensions) holds
for the present logics.

The proof given for 3.11.2 still

applies, except that the version of the Deduction Theorem
used must be changed.

This is straightforward.

299

NON-FORMAL LOGICS

Finally, just as in Chapter Five #8, one can introduce
a notion of weak interpolation formula and, by combining
the method given there with that of the present section,
prove interpolation theorems for the "symmetric" logics CB,
CTB, CDB, CNB, CNTB, CNDB, CS5, CNS5.

We leave the

verification of this to the reader.
#7

DECIDABILITY

Better decision procedures for all the logics of the
present chapter will be sketched in Chapter Eight, but we
can handle a few of them now relatively easily.
In Chapter Three #12 we gave a decision procedure
based on Consistency Properties, for those normal logics
not involving cut. The same procedure, word for word,
works for those logics considered in the present chapter
that do not involve cut, or closure, or the notion of v *,
in their Consistency Property definition.

That is, C, CT

and CD.
To take care of the closure condition, merely change
the set C(X) of signed sub-formulas of X that is used in
Theorem 3.12.2 so that it also includes T D T.

With this

change, the same techniques also give us decision
procedures for CN, CNT and CND.
Dealing with those logics whose consistency property
conditions mention v* is slightly more complicated.

The

simplest way is to observe that -v ** is equivalent to -v *,
so the definition of S# for C4, say, could be changed to
1-vE S} u {-v* I v*~S} u {v* I V€.S and vis not
X* for some v -formula X S}, and this change would still
{-v

0

allow a proof of the Model Existence Theorem.

If this is

300

CHAPTER SIX

done, then the decision procedure of Chapter Three may be
extended to handle C4, CS4 and CD4, by taking the set C(X)
of signed formulas to consist of not only the signed
sub-formulas of X, but also of v * if v is a signed
sub-formula of X.
A combination of the two modifications above gives us
decision prodecures for CN, CNS4 and CND4.
The logics involving cut will have to wait until
Chapter Eight.
#8

AXIOM SYSTEMS

In Chapter Four #3 we introduced an axiom system for a
modal logic called U (for underlying). It had, in addition
to the Classical rules and axioms of Chapter Four #2, the
Rule of Modalization
Rule M:

iT v v

0

0

TT

V V

We argued for the correctness of this rule in all Kripke
models. As a matter of fact, it is also a correct rule in
all augmented Kripke models. Thus, suppose <G,Q,B, 1~> is
an augmented Kripke model in which rr v -v is valid: the
0
0
same will be the case for 1T v v. For, if r e: G is normal,
r

1~

rr v v

by the same argument that was given in Chapter

Four 113, while if r is queer, r

I~

rr v v

since queer

worlds force all 11"-formulas.
Consequently we will build axiom systems for the
non-normal logics of the present Chapter by starting with
the axiom system for U.

NON-FORMAL LOGICS

301

Further, in Chapter Four #5 we asserted that the logic
C was axiomatized by adding the schema CJ(X :::~y) ::> (oX::> OY)
to U, while K was axiomatized by adding this schema and
also o T, The claim about K was verified in Chapter Four
#6, Now it is time to verify the claim about C.
Incidentally, it is easy to see that any formula of the
form O(X:::>Y)=>(OX=>OY) is valid in all augmented Kripke
models.
if

Very simply, if r is a world in such a model, and

r is normal, the argument is exactly as in Chapter Four

#5, while if r is queer, r ..H'- o (X =>Y) since -v -formulas
are never forced at queer worlds hence, again, the
implication holds.

The extension to queer worlds is thus

by a trivial argument, but that's what comes of saying
truth isn't necessary.
For convenience, we repeat the
0

Definition: C is the set of all formulas of the form
D (X:::> Y) :> ( o X .::::~ o Y) •
We will show S F X iff

c

Theorem 8.1:

If SVC

0

t-

u

0

sue 1- x.

X then SF

u

c

X.

0

Proof: Suppose S v C t- X. Then there is a derivation II)
0
u
of X from S u C in U. The reader may easily check that, if
<G, Q, R, it-> is an augmented Kripke model in which the
0

members of S u C are valid, then every line of the
derivation D must also be valid in the model, in
particular, X.
Lemma 8.2:

0
C t-

This suffices to establish the theorem.

u

( DT A OA),... oA.

302

CHAPTER SIX

0

By Lemma 4.6.2, C r-U (CJT"'- OA)"" D(T/\ A).

Proof:

(T A A) =A

But

is a tautology, and we have Corollary 4.4.4, a

Replacement Theorem for U.
Theorem 8.3:
Proof:

If S I=

0

c

X then S u C 1-

u

X.

We follow the format of the proof of Theorem 4.6.3.

Thus we may suppose all v -formulas are of the form
while all rr -formulas are of the form
0
S u C ,f X; we show S ~ X.

u

<> Z.

oZ

Now, suppose

c

Call a finite set {A , ••• ,A} S-C-inconsistent if
0
1
n
sue 1- (T/\A A ••• AA )::l..L. Call a finite set
U
1
n
S-C-consistent if it is not S-C-inconsistent.
Let C be the collection of all (finite) S-C-consistent
sets.

We claim C is a C-consistency property (in the

unsigned sense, of course).

As usual, we only check one of

the conditions.
Suppose the finite set FE C is normal, and

TTE. F;

we

show Ffl u { TT } E: C, where we use the C definition of Ffl
0
given in 114. Equivalently, suppose TT E F, F is normal, but
Ffl v { TT

0

¢ C;

}

we show F t. C.

Say F = { DA , ••• , oA, <>B,C , ••• ,C} where
1
n
1
k
o A , ••• , D A are all the v -formulas of F, and 1f = <>B.
1
n
Then Ffl ={A , ••• ,A}. Since FfiU{TT} i C, we have
0 1
n
0
sue 1- (T/\A A ••• AA AB):::>.L.
U
1
n
From this we get
0
s v c 1- ( T " A /\ ••• 1\ A ) ;:) ( B ;:) J..)
0 U
1
n
S UC 1- ( T 1\ A 1\ • • • A A ) :=> - B
U
1
n
Then (Proposition 4.4.2)
0

S U C 1-

U

D ( T 1\ A 1\ ••• 1\ A ) :::> D-B
1
n

so (Lemma 4.6.2)

303

NON-FORMAL LOGICS

0

sue f- ( 0 T /1 oA A ••• ADA)::l D-B
n
1
u
s uc 0 f- (OT /1 DA A ••• /\ DA )::::>(- o -B=> -l-)
n
1
0 u
sue f- ( 0 T OA A • • • /\DA A ~B) ::::> J....

"

n
1
u
Now, in the proof of Theorem 4.6.3, at the comparable
point, we were able to get rid of the term D T because
0

was one of our axioms, i.e. a member of K • Of course
this is not available now. But we can still delete the
OT

OT

term by the following alternate argument.

Since F is

assumed to be normal, the string oA A ••• "DA is not
n
1
empty. Hence we can use Lemma 8.2 to conclude
ADA can be replaced by DA A ••• ADA.
DT A OA A
n
1
n
1 •••
This is the only place the present proof differs from the
one for K in Chapter Four.

sue

0

f-

So of course

u

sue 0 f-

U

Then

(OA /\ ••• ADA
1

(-rAoA

which implies F t

c.

1

A •••

n

1\~B).:::::>..L

ADA

n

/\~BAC

1

A ••• AC) ::::J..L
k

Thus C is a C-consistency property. It is easily seen
0
to be S-compatible. Now, we assumed S u C )f- X. It

u

follows that {-X} E:C, hence by Theorem 4.1 (unsigned
version) S ~

c

X.

This concludes the proof.

Now, to axiomatize the other logics whose models were
presented in #2 we add extra axioms to those for C.
Indeed, the general pattern is much like that of Chapter
Four #7, where logics that extended K were axiomatized.
There are certain modifications to allow for queer worlds,
however.
In Chapter Four, the axiom schema OX :::> o c X was added
when transitive models were required. But this is not
appropriate now as it is easy to see that it imposes on an

CHAPTER SIX

304

augmented model not only transitivity but closure.

The
solution is to modify this axiom schema in a way analogous
to the way the K4 definition of S# was modified for C4 in
Specifically, the schema OX:::> Q ( D X)* is appropriate
for transitivity without closure.

113.

Similarly, for symmetry X :::> o <>X is no longer
appropriate since it trivially implies every world is
normal.

But X:::> ( o <>X)* will do very well instead.
Now, for convenience, we repeat certain definitions

from Chapter Four #7, Chapter Five #6, and add a few to the
list. Recall the notation: [X] means all formulas of the
form X.
co
0
T
Do
40
Bo

= [ 0 (P::>Q) :::::>( DP :::> OQ)]
= [ D P :::> P]
= { <> T}
= [DP:::>ODP]

= [P :::> D<.>P]
4*0 = [DP ::::> O(DT :::> DP)]

B*o = [P ~( 0 T ::::> D <.>P)]
N

= { QT ::>DOT}

Now, the reader may easily verify, using the Model
Existence Theorem 4.1, that, over U,

305

NON-FORMAL LOGICS

THE LOGIC

IS AXIOMATIZED BY

CT

C UT

CD

C UD

C4

CO U4*0

0

0

0

0

0
0
0
C UT U4*
0
0
0
C UD U 4*

CS4
CD4

0

CB

0

C UB*
c0 UT 0 UB* 0
0
0
0
C UD uB*
0
0
0
0
C u T u 4* uB*

CTB

CDB
CS5

And for the closed versions of these logics, one simply
adds N to the axiom set.
Actually, for those logics with models involving both
closure and transitivity, axiom schema 4

0

for the more complicated combination of 4*
now show.

can substitute
0

and N, as we

First, trivially
4

0

~

u

OT:JOOT

Next we have
(a tautology)
hence
t.-

also
4

0

o o. X :::> 0( 0 T :::> oX)

u
f-

u

(by Proposition 4.4.2)

OX::lOOX

hence from the two preceeding,
4

0
0

f-

u

OX :::J D(CIT :::>OX).

0

Thus 4 gives us the effect of N u4 *
In the other direction,
0

C

Then

1-

u

Q(OT? OX)?(ClOT ::::> Cl CIX)

306

CHAPTER SIX

0
C f-

u

[D(ClT::>OX)ADCJT]~OPX

and it follows easily that
0
C UN 1-

u

[ p( PT :::>OX) A

o-r]~ OCJX.

Then by Lemma 8.2
0

C UN

Hence

0

1-

u

0( OT :::> DX) :::> DDX.

0

* 1- u 0 X :::> a DX.

C V N U4

Remark:

These axiomatizations are, in a general way, to be
found in Lemmon [1957], see also Lemmon [1966, 1966A]. But

see the E5 correction in Kripke [1965].
#9

NATURAL DEDUCTION SYSTEMS

In Chapter Four we presented two styles of natural
deduction systems, which we called A-style and !-style.
See Chapter Four #12 for motivation.

Now we sketch how to

modify both styles to treat the logics of the present
chapter.
In the !-style systems, a strict subordinate
derivation was intended to represent an argument about a
particular alternate world, one that must exist given the
argument up to that point. Well, in augmented models we
only care about alternates to normal worlds.

This suggests

the following.
Keep the usual Classical rules.
Use the Strict Iteration Rule for !-systems given in
Chapter Four #13.
Modify the Creation of a Strict Box Rule for !-systems
to the following:

if a formula

occurs in the course of
a derivation, and there are -v -formulas at the same nest
TT

307

NON-FORMAL LOGICS

level, then a strict subordinate box may be started, at the
same nest level as the occurrence of 1T, with Tl as the
first line.

Schematically,

0

v

lTO

That is, we require that the set of formulas having the
same nest level as TI be normal if a strict box is to be
created.
We keep the same Contradiction Return Rule as in
Chapter Four #13.
And we add the following.
Special Rules:
1)

For C, C4, CB, CN, CN4 and CNB, none.

308

CHAPTER SIX

2)

For CT, CS4, CTB, CS5, CNT, CNS4, CNTB and CNS5,

3)

For CD, CD4, CDB, CND, CND4 and CNDB, one may start a

-v

v

0

strict subordinate derivation at any point provided the set
of formulas at the same nest level as the proposed strict
subordinate derivation is normal.
This completes the present description of I-style
systems.
Example:

Here is a proof, in the I-style system for C4, of

D X ;:l a ( D A ::::1 OX).
reference.

As usual, we use numbers for line

309

NON-FORMAL LOGICS

assumption

( 1)

TDX

(2)

FD(OA=>CJX)

(3)

TDX

(4)

FDA :;J OX

(5)

TX

assumption

iteration on (2)
creation of strict box on (2)

(6)

} strict iteration
on (3)
T ClT :J ox

(7)

TOA

assumption

(8)

FDT

assumption

(9)

TDA

iteration on (7)

( 10)

FT

( 11)

T-L

creation of strict box on (8)
a contradiction rule on (10)

(12)

T-L

contradiction return on ( 11 )

(13)

TOT

( 14)

T Cl T ::> CJ X

(15)

TOX

(16)
( 17)

reverse on (8),(12)
iteration on (6)

T:JE on (13),(14)
T :J I on ( 7 ) , ( 15 )
TDA:JCJX
a contradiction rule on (4),(16)
contradiction return on ( 17)

(18)

T-'T_L

( 19)

T 0 ( 0 A :;J OX)

(20)

T(DX ::> D(OA ::>OX))

reverse on (2),(18)
T :J I on ( 1 ) , ( 19 )

Note that the two times strict boxes were
created, normal sets of formulas were present: the first
time we had line (3), the second time we had line (9).

Remarks:

Next we turn to A-style systems.

In these, a strict

subordinate box was intended to represent an argument about
a generic alternate world. Now the v-return rule (Chapter
Four #15) must be modified.

After all, if we have somehow

convinced ourselves that X must be forced in every world
accessible from r , this is not enough to say D X is forced

310

CHAPTER SIX

at r; r

might be a queer world, in which case arguments

about alternate worlds are not relevant. In practice, all
that is needed is to replace the v-return rule (which is
analogous to the axiomatic Rule of Necessitation) by a rule
more like the axiomatic Rule M of modalization, introduced
in Chapter Four #3. Now, a little more formally, for
A-style systems we proceed as follows.
Keep the same Strict Iteration Rule as above (and
which was used for the A-systems of earlier chapters).
Use the Creation of a Strict Box Rule from Chapter
Four #15, namely one can be started at any point.
Replace the v -return rule by the following.
M-Return Rule: If T( lT v v ) occurs directly inside a
0
0
strict box, T(TT v V) may be returned outside. (Here TT
and \1 are used in their unsigned versions.)
Schematically,

T( lT

n

v v )
n

T(TTVV)

Then the Special Rules are
1)

For C, C4, CB, CN, CN4 and CNB, none.

2)

For CT, CS4, CTB, CS5, CNT, CNS4, CNTB and CNS5

v
i)

3)

0

For CD, CD4, CDB, CND, CND4 and CNDB, the rule

311

NON-FORMAL LOGICS

TDX
T OX.

This completes the present description of A-style
systems.
Example:

We will give an A-style proof of the same formula

as in the previous example.

But to keep things relatively

simple, this time we separate part of it out, first
showing: in C4, DA :J aT. The A-style proof goes as
follows.
( 1)

F~A

(2)

FT

assumption

(3)

TJ..

contradiction rule on (2)
reverse on (2),(3)

assumption

(4)

TT

(5)

T~AvT

(6)

T-DAVOT

(7)

FCJT

(8)

T- DA v DT

(9)

T- DA

TVE on (7),(8)

(10)

FDA

derived rule on (9)

( 11)

To A:::> aT

T v I on ( 1 ) , ( 4)
M-return on (5)

assumption
iteration on (6)

T :::> I on ( 7 ) , ( 10 )

Now we give an A-style proof, in C4, of
0 X :::> o ( o A:::> oX).

At a certain point we abbreviate things

by inserting just the formula T CJ A :J a T •

It is to be

understood that, in a full proof, the entire derivation
given above should go at this point.

It should also be

obvious to the careful reader that in a detailed
development of this natural deduction system there are many
other abbreviations that could profitably be introduced.

CHAPTER SIX

312

assumption

( 1)

T oX

(2)
(3)

} strict iteration
TX
T 0 T ::> 0 X on ( 1 )

(4)

To A

(5)

TGJA :::> OT

(6)

ToT

(7)

T P T ::J ox

(8)

To X

(9)

T o A ::J 0 X

(10)

F- X

( 11)

T PA :::>ox

( 12)

assumption
theorem

T ::J E on ( 4 ) , ( 5 )

iteration on (3)

T :::> E on ( 6 ) , ( 7 )
T ::::>I on ( 4 ) , ( 8 )

assumption

iteration on (9)
T v I on ( 10 ) , ( 11)
T~Xv(OA:::>oX)
o(oA:::>oX)

M return on (12)

(13)
(14)

T~oxv

(15)

T- a X v D ( o A :::> a X)

(16)

T-

(17)

T ox

iteration on (1)

(18)

FD X

T - E on ( 16 ) , ( 17 )

( 19)

T.L

F 0 ( o A:::> OX)
DX

assumption
iteration on (13)

T v E on ( 14 ) , ( 15 )

(20)

contradiction on (17),(18)
reverse on (14),(19)
To(a A::> oX)

(21)

T(DX:::>D(OA::lD X))

T::>I on (1),(20)

This concludes the presentation of the various natural
deduction systems. We leave correctness and completeness
The general pattern of Chapter Four
can be followed except, of course, that the Model Existence

proofs to the reader.

Theorem of the present chapter must be used in place of the
one appropriate for the normal logics considered in earlier
chapters.

313

NON-FORMAL LOGICS

#10

REGULAR AND QUASI-REGULAR LOGICS

Definition:

A modal logic L is normal (respectively,

regular) if it can be characterized by adding a set S of
global axioms to K (respectively, C), where Sis closed
under substitution.

Thus

XE L iff S I= K X says L is normal
X E L iff S f C X says L is regular.
The logics considered in earlier chapters were, for
the most part, normal.

There were certain exceptions in

Chapter Four #8 and Chapter Five #12.

The logics

considered in the present chapter so far have been regular.
For example, CS4 is regular since
X € CS4 iff [ Cl p :;) p. D p :;) D ( 0 T :::> Cl p)] F X.

c

Recall the use of square brackets to mean: all formulas of
such-and-such forms are taken as axioms.
Note:

Every normal logic is also regular since, if global

axioms S will do on K as a base, then global axioms
S u { 0 T } will do on C as a base.
Definition:

A modal logic L is quasi-normal (respectively,

quasi-regular) if it can be characterized over K
(respectively, C) using both a set S of global axioms and a
set W of local axioms, both closed under substitution.
Thus
X E. L iff S I= K W- X

says L is quasi-normal

X E L iff S FC W~ X says L is quasi-regular.

CHAPTER SIX

314

The logics introduced in Chapter Four #8 and Chapter
Five #12 were quasi-normal. They were used to show: one
could get from certain normal logics to certain other
normal logics by going through an infinite sequence of
stronger and stronger quasi-normal logics. (Results about
local finite axiomatizability then followed.) Another way
of looking at the matter is: in certain cases, adding a
global axiom scheme to a normal logic could be considered
to be the limiting case of adding a sequence of stronger
and stronger local schemas.
Now we want to consider an analogous development,
involving quasi-regular logics. We will show that one can
get from certain regular logics to certain associated
normal logics by going through an infinite sequence of
stronger and stronger quasi-regular logics.
One gets from, say, C to K by simply adding
global axiom.

Cl T

as a

According to the Turnstyle Deduction Theorem

5. 2, adding Cl T as a global axiom is the equivalent of
0
1
2
adding as local axioms all of ( Cl T ) , ( o .,- ) , ( o T ) , •••
This suggests we consider what happens when we add to C an
initial segment ( D T )

0

,

( Cl T )

1

, ••• , ( c T )

n

as local

axioms then, separately, see what happens as n grows.

In

effect, this is what we do. But first, there are certain
convenient simplifications that can be introduced.
We make much use of the Rule RR of regularity which,
we remind the reader, is given as Part 1 of Proposition
4.4.2.

For present purposes, it reads
X:::JY
OX:::> DY.

It applies in all regular logics.

315

NON-FORMAL LOGICS

For each n > 0, D

Lemma 10.1:

n+1

n

is C-valid.

::J D T

T

If n = 0 the statement becomes

Proof:

By induction.

OT ~T

which is a tautology.

The induction step is a

direct application of Rule RR.
For each n > 0,

Lemma 10.2:

D

n+1

T :::> ( 0 T)

n

is C-valid.

(Definition in #5.)
If n = 0 the statement becomes

By induction.

Proof:

The induction step goes as

aT :::> o T , trivially C-valid.

follows.
Suppose o
k+1
k+2

0

T ::J ( o T)

T::>o(OT)

DO

or

k+1

T::>Q(DT)

k

is C-valid.

k

By Rule RR,

k

hence trivially
k+2

k

T::J[DT.::JCI(DT)]

0

or

k+2

0

T::>(DT)

k+1

•

[ ( 0 T )

For each n > 0,
n+1
n
1
T
1\ ( D T ) 1\ ••• 1\ ( 0 T ) ] ::J 0

Proof:

Again by induction.

Lemma 10.3:

0 T .::J

follows.

If n = 0 the statement becomes

which is C-valid.

oT

Suppose
0

[(OT)

is C-valid.
So by Rule RR

k

The induction step goes as

1\ ••• ;\(0T) ]:JO

k+1

T

Then, trivially, we also have
k+1
k
0

[T 1\ ( D T )

is C-valid.

1\ ••• 1\ ( 0 T )

] ::> D

T •

316

CHAPTER SIX

Q [T /\( 0 T)

0

k

~1

/\ ••• /\( 01)];:) 00

or, by Lemma 4.6.2,
[OT/\ Cl(ClT)

0

A ••• AO(Cll)

k

]:JO

T

k+2

T.

Now, the following is a Classical tautology:
0
k
[OT/\O(ClT)

A ••• /\Cl(OT)

0

]=

[OT 1\(DT:J O(OT) )A ••• /\(OT:::>O(OT)

and this latter is just
0
1
[( 0 T)

Thus
[(Cll)

/\( 0T)

0

/\(OT)

Proposition 10.4:
[(OT)

/\ ••• /\ ( 0 T)

1

1\ ••• /\(ClT)

k+1
k+1

k

)]

].

k+2

):JCl

T.

For each n, the following is C-valid:
1
n
n+1

/\(ClT)

A ••• /\(ClT)]

=:

0

T

Proof:

The implication from left to right is just Lemma

10.3.

From right to left it results from a combination of

Lemmas 10.1 and 10.2.
Now we suggested earlier that it might be of interest
to see what happens when we add to C a set of local axioms
0
1
n
{ ( o T ) , ( o T ) , ••• , ( o T ) } • The preceeding Proposition
says instead we can work with the much simpler set
n+1
{0

T}.

So much for motivation.

We take up the details in the

next section.
#11

LOGICS BETWEEN REGULAR AND NORMAL

We continue the development begun in the previous section.
First some notation.

317

NON-FORMAL LOGICS

Let L be a regular logic and Z be a formula.

Definition:
1)

L + {Z} denotes the modal logic that results when

z is added as a global axiom to L.
X E. L + {Z}
2)

Thus.

Z I=

means

X.
L
L(Z) denotes the modal logic that results when Z
Thus

is added as a local axiom to L.
means

X E L(Z)

I=

L

Z -->X.

Let L be some regular logic, and consider the modal
Since L is regular, there is some set S of

logic L+{ o T } •

formulas, closed under substitution, such that

X E. L iff s 1=c x.
But then
X E. L + { 0 T }

iff

Cl T

iff

S,

iff

S I=

l= X
DT

K

L

X.

I=

c

X

It follows that L+{ OT} is a normal logic.
normal logic associated with ~-

We call it the

For example, the normal

logic associated with C is K; the normal logic associated
with CT is T.
The main result of this section is the following, from
Segerberg [1971] pp 226-233, but deriving from Kripke
[1965] and Lemmon [1965].
Theorem 11.1:
1)

L( 0

n

Let L be a regular logic.
T)

n = 0,1 ,2, ••• constitutes a chain of

quasi-regular logics, starting with L.
n
U L( 0 T) is a normal logic.
2)

3)

n

U L( 0
n

n

Then

T)

= L + { 0 T}.

318

CHAPTER SIX

Proof:
Each L( 0

Part 1).

n

T) is quasi-regular by

That the sequence starts with L is trivial.

definition.

The sequence constitutes a chain by Lemma 10.1.
Part 2) follows from Part 3).
Part 3).

Suppose X E L +

{ Cl T}.

Then

OT

I=

L

X.

Since L is regular, there is a set S of global axioms for
Then S,

it, over C.

F X.

DT

c

Then by the Turnstyle

Deduction Theorem 5.2, for some n,
S I=

( OT)

c

0

,( DT)

1

, ••• ,( 0 T)

n

______,X.

By Proposition 10.4, this implies
n+1
T ~x
s l=c o
or
n+1
1=

L

T --?X

0

hence X E

L( o

n+1

T)

~

U L( a

n

n

T).

The converse inclusion is proved by reversing these
steps.
In some cases this chain of intermediate logics can be
degenerate, notably when the initial regular logic involves
transitivity based on normal worlds.

Consider, for

example, what happens when we start off with C4.
Now,

ax:::> D ( 0 T :::> 0 X) is C4-valid, indeed i t was

used to axiomatize C4 over C in 118.

Taking X to be

n
D T,

we have that
OOnT::> O(t:JT =>OOnT)
is C4-valid.

But also o(X:::lY)=>(oX::>oY) is C-valid, so

the C4-validity of
n
n
DOT;:)( ClOT=> OOD T)
follows. That is,
2
n+1
0

T:::>(CJT-::>0

n+2

T)

NON-FORMAL LOGICS

is C4-valid.
n~2,

319

From this we have the C4-validity, for all

of

ciT:::> cf+ 1T.

It follows that, in the sequence of quasi-regular logics
C4( 0

n

T)

we have C4( 0

n

T) = C4( o

2

T)

for n~2.

Thus the

chain constructed in the theorem above degenerates into
C4, C4 ( Cl T), K4.
On the other hand, for many regular logics, the
resulting chain of quasi-regular logics is non-degenerate.
This is the case, for example, with C and CT.

We consider

the case of C in some detail and leave other cases to the
reader.
Lemma 11.2:
Proof:

It is not the case that

0

n

T-----+0

n+1

T.

Consider the augmented model where G =

{ r , r , ... , r , r

}, r B r
, and only r
is
1 2
n n+ 1
i
i+ 1
n+ 1
queer. Use any valuation you like, to produce a model
<G ,Q, B, II->.

Schematically

r1 -------+ r 2 --------1' • • •

-----+ r n -----+ r n + 1
~

queer

normal
It is easy to see that

r

n

u- D T
1

but

r.)f- o
1

n+1

T.

It follows from this lemma that C( Cln I) -J C( On+ 1 T)
and hence the chain of quasi-regular logics between C and K
contains infinitely many terms. Then we may argue, exactly
as in the proof of Theorem 4.8.2, that K is not

CHAPTER SIX

320

axiomatizable over C using a finite list of local axiom
schemas.
Similarly T is not axiomatizable over CT by a finite
list of local axiom schemas.

It was with this result that

this whole method of proof began for modal logics; see
Kripke [1965] and Lemmon [1965].
Let us consider in more detail the chain of
n
T) that takes us from C to K.

quasi-regular logics C( Cl

Semantically we may view the matter as follows.
the proof of Lemma 11 • 2 makes clear, for

0

n

T

As

to hold at a

given world r in a C-model,.all queer worlds must be at
least n worlds away from

r.

Thus, when we look at

C( On T) we are confining ourselves to truth at worlds in
C-models from which the nearest queer world is n or more
worlds distant.

Now, letting n grow is, in effect, pushing

queer worlds further and further away.

In the limit, we

have pushed them out of the picture entirely, and have the
logic K, whose models do not have queer worlds at all.
Syntactically the situation is also interesting.
Recall from Chapter Four 115 that adding aT as a global
axiom to C is equivalent to replacing Rule M of
Modalization by the stronger Rule of Necessitation:
X

ox.

n

We may view the sequence C( Cl T) n = 0,1 ,2, ••• as
successive approximations to the full Rule of Necessitation
n
in the following sense. Suppose X E C( Cl T). Then
n

T ~x and it follows easily (using the Arrow
C
n
Deduction Theorem and Rule RR) that I= 0 o T - a X or
n+1
n+1C
I=
0
T ~OX.
Thus OX EC( Cl
T ).
In short, if X

0

1=

c

NON-FORMAL LOGICS

321

is a theorem of one of the logics in the sequence, OX is a
theorem of the next.

Of course in the limit, K, this gives

us the usual Rule of Necessitation.
#12

THE INTERMEDIATE LOGICS AXIOMATIZED

In the last section we considered certain quasi-regular
n

logics L( 0 T), between a regular logic L and its
associated normal logic L+{ D T}. They were characterized
in a relatively complex way, generally involving both
global and local assumptions.

In an axiomatic counterpart

we would find ourselves with a restricted rule of
inference, either RR (regularity) or M (modalization) that
sometimes could be used and sometimes was forbidden to us.
That is, provided we attempted an axiomatization along the
lines of those earlier in this book: based on the
underlying logic U.
What we show in this section is that if one replaces
Rule RR or Rule M by a somewhat more complicated rule of
derivation, it is possible to axiomatize the most
n
interesting of tnese logics L( D T) in a uniform way: all
rules are always permitted.
One pleasant by-product of the work in this section
will be an appropriate model theory for two more of Lewis's
historically important modal logics, S2 and S3 (see Lewis
and Langford [1932]). That these logics could be handled
so neatly was one of the major successes of Kripke's model
theory; see Kripke [1965] and also Lemmon [1966, 1966A].
A minor point first. For once we will take o as
basic and consider <> as an abbreviation for -v o - • This
keeps down the clutter.

Some such device must be adopted,

322

CHAPTER SIX

as we are no longer building on U, in which appropriate
equivalences between modal operators can be derived.
Finally, rather than seeking the utmost generality, we
confine things to the most interesting cases.

So for the

rest of this section, L is one of C, CT, C4 or CS4.
Becker [1930] introduced a rule of inference that has
become known by his name:
Becker's Rule:

D(X:::::>Y)
D(OX:JDY).

It is a correct rule of inference for the simplest of the
present quasi-regular logics, L( D T ) •

For the others we

need a generalization.
n

Definition:

By Rule B we mean:
0

0

n

n

(X.:JY)

(OX :J DY).

We will use this in place of Rule M in an axiomatization of
L( 0

n

T).

Remark:

These generalized Becker rules constitute a

natural family of rules of inference.
0

1

Note that B is the

usual Becker Rule, while B is actually Rule RR itself.
For the regular logics L we are considering, suitable
axiomatizations were given in #8, of course building on U.
For convenience we remind the reader that these were as

NON-FORMAL LOGICS

323

follows.
c0 = [O(P::>Q):::>(DP::JOQ)]
T

0

= [OP:JP]
[DP:::>Cl(OT;:, OP)]

FOR THE LOGIC

THE MODAL AXIOMS ARE
0

c

c

CT
C4

C VT

CS4

C UT u 4*

0

0

0

C U4*

0

0

0
0

Now, if L is one of these logics and n is an integer, we
n

define a certain set of formulas L as follows.
Definition:
1)

Ln is the set consisting of
k
k
k
all formulas of the form o (X::> Y) ';::) ( o X :J Cl Y)

where k~n,
k
2) all formulas of the form o X where k<n and X is a
modal axiom of L or is a Classical axiom from Chapter Four
112.
0

Note that L is essentially just the set of L-axioms (modal
and Classical).
Now consider the axiom system in which:
n
1) The axioms are the members of L ;
2)

The rules of inference are modus ponens, MP, and
n
the nth Becker Rule, B •
Proofs and theorems of such an axiom system are
defined in the usual way.

324

CHAPTER SIX

n

We will refer to this axiom system as L , for
convenience.

No confusion should result from the double
n
use of L as naming both the axiom system and its set of

axioms.
Now the main result of the section can be stated.
Theorem 12.1:
each n~1,
X E L( 0

n

For each of our four choices for L, and for
T)

iff

n

X is a theorem of L •

The rest of the section, essentially, is given over to
a proof of this. Though one could proceed entirely model
theoretically, we have chosen not to do so.
axiomatic presentation of L given in #8.

We use the

Theorem of L

refers to this.
k

If X is a theorem of L then o X is a
theorem of L for all k<n.
Proposition 12.2:
n

Proof:

The proof is by induction on the length of the

proof of X in L.

Basically, we show the proposition holds
for the axioms, and its truth is preserved under the rules

of inference of L.
If X is an axiom of L, i.e. a modal axiom or a
Classical axiom, the proposition is correct by definition
n

of L axiom.
Suppose X and X -:::> Y are theorems of L, and it is known
the proposition holds for them. We show it also holds for
the result of using Rule MP, namely Y. That is, we show
k
n
k
k
P Y is an L theorem (k<n) given that 0 X and 0 (X -=>Y)

325

NON-FORMAL LOGICS

n
are L theorems.
k
k
0

(X::JY) ::J ( P

But this is immediate since
n
k
X~ P Y) is an axiom of L , and modus

ponens is a rule.
Finally we consider Rule RR in L.

Suppose X::JY is a

theorem of L, and the proposition is known to hold for it.
We show the proposition also holds for D X :::> CJY. More
n
k
specifically, we suppose o (X::>Y) is a theorem of L for
n
k
all k~n; we show o (OX:::> DY) is also an L theorem for
each k<n.

We give the argument in two parts, depending on

whether k<n or k=n.

k

Suppose first that k<n. Now 0 [ o (X ::>Y) ::J (oX:::> oY) J
n
is an L axiom (clause 2 of the definition). Also
k
k
k
0

[o(X::JY)::J(PX::> PY)]::J[Cl

O(X::>Y)::J Cl (CJX::JDY)]

n
is an L axiom (clause 1 of the definition).
n
k
k+1
(X:::>Y)::J t:l (oX::;oY) is an L theorem.
O

Hence by MP,
Since k<n
k+1

(X ::>Y) is an
then k+1<n so by the induction hypothesis,
k
n
L theorem. Then t:l (oX:::> t:l Y) follows by MP.
Finally, suppose k=n. Well, very simply, by the
Cl

n

n

o (X::.> Y) is an L theorem.
n
n
o (a X :::J a Y) follows by Rule B •

induction hypothesis,

Corollary 12.3:

I f XE L( o

n

n

T )

Then

n
then X is a theorem of L •
n

Suppose X E L ( t:l T ) • Then 1= a T ____,X, hence
L
n
n
I= 0 ~ ( o T :::>X). Then Cl T :::>X is a theorem of the
L
axiom system for L. By Proposition 12.2, taking k to be 0,
n
n
we have t:l T ::>X is a theorem of L • Likewise 'I is a

Proof:

theorem of L so by Proposition 12.2, taking k to be n,
n
n
n
0 T is a theorem of L • Then X is a theorem of L by
Rule MP.

326

CHAPTER SIX

We thus have half the main theorem. For the other
direction we first need a result establishing a kind of
backwards Rule RR for C and CT.
Proposition 12.4:

In both C and CT the following is a

correct inference:
DX::J oY
X :J y.

Proof:

We use tableaus for this, though a direct

model-theoretic proof is also easy.

We give the argument

for c; that for CT is slightly more complicated.
Suppose ox :J DY is C-valid.
C-tableau proof of it.
(1)

FDX::::>DY

(2)

TDX

(3)

FCJY

Then there is a

This tableau proof must begin

Now the set of formulas on the branch is normal so the
~-rule can be applied to (3).
What is more, it is the
only tableau rule that does apply. Hence the tableau must

continue

'1 )

Fb!X3P'i'-

~;;q

'fE:l:lf

..(3)

F 01"

(4)

TX

(5)

FY

and it must be possible to continue this to closure.

But

327

NON-FORMAL LOGICS

this means there is a closed C-tableau beginning with TX
and FY, hence of course a closed C-tableau beginning with
FX=>Y.

Thus X':::>Y is provable, hence C-valid.

L( 0

Proposition 12.5:

Proof:

n

n

T) is closed under Rule B •

We consider two cases, depending on the choice of

L.
Lis Cor CT.

Case 1)

n

n

Suppose

n

D (X:::>Y)EL(D

n

T);

we show o (oX:::>OY)E.L(o T). Well, since
n
n
n
n
t:l (X::>Y) E L( 0 T) then D T :;:, o (X :::>Y) is L-valid.
applying Proposition 12.4 n times we have that
or just X :::>Y is L-valid.
RR.

times,
0

n

Q

=>(X:::>Y),

oX:::> oY is L-valid by Rule

T ::::> (oX::::> DY) is L-valid and by using Rule RR n

Hence

n

Then

T

By

T

.

n

:::> o (oX=>DY) is also L-valid.

(OX::::>OY)EL(O

n

Thus

T).

L is C4 or CS4. Again suppose
n
n
n
0 (X::JY)EL(O T); we show o (t:lX::JoY)E:L(o T).
n

Case 2)

This time the argument is rather simpler.

A direct tableau

o(X:::>Y):::>o(OX::: >oY) is C4 (and CS4)

argument shows that

provable, hence by repeated use of Rule RR, so is
n
n
n
n
0 (X::>Y)::> 0 (OX:::>OY). Now, i f 0 (X:JY)EL(Cl T)
n
n
Then by the
then Cl T -::> o (X:::> Y) is L-provable.
preceeding,
0

n

OnT :::::> on(oX::>oY) is also L-provable hence

(OX:::>OY)EL(D

Corollary 12.6:

Proof:

n

T).

I f X is a theorem of L

then X E L( 0

n

T).

n

By induction on the length of the proof of X in L •

n

Suppose X is an axiom of L •
cases.

n

Then there are two

328

CHAPTER SIX

Case 1)

X is

0

k

k
k
(P::>Q) =>( o P => o Q) for some k<n.

It

is easy to check that X is simply L-provable, hence so is
n
0 T :JX.

Then XE L ( 0
k

n

T )•

X is o Z where k<n and Z is an axiom of L.
Now, Z is L-provable, as is T ::> Z. Repeated use of Rule RR
k
k
n
k
gives that 0 T :::> D Z is L-provable. That D T ~ D Z is
k
n
L-provable follows by Lemma 10.2. Hence o Z E.L( D T).
Case 2)

Now we check the Rules of Inference.
covered by Proposition 12.5.

Becker's Rule is

We consider Modus Ponens.

n

Suppose Z followed, in L , from Y and Y::> Z, and it is known
n
n
that both Y and Y ::> Z are in L(O T). We show Z € L( D T).
n

n

Well, by hypothesis, both 0 T ::> Y and o T ::> (Y ::> Z) are
n
n
L-provable. Then so is o T ::> Z, hence Z e: L( 0 T).
This concludes the proof of the Corollary, and of
Theorem 12. 1.
Remark:

For L=C4 or CS4, a simpler axiomatization of
L( 0 n T) can be given, as the proof of Proposition 12.5
n
n
suggests. For these logics, o (X::> Y) ::> D (oX::> oY) is
L-valid (n>1) (it is not for the other two choices of L) so
n

could be added to the axioms of L

(n>1) after which Rule

Bn can be dropped.
In Lewis and Langford [1932], five so-called Lewis
systems were introduced. Two of them, S4 and S5, were
considered here in earlier chapters.

Lemmon [1957] gave

elegant axiomatizations of several of these systems, and
proved the equivalence of his versions with those of Lewis.
His axiomatization for S2 and S3 (called P2 and P3 in his
paper) is essentially the same as our axiom systems for

329

NON-FORMAL LOGICS

(CT)

1

1

and (CS4) •

In fact, it was his axiom systems that

suggested the generalizations used in this section.
1
Now, X is a theorem of S2 iff X is a theorem of (CT)
iff X E CT( 0 T) iff

DT-----. X is

a theorem of CT iff X is

true at all normal worlds of all CT models.

Similarly X is

a theorem of S3 iff X is true at all normal worlds of all
CS4 models. Thus Lewis's systems S2 and S3 find a natural
model-theoretic interpretation using augmented models.
#13

THE LOGIC U

The underlying logic we called U was introduced in Chapter
Four #3 and, except for the previous section, all our
axiomatic formulations have been built on it. It is time
to take a look at it now for its own sake. We present a
Kripke-style model theory for it, but leave a completeness
proof to the reader. Such things should be very familiar
Essentially the same semantics, along with an
algebraic version, can be found in Steinacker [1979].

by now.

As usual, let G be a non-empty set of possible worlds,
and let Q be a subset of queer worlds.

Let 111 , 111 , 111 , •••
3
2
1
Finally,

be a sequence of accessibility relations on G.

let lr be a relation between members of G and formulas,
obeying the usual conditions on propositional connectives,
and such that for
1) · if
2)

r E:. G:

r is queer, r lr 0 X but r ,If- o X;
is normal,

if r

r 11- o X iff
such that r R A ,
i

for some i,

A

If- X for every

A

330

CHAPTER SIX

r 11- <;) X iff
such that r li A •

for every i, .c:.. II- X for some

b.

i

Thus to say 0 X is true at r is to say X is true at
all accessible worlds, under at least one version of
accessibility (provided r is normal). Likewise (again
provided r is normal), to say <>X is true at r is to say
X is true at some accessible world, no matter what version
of accessibility is used.
Let us call the resulting structure,
<G,Q,.I ,.1 , .•. ,It->

1

2

aU-model.

The reader may easily check that if TI v v is valid
0
0
in a given U-model, so is ~ v v, thus Rule M is correct
for these models.
On the other hand, consider the U-model in which: IIi =

{ r, A,Jl.}; Q = 0; there are two accessibility relations,
and .I , such that r R A and r li .Q; on the
2
1
2
propositional variables P and Q, L>. ~ P, L>. ~ Q, fl. It- P,
fl~ Q.
The reader may easily check that in the U-model
B

1

<G,Q,B ,B , If->, r 11- o (p:;, Q) and r If- o P but r AI'- o Q.
1 2
Hence this is a counter-model to o (P:;, Q) :::> ( 0 P :::> oQ).

This proves that U and C are distinct logics.
As we remarked earlier, we leave a completeness proof
to the reader.

But before we close, we sketch a tableau

system for U as well.

Very simply, use the tableau rules
for C from #3 but with the following restriction: whenever

the iT -rule is used

NON-FORMAL LOGICS

331

S, IT

S#, nr (provided S is normal)
0
only ~ member of S# may be added to the branch; the rest
must be thrown away.
The reader should check the difference between Rule RR
and formula Cl (X::> Y) ::> ( oX ::> oY) from the tableau point of
view as well.

CHAPTER SEVEN
QUANTIFIERS

#1

INTRODUCTION

In this chapter we add quantifiers to the machinery of
modal logic, and we investigate the result, in rather
summary fashion, both model-theoretical ly and
proof-theoretical ly.
It can be fairly argued that, given the expressional
richness already available in propositional modal logics,
adding quantifiers is just not enough to get a proper
first-order analog.

One really should also have existence
predicates, definite descriptions, names, and so on. This
is doubtless correct, but is much too big in scope to be
considered here.

We only look at the simplest step to

expressive first-order modal logics: adding quantifiers.
The model theory we use for most of the chapter is
relatively straightforward.

One associates with each

possible world r a domain of individuals,

P( r ) .
These
are, informally, the "things" that can be talked about by

r.
alternate world to r.
the inhabitants of

Now, if

r R 6, then ~ is an

Presumably anything that made sense

to talk about in r should also make sense to talk about in
A.

r li ~

Thus we impose a monotonicity condition
===9

P ( r ) <;; IP (A ) •

The proof procedures

corresponding to models meeting this condition are all very
simple modifications of appropriate propositional modal
proof procedures.

These are considered in some detail.
332

333

QUANTIFIERS

In Kripke [1963A] a broader class of models was
introduced, dropping the monotonicity condition. We will
briefly present tableau systems corresponding to models of
this sort.
Finally, the monotonicity condition can be
strengthened to require P ( r ) = 1P (D.).

Axiomatically this

corresponds to adding the so-called Barcan formula. There
are good reasons for believing there is no "decent" tableau
modification that corresponds.

We discuss this very

briefly too.
The present chapter should be considered a sketch
rather than a full development, and a sketch of just the
basics at that. First-order modal logic is a vast and
rapidly developing area.

In a sense it is the applied

mathematics appropriate to philosophy and, as such, is the
subject of much active debate.
#2

FIRST ORDER-LANGUAGES

We specify the language, or rather, the class of languages
that will be used in this chapter.
We begin with the alphabet.
We assume we have the propositional connectives,
modal operators and logical constants of propositional
1)

logic (Chapter One #1).
2)

We have two quantifiers,

Tl

(for all), and 3

(there exists).
We assume we have an infinite supply of individual
variables and a disjoint supply of constants. The reader
3)

may take infinite to mean countably infinite, if desired,
though countability plays no general role in this chapter.

334

CHAPTER SEVEN

4)

We assume that for each n there is an infinite

supply of n-ary predicate or relation symbols.
5)

We also have left and right parentheses, and a

comma, as punctuation symbols.
This completes the alphabet.
Important note:

We have not actually said what our

variables and constants and relation symbols are. We leave
this open for the time being; the definition of formula is
thus relative to some choice, to be made later.
For this chapter, variable will mean individual
variable; we do not have propositional variables in the
present chapter.
Next we say what formulas are.
we mean either

or

By an atomic formula

or a string P(t , ••• , t ) where P is
1
n
an n-ary relation symbol and t , ••• ,t are variables or
1
n
constants.
..1-

T

Formulas are then built up using the formation rules
of propositional logic (Chapter One #1) and the following:
if A is a formula and x is a variable then the
following are formulas: (Y x)A and ( 3 x)A.
This concludes the definition of formula.
Important note (continued):

The set of formulas we get is

really not determined until the set of symbols is
specified, that is, the constants, variables and relation

So perhaps we should use functional notation, say
L(C,V,R) for the language involving constants from C,
symbols.

variables from V and relation symbols from R.

In this

QUANTIFIERS

335

book, however, the set of variables and the set of relation
symbols will remain fixed, but~ will vary the choice of
constants.

So we use the simpler notation L(C),

understanding then that L(C) is defined as above, but with
constant symbols chosen entirely from the· set c.
In fact, we will be considering three rather different
choices of constant symbol sets.

The distinction between

them can best be brought out in a discussion of formal
arithmetic which, though it does not involve modal
operators, still has features appropriate to the point at
hand.
In the formal language of arithmetic one generally has
certain constant symbols which have an intuitive
designation, typically "0" and "1".

These appear in the

arithmetic axioms and thus possible interpretations of
these constants are restricted by the requirement that the
axioms be true under an interpretation.
Whatever formal proof procedure is chosen for
arithmetic, there will be some formal counterpart of the
informal argument: "we have (:3 x)A(x); so something has
property A, call it c".

"c" is a constant symbol that only

plays a role in proofs.

When used as we just did, it must

be quite unrestricted; we must know nothing special about
it ahead of the time we introduce it into a proof.

In

particular, it must not appear in the formal arithmetic
axioms.

We will be calling such constant symbols

parameters.

By the way, many books don't use constant

symbols in this context, but rather, use free occurrences
of variables.

On

the whole, we find using parameters to be

much simpler.
Finally, there are various models of formal

336

CHAPTER SEVEN

arithmetic, in particular, the intended one in which "0"
designates 0 and "1" designates 1. Now, one wants to talk
about sentences of arithmetic, and their behavior under an
interpretation in a given model.

There are many ways of
doing this, but we think the simplest, technically, is to
set up yet another language, the language of the model, in
which the constant symbols are actually the members of the
domain of the model itself.

Such a language makes

perfectly good sense in a set-theoretic framework.

Then an
interpretation of the formal language of arithmetic in a

given model becomes, simply, a mapping from one language to
another: from the formal language to the language of the
model.
Now we return to the modal setting, keeping the
discussion above in mind.
Convention:

For the rest of this book, ·C

is some
0
designated infinite collection of formal constant symbols,
and L(C ) is the formal modal language we will be primarily
0
interested in.

P is some designated collection of formal constant
0
symbols disjoint from C (but of the same cardinality). We
0

will refer to members of P

as parameters. Even though it
0
is sentences of L(C ) we are intersted in, it is sentences
0
of L( C u p ) that will be allowed in formal proofs.
0

0

Finally, if we have a modal first-order model (defined
in the next section) it has a certain domain D. We call
L(D)

the language of that model.
When we say formal language we mean L(C ) or
0

L(C uP ) : our languages of discourse and of proofs
0
0
respectively.

337

QUANTIFIERS

If we need to talk about a language, either formal or
of some model, we will simply refer to it as L.
A unique decomposition theorem can be proved for the
formulas of any language L.

We do not state it, though we

will make frequent tacit use of it.
Substitution:

Let A be a formula of L, let x be a variable

and c be a constant.

By [A]

X

is meant the result of

c

replacing all free occurrences of x in A by occurrences of
c.

Properly, this is defined recursively as follows.
1)

If A is atomic, [A]

X

is the result of replacing

c

all occurrences of x in A by occurrences of c.
particular , [T /
2)

[X A Y]

[X" Y]

[X::>Y]

[-X]

[OX]

[0 X]

3)

= T and

c

X

X

= [X] c

c

X

X

= [X] c

c
X

[Y]

\)

[Y]

X

X

c
X

c
X

X

X

= -[X] c

c
X

X

= a [XJ c

c
X

X

= <>[X] c

c

[(3x)A]

1\

c

= [X] c ::> [Y] c

c

[('Vx)A]

[ _l. ]

X

X

c
X

c

= ( 'i x) A
= ( 3 x)A

=

_l. • )

(In

338

CHAPTER SEVEN

but if y is a variable distinct from x,
[(Vy)A]
[ ( 3 y) A]

X

c
X

c

= (V y)[A]

= ( 3 y)[A]

X

c
X

c

This completes the definition.
Definition:

A variable x has a free occurrence in a

formula A if [A]

X

c

i A.

Definition:

A formula A is a closed formula, or a sentence
if no variables have free occurrences in A.

Notation: Generally, to indicate we are interested in the
free occurrences of a variable x in A we will informally
write A(x).

Then A(c) denotes [A]

X

c

We use subformula in a slightly broader sense than
usual.

Specifically, we define immediate subformula as

follows.
1)

Atomic formulas have no immediate subformulas.

2)

X is an immediate subformula of -X,

3)

X and Y are immediate sub formulas of (X 1\ Y),

ox and

<>X.

(X VY) and (X::JY).

4)

X

For any constant c of the language L, [A]
c
immediate sub formula of ( v x)A and ( 3 x)A.

is an

Then notions of proper subformula and subformula are
defined just as in Chapter One #1.

339

QUANTIFIERS

#3

FIRST-ORDER MODELS

As usual, a frame is a pair <G,R> consisting of a non-empty
set G, of possible worlds, and a relation R on G, of
accessibility.
Let D be some non-empty set (a domain). By a
first-order frame over D we mean a triple <G, R, P> where
<G,R> is a frame, and P is a mapping· from G to non-empty
subsets of D. This is required to meet the monotonicity
condition: for r,AeG, if rat::. then P(r )~P(A). For
each

r E G, P ( r ) is the domain of r

and is, intuitively,

the set of things that, in some sense, exist in world

r.

Let L(D) be the first-order language with constants
from D and let <G, R, P> be a first-order frame over D.
Suppose lr is a (binary) relation between possible worlds
and sentences of L(D).

We call <G,R,P, lr> a first-order

model or first-order Kripke model (over D) if
1)

<G, R, 11-> meets the conditions for being a

propositional model as given in Chapter One #2, and
2)

for each r E: G ,

r 11- (" x)A(x)

~

r 11- A( c) for every c e P( r )

r lr (3x)A(x)

~

rlt- A(c) for some cEP(r).

Thus, at a given possible world r , quantifiers are
thought of as ranging over just the domain of that world,
P ( r ) , and not over the totality D of constants in the

language.
Definition:

A sentence X of L(D) is called valid in the

model <G, R, P, It-> (over D) provided, for each
that all constants of X are in P( r ) , r 11- X.

rEG

such

CHAPTER SEVEN

340

We can also define first-order augmented models
<G, Q, R, P, 11-> in the expected way.

The only change

necessary is to require that <G, Q, R, 11-> be an augmented
model as defined in Chapter Six #2.

We omit details.

It is not hard to see that a first-order model
<G, R, P, II-> is completely determined by the
first-order frame <G,R,P> (over D) and by 11- on atomic
sentences (of L(D)).

For propositional models we used the

machinery of interpretations to express this fact
conveniently, but in the present chapter we wish to reserve
the term interpretation for a somewhat different purpose.
At any rate, we make use of the fact that, to characterize
1~

completely, it is enough to describe its behavior on the

atomic sentences of L(D).

Similar remarks may be made

about first-order augmented models too, of course.
As usual, we will not be interested in all first-order
models, but only in certain ones.

Thus, we call a

first-order model <G, R, P, II-> an Sli model if the frame
<G,R> is an Sli frame as defined in Chapter One #2.
Likewise we call a first-order augmented model <G, Q, R, P, II->
a CSli model if the augmented frame <G,Q,R> is a CSli frame,
as defined in Chapter Six #2.

And similarly for the

various other conditions on frames and augmented frames •
Example:

•

We give a simple first-order Sli model in which

('v'x)DA(x)::> D('v' x)A(x) is not valid.
model is just {a,b} where a i b.

The domain D of the

The frame of the model is

<G,R,P> where: G = {r ,A}; rlii!D., rar, L!.RL!.; P(r) ={a};
P( A) = {a ,b}.

Note that the monotonicity condition is

341

QUANTIFIERS

obeyed.

Next, on atomic formulas of L(D), set r 11- A(a),

A If- A( a) , and 11- holds in no other atomic cases.

11- can be

extended uniquely to all sentences of L(D) so that
<G,R,P, If-> is a model; clearly it is an S4 model.

Now r If- A( a) and A If- A( a) , hence r If- 0 A( a).
the only member of P ( r ) , hence

r 11- ("' x) o A( x).

a is

On the

other hand, Ali'- A(b) but be.P(A), so A.JI'- ('Vx)A(x).
Then r.ll'- 0 (Vx)A(x).

Thus rj'- (V x)OA(x)::>O(Vx)A(x).

The formula being considered is the so-called Barcan
formula which we will say more about in #15.

The model of

the example was first published in Kripke [1963].
Concluding Remarks:

There is an annoying problem that

arises once we are allowed constants in the language L(D)
that may or may not be in the domain of some possible world
P( r ) .

Thus, suppose c is a constant of the language and

c ti P( r); should this fact impose any restrictions on the
truth of A( c) at r ?

When we set out to define what a

first-order model should be, we had three reasonably
intuitive choices:
1)

always take A(c) to be false at

r.ll' A(c) if c fl. P(r >:
2)

r, that is,

leave the truth of A( c) undetermined at r i f

c!fP(r);
3)

make no special restrictions whatsoever.

Now choice 1, of course, is only acceptable if we
impose it on atomic sentences (otherwise the condition for
-would be impossible, for example).

And Kripke has

observed, for a somewhat different notion of model, that
imposing the choice 1 requirement on atomic sentences leads
to a modal logic in which the rule of substitution does not

342

hold.

CHAPTER SEVEN

See Kripke [1963A] pg 86 footnote 1.
If we make choice 2, then the defining conditions of

our models would need modification.
condition for

A

For example, the

would have to be replaced by:

constants of X and Y are in P ( r ) , then

r If- X and r If- Y.

if all

r 11- X1\ Y ~

With all the model conditions thus

modified, an acceptable model theory based on choice 2
This is the choice made in Hughes & Cresswell
[1968] for instance.

results.

We actually adopted choice 3, largely because it is
simplest.

Then all the material from earlier chapters

carries over with no change.
Actually, choices 2 and 3 are essentially equivalent.
More precisely, let <G, B, P, 11-> be a first-order model,
based on choice 3, that is, as defined above.

Let

<G, R, P, 11-' > be a model defined according to choice 2,
with all the conditions on II-' suitably modified, as
sketched above.

And suppose that for atomic sentences,

n-

and 11-' agree whenever possible, that is,

r If- A ~
r II-' A for atomic sentences A all of whose constants are
in P ( r ) . Then it follows by an easy induction on degree
that this extends to all sentences. That is, for any
sentence X such that all its constants are in P ( r ) ,
~

r 11- X

r11-' x.
Thus, although choice 2 has a greater intuitive appeal

than the simpler choice 3, the two are equivalent: they
lead to the same class of sentences that are valid in
essentially equivalent models.

QUANTIFIERS

#4

343

INTERPRETATIONS

We have said what it means to be valid in a particular
model.

In this section we say what valid is to mean for

sentences of our formal language L(C).
Suppose C and D are two sets (of constants) and
v: C ~ D.

We extend v to a mapping on formulas,

v:L(C) ~L(D) as follows.

If X is a formula of L(C)

then v(X) is to be the result of replacing every constant
that occurs in X by its image under v.
Now recall, we set aside a particular language
L( C uP ) to be the language used in proofs. We do
0
0
not (generally) associate it with any particular model.
Definition:

By an interpretation of L( C up ) in a
0

0

first-order model <G,B,P, U-> over D we mean a mapping
v:C uP

~D.
We say a sentence X of L(C uP) is
0
0
0
0
valid under an interpretation v in a model <G,B,P, ~> if

the sentence v(X) is valid in that model.
Definition:

We say a sentence X of L(C uP ) is L-valid if
0

0

X is true under every interpretation in every L-model.
Remark:

The definitions above were stated for first-order

models as a matter of convenience.

Similar definitions

cover validity in first-order augmented models.

We do not

bother with the statement of them.
It is the notion of L-validity, and characterizing it
proof-theoretically, that largely occupies the rest of this
chapter.

344

#5

CHAPTER SEVEN

UNIFORM NOTATION

o< , (3 , v , 1T
notation, to
group together similar propositional and modal cases. As
in Smullyan [1963, 1968] we extend this to quantifiers by

We have been using a systematic

defining the 't and the 5 sentences and their instances.
All this is relative to a particular language, though.

In

the following charts we assume the language is L(C), all
sentences are in L(C) and all constants are in c.
Signed version:
'(

na)

~

o(a)

T('v'x)A(x)

TA(a)

T(3 x)A(x)

TA(a)

F(3x)A(x)

FA( a)

F( \1 x)A(x)

FA( a)

¥

't (a)

S

cS (a)

( v x)A(x)

A( a)

( 3 x)A(x)

A( a)

-A( a)

~('v'x)A(x)

-A(a)

Unsigned version:

~

(3 x)A(x)

The significance of this grouping is simply explained.
Suppose we have a first-order (augmented) model, whose
language is L(C). Suppose r is a world in that model.
Then the quantifier conditions of #3 give us:
r 11- y
r It- ~

r It- y (c) for every ce.P(r)
<:======> r If- b (c) for some c E PC r).

~

Thus all Y -sentences behave universally, all
b -sentences behave existentially in models.

QUANTIFIERS

345

The notion of conjugation extends to signed
first-order sentences, of course (see Chapter One #3).

The

reader should check the truth of the following.
1)

The conjugate of any 'If is some 2i •

The conjugate

of any $ is some ¥ •
2)

~(c)

= t(c)

S (c) =
#6

~(c).

TABLEAU RULES

Recall, a certain language L(C ) was set aside (in #2) to
0
be our formal modal language. It is sentences of this that
our proof procedures will try to prove, and sets of
sentences from L(C ) that things will be derived from.
0

But

a larger formal modal language L( C U P ) was reserved for
0
0
the proofs or derivations themselves. Keep the existence
of these two languages in mind in what follows.
The ideas behind the tableau quantifier rules are
simple.

Suppose

6' is known to be valid.

The l5 -formulas

behave universally, so it should be the case that, no
matter what constant c e: C up we pick, r (c) should be
0
0
valid. On the other hand, suppose o is known to be valid.
S -formulas behave existentially; there should be
"something" making

true.

At this point, in common

mathematical parlance, one says "well, call it c."

Of

course, c must not have been previously used for something.
In effect, one passes from o to o (c) where c is
"uncommitted."
We achieve this by requiring: 1) c should be a
parameter (thus it can not appear in the sentence we are
trying to prove, or in any assumption set, since these must

CHAPTER SEVEN

346

come from L(C )), and 2) c must not have previously
0
occurred on the branch we are considering. In short, c
must be a new parameter if it is to be used with a
S -sentence.
Now, more formally.
sentences of L(C ).

Tableau proofs will be of

Tableau derivations will be from sets

0
of sentences of L(C ).
0
L(C uP ) may be used.
0
0

But in tableaus, sentences of

The tableau rules are as follows.

We assume that, for a given modal logic L we have all
the propositional and modal tableau rules for L as given in
earlier chapters.

For those logics that had a cut rule, we

now use the synthetic version, taking as cut class, the
class of all formulas.

Thus, when cut is allowed at all,
we can use any formula in a cut rule application. And we
now have the following quantifier rules (signed or
unsigned):

o(c)

for any constant c E C up
0

0

s
6 (c)

for any new parameter c E. P ,
-

0

where new means: new to the branch.
If X is a sentence of L(C ) we say X has a first-order
0
-L-tableau proof if there is a closed tableau for FX in the
system just described.
If S and U are sets of (signed or un'signed) sentences
of L(C ), we say there is a first-order L-tableau
0

347

QUANTIFIERS

derivation of X from S as global and U as local assumptions
if there is a closed tableau for FX (or for --X) using the
L-rules, the quantifier rules above, and the usual
assumption rules from Chapter Three #2.
Remark:

This business of enlarging the language for the

purpose of proofs, or rather, the lack of ability to do so,
has an interesting historical manifestation in the works of
Diophantus.
lack.

Curious techniques were invented to remedy the

See Heath [1910], the paragraph spread over pages 51

and 52.
Examples:

We close with two examples of first-order

tableau proofs.

The first is of the so-called converse

Barcan formula in first-order C.

The second is of the

Barcan formula itself in first-order KB.

These are

significant formulas; we return to them later in this
chapter.
Example 1:

We give a C-tableau proof of

o (V x)A(x) :::> (V x) oA(x).

It begins

(1)

FO('<fx)A(x)::>(Vx)DA(x)

(2)

TCJ('Vx)A(x)

(3)

F(V x)DA(x)

Here (2) and (3) are from (1) by the ~-rule.

S -sentence.
the

~-rule

branch.

Now (3) is a

At this point every parameter is new.

We use

on (3), introducing the parameter c to the

348

CHAPTER SEVEN

( 1)

FO(\:f x)A(x)::> (V x) 0 A(x)

(2)

TD('V'x)A(x)

(3)

F(\:fx)OA(x)

(4)

F 0 A( c)

Now the ~-rule of C can be used on (4).
(1)

fO(¥ x)A(x):J(V x)ElA(x)

(2)

TD(\f x)A(x)

(3)

F(¥ x) a A(x)

(4)

FDA(c)

(5)

T( '9' x)A(x)

(6)

FA(c)

We get

Here (5) is from (2) by the Branch Modification Rule for C,
then ( 6) is from ( 4) •

Now a
produces a closed tableau.
Example 2:

~ -rule

application to ( 5)

We give a KB-tableau proof of

('<I x) DA(x) :::> 0 ( V x)A(x).

Note that though the KB rules of

Chapter Five #2 include cut, it is not used in this proof.
We begin
(1)

F(\lx)OA(x):::JD(Vx)A(x)

(2)

T('o' x)O A(x)

(3)

FO(V x)A(x)

Of course (2) and (3) are from (1) by the ~-rule. Now we
can apply the TI-rule to (3). The Branch Modification Rule
for KB allows us to add several formulas to the branch, but
most are of no help, so for simplicity we only display one.

349

QUANTIFIERS

Then the next stage is
(1)

F(¥ n)8A(x):H:t(Vx)A(x)

(2)

T(,. x) QA(x)

(3)

fg ('f' x)A(x)

(4)

T.¢(Yx)cA(x)

(5)

F( 'd x)A(x)

Here (5) is from (3) by the ~-rule, but first (4) was
added, by the Branch Modification Rule for KB, from (2).
It is

rr for line 2's

TT.

0

Next,

(5)

this stage c, say, is a new parameter.

is a c5 -sentence.

At

So we proceed

(dropping crossed-out lines for convenience)
(4)

T .¢('<I x) ClA(x)

(5)

F('</ x)A(x)

(6)

FA(c)

Next we use the TI-rule on (4).

Once again we only add one

of the many sentences the Branch Modification Rule for KB
allows us. Specifically, we think of ( 6) as TT and add
0
the corresponding 1T. We get
(4)

T~(¥x)BA(x)

(5)

F(V x)A(x)

(6)
(7)

-FAfe1F 0 A( c)

(8)

T(V x) OA(x)

Here (7) is from (6) and (8) is from (4).

Now a 't -rule

application to (8) produces a closed tableau.

350

CHAPTER SEVEN

Remarks:

The '( and S rules were investigated extensively

for Classical logic in Smullyan [1968].

It is the source
of many of the ideas we have applied to Modal logics.
#7

TABLEAU CORRECTNESS

We show that, in the first-order tableau system for L, only
L-valid sentences are provable.

The method is a direct

continuation of the one in Chapter Three #3.

Here L is any
logic whose propositional version was considered in earlier
chapters.
worlds.

The models we display below have sets Q of queer
But keep in mind we may have Q = 0 so the normal

models of Chapters One through Five are included.
If v is an interpretation of L( C u P ) in some model,
0

0

we also apply v to sets of (signed) sentences in the
obvious way: v(S) = {v(X) I XES}.
Definition:

A set S of (signed or unsigned) sentences of

L( C u P ) is locally L-satisfiable i f there is some
0

0

first-order L-model <G, Q, B, P, 11-> and some interpretation v
of L( C u P ) in it such that, for some r E.G, all constants
0
0
--of v(S) are in PC r), and r 11- v(S).
Similarly we have the following, though we will not
need it until the next section.
Definition: A set S of sentences of L(C up ) is globally
0
0
L-satisfiable if there is some first-order L-model
<G, Q, R, P, 11-> and some interpretation v of L( C u p )
in it such that, for every

0

0

r E G, all constants of v ( S) are

351

QUANTIFIERS

r 11- v(S).

in P( r ) and
Remark:

Thus, in effect, Sis locally or globally

L-satisfiable if there is some interpretation v such that
v(S) is locally or globally L-satisfiable in the sense of
earlier chapters, except that quantifiers must be taken
into account, of cour~e.
Definition:

A branch of a tableau is L-satisfiable if the

set of sentences on it is locally L-satisfiable.

A tableau

is L-satisfiable if some branch is L-satisfiable.
Obvious Lemma 7. 1:

Let v be an interpretation of L( C uP )
0

in <G,Q,R,P, ~> and let S be a set of sentences of

0

L(C uP ) . Suppose r [f- v(S), where rEG, and
0
0
suppose v' is an interpretation that agrees with v on all
the parameters that actually occur in S.
Proof:

Then r If- v' ( S).

Obvious.

Key Lemma 7.2:

Suppose Tis a tableau that is

L-satisfiable and T' is the tableau that results from a
single L-tableau rule being applied toT. Then T' is also
L-satisfiable.
Proof:

If the rule application that turned T into T' is

not a quantifier one, the argument is essentially the same
as in earlier chapters. We concentrate on the quantifier
rules.
trivial.

And, for that matter, handling the

~-rule

is

We look at the 0 -rule.

Suppose the 6 -rule is applied to branch

e of tableau

352

CHAPTER SEVEN

T, turning it into branch 6 1 of tableau T 1 •

Now, if a

e is L-satisfiable, that branch is

branch of T other than

still in T 1 , and still L-satisfiable.
So now suppose

branch in T.

e itself is the only L-satisfiable

Say that, under the interpretation v in the

L-model <G,Q,B,P, n->,

r 11- v( 9 ) for some r E. G.

(We use

e ambiguously here for the tableau branch and for the set
of sentences on it.) And suppose S occurs in e , and e
1

e followed by S (c), where c is new, hence did

consists of

e.

not occur in any member of

sEe, r If- v( 6 ).

Since

Now v( s) is, itself, a

S -sentence, but of the model language.
of model,

Then by definition

r 11- v( S ) (a) for some a E P ( r ) .

interpretation v

1

Define a new

as follows.
ifxi.c

v 1 (x)

=
if X :

C.

v and V 1 agree on all constants except c, and c does not
occur in any sentence of
7.1.
V 1 (~

e.

Hence r 11- v 1 Ce ) by Lemma

Of course, too, v(o)

= v (!)), hencev (/i(c)) =

)(v (c)) = v(o )(a).

Since r 11- vC& )(a), then

1

r U- v 1 ( & (c)).

1

1

Hence all sentences of

at r Under the interpretation VI •

ThUS

e , and o (c) hold
e I iS

L-satisfiable.
From here on we proceed just as in Chapter Two #3.
course a closed tableau can not be L-satisfiable.
Correctness Theorem 7.3:
X is L-valid.

Of

Then

If X has an L-tableau proof, then

353

QU~FIERS

Proof:
L-valid.

Suppose X has an L-tableau proof, but X is not
Since X is not L-valid, {FX} is locally

L-satisfiable.

It follows by Lemma 7.2 that any L-tableau

for {FX} will be L-satisfiable.

But X is provable, so

there is a closed L-tableau for {FX}.

This impossibility

establishes the Correctness Theorem.
Remark:

In a similar way one can show

If there is a closed first-order L-tableau for FX
using members of S as global and members of W as local
assumptions, then SF
#8

L

W--?X.

We omit the argument.

ANALYTIC CONSISTENCY PROPERTIES

We define a version of Modal Consistency Property that
takes quantifiers into account.

But we only do so for what

might be called the first-order analytic logics; those
having a cut-free tableau system capable of handling
logical consequence.
of Chapter Five.)

(See the discussion at the beginning

Then we prove an appropriate Model

Existence Theorem, and apply it in the next few sections.
In Classical logic this approach can be traced to many
authors, but was first made explicit in Smullyan [1963].
Applying it to Modal logics began in Fitting [1973].
For the rest of this section L is one of our
first-order analytic modal logics.

Specifically, L is the

first-order version of one of: K, T, K4, S4, D, D4, C, CT,
C4, CS4, CD, CD4, CN, CNT, CN4, CNS4, CND or CND4.

354

CHAPTER SEVEN

Definition:

Let C be a collection of sets of signed (or

unsigned) sentences of L( C up ) •
consistency property if:
1)

0

0

C is a first-order L

C is a propositional L-consistency property, as

defined earlier;
2)

for each SEC,

( ~ condition)

lS E S ====9 S u { )( (c)} E. C for every constant

or parameter c,
( li condition)

li E S ===9 S u { b (c)} E'. C for some constant

or parameter c
The definition of W-compatible from Chapter Two #5 is
carried over to the first-order case.
Remark:

The S condition allows some constant or

parameter, and does not impose a restriction to some new
parameter.

The newness part would be hard to manage, since

it is possible that S already contains all parameters.

The

restriction to only parameters is not essential at this
point.
First-Order Model Existence Theorem 8.1:

Let C be a

first-order L-consistency property that is W-compatible,
where W is a set of sentences of L(C ).
0

If Sis

C-consistent, where S is also a set of sentences of
L(C ), then there is an interpretation v in some L-model
0
under which S is locally and W is globally satisfied.
(Indeed, we can take the domain of the model to be just
Cup, and v to be the identity map.)

0

0

QUANTIFIERS

355

One is tempted to mimic the proof that worked in the
propositional case (see Chapter Two #5). But this will not
For these a device

take care of the quantifiers.

introduced into formal logic by Henkin is used.
Nonetheless, we follow the proofs of earlier chapters as
closely as we can.
Let C be a first-order L-consistency property
that is W-compatible. Let C' contain all subsets of
Lemma 8.2:

members of C.

Then C' is also a W-compatible L-consistency

property, extending C and closed under subsets.
Proof:

See Lemma 2.5.4.

Remarks:

The quantifiers give no trouble.

There is an issue in the first-order case that

has no analog in the propositional counterpart, and this is
the point at which it must be considered. Sentences of
L(C v P ) can involve parameters. But these were not
0
0
meant to have 11 inherent meaning. 11 So, if c and d are
parameters that do not occur in A(x), there is no real
difference between A(c) and A(d) for us. The same can not
be said for constants from C , since these can occur in W,
0

The range of their possible interpretations
is essentially restricted by the desire to have members of

for instance.
W be true.

If we have an interpretation v in a given model, we
can easily come up with an interpretation v' in the same
model, so that A(d) behaves under v' the way A(c) behaves
under v. In short, it is not just particular sentences of
L( C u ·p ) that we should consider, but also parameter
0
0
variants of them.

356

CHAPTER SEVEN

So our next step will be to throw into our consistency
property any set that has a parameter variant that is
already present.

But doing so gives us something that is

no longer a first-order L-consistency property.
the S -condition.

We loose

What takes its place is the

New Parameter Condition:

A collection C meets the new

parameter condition if: for each SEC: and for each S E S,
S u { o (c)} E C for every parameter c that does not occur in
(any member of) S.
In some respects, this is weaker than the original
0 -condition.

After all, we might have o E S but S might

already contain every parameter, hence for no c could we be
certain that S u { o (c)} E C. On the other hand, in certain
obvious respects this is a stronger condition.

If S omits
an infinite set of parameters, and o e S, the new parameter
condition says there are infinitely many o(c) that can be
added to S.
In Smullyan [1968], the definition of consistency
property for Classical logic was stated with the New
Parameter Condition in place of the 6 -condition we used.
On the other hand, in Keisler [1971], the present

o -condition was used.

It is interesting to note that

Lemma 8.2 does not go through if the New Parameter
Condition is insisted on instead of the 6 -condition.
Now the details.
Definition:

cr- is a parameter substitution i f u- : P ------+ p •
0
0
For a sentence X, cr- (X) is the result of replacing each
parameter in X by its image under cr-.

Likewise cr is

QUANTIFIERS

357

extended to sets of sentences.
Lemma 8.3:

Suppose C 1 is a W-compatible L-consistency

property that is closed under subsets, where W is a set of
sentences of L(C ) •
0

Define C'' by: S e: C'' if cr (S) e: C' for

some parameter substitution a- •
1)

Then

C 11 meets the conditions for being an

o -condition is

L-consistency property, except that the
replaced by the New Parameter Condition.
2)

C 11 extends C1 , is W-compatible, and is closed

under subsets.
Proof:

That C'' meets the propositional L-consistency

property conditions is simple.
the fact that o- ( ex ) = ( cr ( o< ) )
for instance.

1

Likewise the

straightforward.

For the ~-condition, use
1

and cr- ( <><

~-condition

is

2

)

= (a- ( o< ) )

2

,

We consider the New Parameter Condition.

Suppose S e: C' 1 ,

S e: S, and c does not occur in S.

Since se:c"·, for some a-, <r(S)e:.c'.

Nowc:r(s)e:.o-(S)

and <r ( .S ) is again a S -sentence, so for some d,
o-(S) u { cr ( b )(d)} € C'.
that a-' (c)

cr' (S).

= d.

Define a- 1 to be like cr, except

Since c does not occur in S, cr(S) =

In particular, cr ( 5) = <:r' ( 5).

But then

o-'(SU S(c)) = a-'(S)U{a-'Ui (c))}=

cr(S)u{cr(o)(d)} EC' so by definition Su{ S(c)}E.C''·
This completes part 1.
C'' extends C' since the identity map is a parameter
substitution.
Suppose S €. C 1 ' and Xe:. W; we show S u {X} €. C''.
S e: C'', for some a-, a- (S) e: C 1 •

cr (S) u {X} E. C 1 •

Since

C' is W-compatible, so

W is a set of sentences of L( C ) , while
0

358

CHAPTER SEVEN

affects only parameters, hence

IJ

is the identity map on W.

Thus <l(SV{X}) = cr(S)V{<r(X)} = <J(S)U{X}EC', hence
SU{X}E:C''·
That C'' is closed under subsets follows from the
facts that C' is closed under subsets and each o- is
monotone.
This completes the proof of the Lemma.
Remarks:

To keep life simple, if some collection satisfies

all the conditions for being an L-consistency property,
except that the 8 -condition has been replaced by the New
Parameter Condition, we will call the collection an
alternate L-consistency property.
Lemma 8.4:

Suppose C'' is an alternate L-consistency

property that is W-compatible and closed under subsets
(where W is a set of sentences of L(C )).
0

Let C''' consist

of those sets S all of whose finite subsets are inC''.
Then C''' is again a W-compatible alternate L-consistency
property, that extends C'', and is of finite character.
Proof:

Most of the work is the same as in the proof of

Lemma 2.5.5.

The quantifiers are straightforward.

We note

that with the original notion of L-consistency property
instead of the alternate one, the lemma does not go
through.
It will be convenient to combine the results of the
lemmas thus far.

359

QUANTIFIERS

Proposition 8.5:

Let C be a W-compatible first-order

L-consistency property (where W is a set of sentences of
L(C )). Then C may be extended to a collection C* that
0
is a W-compatible alternate L-consistency property of
finite character.
Actually, this can be strengthened in certain ways.
Not only is C* of finite character, but so are sections of
it.
Definition:

Let P be a set of constants and parameters.

By the P section of C*, written C*tP, we mean {Se.C* J all
members of S are sentences of L(P)}.
Proposition 8.6:

If C* is a W-compatible alternate

L-consistency property of finite character, so is any P
section, provided C ~ p.
0

Proof: Left to reader.
Now we come to the heart of the matter.

In the

propositional case, Proposition 2.5.7 was central. It said
that in a (propositional) L-consistency property of finite
character, any member could be extended to a maximal
member.

In the first-order case, this is not enough.

must also take care of quantifiers.

We

For this, we use

Henkin's technique, as embodied in the proof of Proposition
8.7 below.

However, as the reader can easily check, the

proof of Proposition 2.5.7 made no use of anything except
being of finite character.

The proof, and thus the

Proposition apply equally well to the first-order case.

CHAPTER SEVEN

360

Likewise, at the end of Chapter Two #5 we made some Remarks
on the use of Tukey's Lemma.

In those we observed that
collections of finite character are closed under chain

unions.

We will need this now.

The reader should make

sure we spoke truth in this matter.

At any rate, we record

these officially as follows.
In an alternate L-consistency property of finite
character:
1)

each member may be extended to a maximal member;

2)

the union of any chain of members is again a

member.
Now, a definition, and then the main result.
Definition:

Suppose C* is a W-compatible alternate

L-consistency property of finite character, and C
S be a set of sentences of L(P).

0

Let

~ p.

We sayS is downward

saturated in C*f P i f
1)

S is maximal in the alternate L-consistency

property c*rP, and
2)

o E. S ==> S (c) E: S for some c E.P.

Proposition 8.7:

Suppose C* is a W-compatible alternate

L-consistency property of finite character, and suppose
where P and Q are disjoint, but
0
0
0
of the same cardinality. If S E C* f P then S may be extended
C ~pc;.p uQ o;;;C uP

to a set that is downward saturated in c*r(PvQ).
Proof:

Since C is infinite, so is P, hence so is Q.
0
elementary set theory then, Q can be decomposed into

By

QUANTIFIERS

361

countably many sets, all of the same cardinality.

Thus Q =

Q u Q u Q u ••• where each Q is of the same cardinality
1
2
3
i

as Q, hence as P, and the Q_ are pairwise disjoint.
l.
It is also a fact of elementary set theory that the

set of words (finite strings) over an infinite alphabet is
of the same cardinality as the alphabet itself.

It follows

that the sets of b -sentences of L(P), of L(P UQ), of
L(PUQ UQ u ••• VQ) are all of the same cardinality,
1
2
n
namely that of P.
Now, suppose SEC*rP.

Then of course se.c*f(PUQ ).
1

Well-order the members of Q : c ,c ,c , ••• ,c~ , •••
1
0 1 2
Likewise well-order the 5 -sentences of S:

o1 , b2 , ••• , ~... , • • •

By the remarks in the
previous paragraph, this can be done so that the order-type
b ,
0

of the Q well-ordering is at least as big as the
1
order-type of the o -sentences-of-S well-ordering.

In

other words, we have at least as many parameters of Q 1
available as we have 5 -sentences of S.
Consider SU{ o.(c.) I i:1,2, ••• ,« •••• }. We claim it
l.
l.
is a member of C* f (P u Q ) • We know S is a member, so if
1
our claim is false there must be an ordinal ~ such that
su{ b.Cc.)l i<'1}€c*rcPuQ 1) but
l.

l.

Su{ s.Cc.)
I i<_.\n} t C*f(PuQ 1 ). Now oM.• E: S, and
l.
l.
by careful planning, c~ does not occur in any member of
S U{ S. (c.) I i< 'l}.
l.
l.
a contradiction.

Then by Proposition 8.6, we would have

Thus S u { ~. (c. ) I i= 1 , 2, ••• , c< , ••• } belongs to
l.

l.

C* r ( P U Q ) • Let us call it a o -completion of S.
1
The trouble is, it might not be maximal. So extend it to a
maximal member of C* t (P u Q ) , call it S •
1
1
Proposition 8.6 again.)

(Here we used

362

CHAPTER SEVEN

Thus sssu{ S.<c.) I i=1,2, ••• ,o<, ••• }~S. The
1
1
1
trouble now is, when we extended our o -completion to get
S

1

we may have thrown in new 5 -sentences, which have no

"witness" parameter instances.

So we repeat the whole

process again, starting this time with S •
1

s E. «::* r(p L) Q ) so s E. «::* r(p u Q u Q ) .

We sketch.

s can be

1
1
1
1
2
1
enlarged to a S -completion, again a member of

C* f (P U Q u Q ) , then this 6 -completion in
1
2
turn can be extended to a maximal member of C* f ( P u Q u Q ) ;
1
2
call i t S •
2
Thus S.;, S <;;; S • Now repeat with S , getting S , and
1
2
2
3
again, getting S , and so on. Then, by construction,

4

1)

for each n, S

is maximal in C*f<P UQ u ••• uQ ) ,

2)

i f S E. S

then

o(c) E S

3)

sc;;s ~s

~

n

n

1

for some c E. Q
,
n+1
n+ 1

•••

n

1
2
Now let S* = V S •

Since C*, being of finite
n n
character, is closed under chain unions, S* E C*. And since
all members of S* are sentences of L(PUQ), S*€C*f(PUQ).
We claim S* is maximal in C* f ( P u Q) • For, suppose X
is a sentence of L(PUQ) and SV{X} E c*r(PUQ); we show
X E. S. Well, X can contain only a finite number of
parameters, so since Xc: L(P u Q) then XE. L(P u Q u ••• u Q )
1
n
for some n. Since SU{X} E.C*t(PUQ) which is of finite
character, hence closed under subsets, S u {X} E C*f ( p u Q).
n
It follows that S U{X} E.C* f (PUQ u ••• uQ ). ButS is
n
1
n
n
maximal in C*f(PVQ u .•. uQ ), hence we must have XE.S.
Then X € US

n n

= S*.

1

n

So S* is maximal in C*t(PUQ).

More simply, one may show that if
8 (c) E. S* for some c E. Q.

o E: S* then

We leave this to the reader.
Thus S* is downward saturated in C*f(PUQ). This

concludes the proof.

n

363

QUANTIFIERS

Now, finally, we have all the preliminary work done
and can proceed with the proof of the First Order Model
Existence Theorem (8.1) itself.
Proof:

Let C be a first-order L-consistency property that

is W-compatible, where W is a set of sentences of L(C ).
0

And suppose S is C-consistent, that is, S €. C, where S is
also a set of sentences of L(C ).
0
To begin, we use Proposition 8.5, and extend C to C*
which is an alternate L-consistency property that is still
W-compatible.

Since C .;;; C*, then S is also C*-consistent.

We use C* to create our model.
The set P of parameters is infinite so it can be
0
partitioned into countably many disjoint sets all of the
1
2
3
i
same cardinality thus: P = p uP up u ••• where the p
0

0

0

0

0

are mutually disjoint.
Now define a collection G as follows.

Put r in G if
n
r is downward saturated in C* f ( C U P u ... uP ) for some
0
0 1
0 n
n. At the same time, set P(r) = C vp v ••• uP. Define
0
0
0
a relation I on G by r i b i f rti<;;L!. and P(r )c;;;;P(A).
1

At this point, if L is a normal logic, one may show
<G,I> is an L-frame essentially as in Chapter Two #5.

If

L is regular but not normal, then call a set r normal if
v €. r for some v (Chapter Six /13), and let Q consist of
the non-normal members of G.

Then, essentially as in

Chapter Six #4 one may show <G,Q,B> is an augmented
L-frame. We leave this to the reader.
Finally, for atomic sentences A, and for r € G, let

r 11- A if TA e. r .

As observed in /13, fixing 11- on atomic
sentences determines it uniquely on all sentences of
L( C uP ) •
0
0

Thus we have an L-model: <G, I, P, 11-> i f L

CHAPTER SEVEN

364

is normal, <G,Q,R,P, 11-> if Lis not.
We claim: for each r £ G and for each signed sentence
ZofL(CUP),
0
0

ze.r ~ ru-z

(*)

As expected, the verification of (*) is by an induction on
the degree of Z.
So, suppose ( *) is known for all

degree < k.

r f: G and all Z of

And let us consider a specific Z of degree k,

r e G, say r is downward saturated in

and a specific

•r (C up 1 u ••• UP n ) • We show (*) holds for this

C

0

0

0

r • There are several cases, depending on

choice of Z and
the form of Z.

If Z is atomic, or an

or a

o<

{3, the situation is

exactly as in the proof of Theorems 2.5.2 and 2.5.3, making
use of the fact that r is downward saturated, hence
1

n

0

0

maximal, in C* t ( C u p u ••• U P ) •
0

follows.
Case lf )

Suppose Z = ~ •

The other cases go as

And suppose Z E r.

By

condition 'lf for L-consistency properties, and Proposition
8.6,

1

n

0

0

ru{lf(c)}e.c•r<c VP v ••• vP) for each
n

1

0

c E. C v p u ••• uP • But since r is maximal
0
0
0
in this section (being downward saturated) it must be that

't (c) E r.

That is, rewriting things a bit,

all c E. P ( r ) .
c e p ( l( ) ; hence
8(c)E r

r for

Then by the induction hypothesis, since

lf (c) is of lower degree than 'll',
Case S )

l( (c) E

r 11- lf (c) for all

r II- l •

Suppose Z = b, and suppose Z e: r .

n

1

for some c €(C Vp V ••• VP) since
0

0

1

0

n

r

Then
is

downward saturated in C* f ( C v p u ••• v P ) • That is,
0
0
0
6 (c) e: r for some c E. P( r ) • By the induction hypothesis
then,

r ~ S (c) for some c£P(r), hence r 11- S.

QUANTIFIERS

Case

365

Exactly as in the propositional setting.

-v)

Suppose Z = 1T, and suppose Z € r. We may
r is normal (or the logic L is a normal logic) for

Case iT)
suppose

otherwise, the result is trivial.
r E C* f ( C Up 1 u ••• U P n ) hence
0
0
10
n

r II U { Tf } E. C* f ( C u P u ... V P ) .

0
8.6 here.

0
0
0
Then by Proposition 8.7,

Now,
We used Proposition

r II u { TT } may be
0

extended to a set A that is downward saturatea in
C*

r(C U P 1 u ••. u Pn UP n+1 ) •
0

0

P ( r ) c;;; P ( A ) and

rr

0

0

0

Then

A E: G,

r II .;;: A, hence r B .6..

€ D., so by the induction hypothesis,

follows that

r II- Tf •

Further ,
All-

TT •

0

It

This concludes the verification that (*) holds.

From

here on, things are simple.
We claim, for every Z e. W and for every r e: G, r 1r- Z.
Well, choose some Z e. W.

If

r € G then r is downward

saturated in some C* t ( C u p 1 u ... uP n ) . But by
0
0
0
Propositions 8.5 and 8.6, this section is W-compatible,

since c was.

1

n

r U{Z} E. c*r<c up u ... up ) . But r
0
0
0
is maximal in this section. It follows that Z E r. Then

by <*>,

Then

r If- z.

Next we claim that some world in this model forces all
the members of S.

Well, S is C-consistent, that is, SEC.

Then S E. C*, which extends C.

r

Since S consists entirely of

L( C ) sentences, S E. C* C • By Proposition 8. 7, S may be
0
0
extended to a set, call it A, that is downward saturated
1

in C*f(C up ) . Then A E: G and since S <;;A, A forces each
0
0
member of S, by(*).
Finally let v be the identity map on C up . This is
0
0
an interpretation of L( C V p ) in the model we have
0
0
constructed. Obviously, under this interpretation, S is

366

CHAPTER SEVEN

locally satisfiable and W is globally satisfiable.
This concludes the proof of Theorem 8.1.
#9

ANALYTIC TABLEAU COMPLETENESS

Let L be one of the logics listed at the beginning of #8.
Then the tableau system for L (propositional or
first-order) does not involve a cut rule, and the
propositional version was shown to be strongly complete in
earlier chapters.

We now prove completeness of the

first-order version.
Completeness Theorem 9.1: If X is L-valid then X has an
L-tableau proof. More generally, let S, U and V be sets of
L( C ) sentences. If S "" U - V then there is a closed
0
rL
tableau for V using the members of U as local and the
members of S as global assumptions.
Proof:

Suppose there is no closed first-order L-tableau

for V using the members of U as local and the members of S
as global assumptions. We show S ~ u -v.
L
Temporarily, call a set Q of signed sentences of
L( C UP ) tableau-consistent if 1) only a finite number
0
0
of parameters occur in members of Q and 2) there is no
closed L-tableau for Q, using S as global assumptions (and
no local assumptions).

Let C be the collection of all such

tableau-consistent sets.

We claim C is an S-compatible

first-order L-consistency property.
The propositional conditions are essentially the same
as in earlier chapters. See the proof of Theorem 2.6.1.
Likewise the quantifier conditions are straightforward. We

QUANTIFIERS

367

note that the S -condition for consistency properties will
follow from the

l) -rule

for tableaus and that rule requires

a new parameter to be introduced.

But members of C omit

infinitely many parameters, thus there will always be
plenty of new parameters around.

With these remarks, we

leave the details to the reader.
Now, we began by supposing there was no closed
L-tableau for V using U as local and S as global_
assumptions. It is easy to see this implies Uu V E C (here
we use the hypothesis that U and V are sets of L(C )
0
sentences). Then by the Model Existence Theorem 8.1, there
is an interpretation v, in some L-model, under which Sis
globally satisfied while Uu V is locally satisfied. And
this implies S ~
#10

L

U --+V.

NATURAL DEDUCTION AND AXIOM SYSTEMS

We still only consider the analytic logics. So, for this
section again, L is one of the logics enumerated at the
start of 118.
We begin with natural deduction.

Appropriate

quantifier rules to add to the Classical natural deduction
system of Chapter Four #10 are easy to come by. Indeed, we
only need elimination rules.
11' E)

So we take the following.

'(
~(c)

for any constant or parameter c

~(c)

for a new parameter c

oE)

368

CHAPTER SEVEN

where, of course, new means it has not occurred in the
natural deduction proof prior to this point.

And indeed,

adding these rules to either the A-style system or the
I-style system for L, as presented in Chapter Four #13 and
#15 and Chapter Six #9, produces an appropriate first-order
system for L.
Example: Here is an A-style proof of
0 ('If x)A(x) ::> ( \f x) o A(x) in K.
(1)

TO(Vx)A(x)

assumption

(2)

F(V'x)DA(x)
F QA(c)

assumption

(3)

o E on (2)

creation of strict box rule
(4)

T('Vx)A(x)

Strict Iteration on (1)
(generalized version)

(5)
(6)
(7)
(8)
(9)

l E on (4)
TDA(c)
v-return on (5)
T.J..
contradiction on (3) ,(6)
T(V' x) DA(x)
Reverse on (2) ,(7)
TC!(\f x)A(x):::>('Y x)OA(x)
T=>I on (1),(8)
TA(c)

The completeness of these rules (A-style or I-style)
is an easy consequence of the Model Existence Theorem 8.1.
Thus, define a collection C as follows.

Put a set S of

signed sentences in C if 1) S contains only finitely many
parameters and 2) there is no deduction of T ..l.. from members
of S as (local) assumptions.

It is straightforward to show

C is an L-consistency property.

Then the completeness

follows in the usual manner, for example, see the proof of
Theorem 4.14.1 or 4.16.1. We have not yet mentioned global

QUANTIFIERS

369

assumptions, but they cause no trouble.
The correctness of these rules is established by a
direct extension of what worked in the propositional case.
We omit details, and refer the reader to Chapter Four #14
and 1116.
Next we turn to axiom systems.

One can add almost any

"standard" axiomatic treatment of quantifiers to the
propositional base in Chapter Four #2, and the result will
serve very nicely for our present purposes.

For reasons of

our own, we prefer the following specific system.

We

assume available the rules and axioms of Chapter Four #2,
of course.

We add the following, where

~

and

~

are

(obviously) used in their unsigned sense.
c5 (a) v Ha)

Rule Q:

s v 'If

where a is some parameter

Axiom schema:
QA1)

(Vx)[ S(x) v lS'(x)]::::>[b vIS']

QA2)

( '</ x) T

QA3)

(3 x) T

QA4)

lf

QA5)

A=>( '<I x)A

::::1 ~(a)

where A is a sentence (hence does not
contain free occurrences of x).

There is a certain amount of redundancy here.
instance, QA3 is derivable from the rest.

Also, from Rule

Q and QA2 one may show that the usual rule of
generalization is a derived rule:

For

370

CHAPTER SEVEN

ll' (a)

"0
The reason we give the full list is that there is an
interesting parallelism with certain of our modal rules and
axioms.

Thus, compare Rule Q and Rule M (Chapter Four 113),
0

0

axiom QA1 and C (Chapter Four #5), QA2 and K (Chapter
0
Four #5), QA3 and D (Chapter Four #7), QA4 and T0 (Chapter
Four #7). Indeed, Fitting [1981] contains a parallel study
of modalities and quantifiers, in which the role of each
quantifier axiom is investigated by using something like a
Kripke model theory, but in which quantifiers take the
place of modal operators.

There the critical role of the

"vacuous quantification" axiom QA5 is investigated.

We do

not repeat all this here, however. The interested reader
can consult the paper we referred to.
We claim that adding these axioms and rules to the
propositional version of L, as presented in earlier
chapters, produces a complete and correct axiom system for
first-order L.

It is understood that the axioms and rules

of L are adjusted to the needs of our first-order language.
0

For example, T now denotes the set of all sentences of
L(C uP ) of the form ox ::::JX.
0
0
Correctness is shown, as usual, by an induction on the
length of proofs.

Completeness is shown by using

first-order consistency properties, very much as in Chapter
Four #6,7.

We leave all details to the reader, who

probably needs some work to while away the empty hours
anyway.

We merely provide two examples.

Example 1:

Here is an axiomatic proof, in K, of

o ('V x)A(x):::l('<t x)OA(x).

371

QUANTIFIERS

1)

('Vx)A(x)::::;,A(c)

2)

~('V

3)

~ D(V x)A(x) v OA(c)

4)

-('V x) o ( '<J x)A(x) v ("f x) o A(x)

Rule Q on

5)

('V x)O ('V x)A(x)::::;, ('V x)CJA(x)

from 4) by prop.

by QA4
from 1) by prop. logic

x)A(x) v A(c)

Rule M on 2)

3)

logic
6)

D(V x)A(x);:)(\1 x)D(II x)A(x)

by QA5

7)

o(Vx)A(x)::::;,(Vx)QA(x)

from 5) and 6) by
prop. logic

Remark:

An inspection of this proof shows i t also works

for C (indeed, for U).

Example 2:

Here is a proof in the KB system of

('<I x)OA(x) ::J O('V x)A(x), though this is not one of the

analytic systems we really are supposed to be considering
in this section.

1)

('I x) o A(x) ::J o A( c)

by QA4

2)

OA(c) v ~('<I' X) 0 A(x)

from 1 ) by prop. logic

3)

() OA(c) v ~ <>('<~' x)O A(x)

4)

~A(c);:)

5)

<> IJ A( c) :::::lA(c)

from 4)

6)

A(c)V -¢("1-x)OA(x)

from 3) '5) by prop.

Rule M on 2)

Cl¢-A(c)

B

0

.

ax1om (Ch 5 115)

logic
from 6)

7)

-()("tx)OA(x)VA(c)

8)

-("'x)()('<l'x)OA(x)v(Vx) A(x)

9)

Q('<l'x)DA(x)::J(V x)()('V x)DA(x)

10)

~ ¢( 'V x) D A(x) v

11)

,.....O¢('Vx)oA(x)v D("fx)A(x)

(V x)A(x)

Rule Q on 7)
by QA5

from 8) ,9) by prop.
logic
Rule M on 10)

CHAPTER SEVEN

372

12) (Vx)DA(x)::>CJ<>(Vx)DA(x)
B0 axiom
13) ,..,(V x)DA(x)v c(vx)A(x)
from 11), 12) by
prop. logic
from 13).

14) ( 'r1 x) D A(x) ::> 0 ( V x)A(x)
#11

COMPACTNESS AND SKOLEM-LOWENHEIM THEOREMS

Once again, L is one of the first-order analytic logics
listed near the beginning of #8. Also, S, U and V are sets
of signed (or unsigned) sentences of L(C ).
0

Finiteness Theorem 11.1:

If SF

L

U ~v then there are

finite sets S0 <;;S, U0 ~U and V0 ~ v such that

s F u ~v •
0

L

0

0

Local Compactness Theorem 11.2:

If every finite subset of

U is locally L-satisfiable, so is U.
Global Compactness Theorem 11.3: If every finite subset of
S is globally L-satisfiable, so is s.
The proofs of these three theorems are straightforward
extensions to the first-order setting of the proofs of
Theorems 3.4.1, 3.4.2 and 3.4.3. We omit details. The
Skolem-Lowenheim Theorem, on the other hand, has no
propositional analog we can call on.
Skolem-Lowenheim Theorem 11.4:

Suppose there is an

interpretation v of L(C ) in some L-model under which S is
0
globally and U is locally satisfied. Then there is an
interpretation v' in an L-model whose domain is C up
0

0

373

QUANTIFIERS

under which Sis globally and U is locally satisfied.
Form a collection C as follows.

Proof:

Put a set W of

sentences of L( C v P ) into C if: 1) only finitely many
0
0
parameters occur in W and 2) there is an L-model and an
interpretation v of L( C UP ) in that model under which S
0
0
is globally and W is locally satisfied. C is easily seen
to be an S-compatible L-consistency property, and U £ «::.
The result now follows from the Model Existence Theorem

8. 1.
U--+V is valid under every
interpretation in every L-model in which the domain is

Corollary 11.5:

I f S 1=

L

C u D , then it is L-valid.
0

0

#12

DEDUCTION THEOREMS

We show, very briefly, that the deduction theorems of
earlier chapters go over directly to the first order case.
For this section S and U are sets of sentences and X and Y
are single sentences, all of L(C ).
0

Arrow Deduction Theorem 12.1:

Let L be any of the

first-order logics listed at the start of #8.
S I= L U, X - - > Y i f f S I= L U ---+ (X :::> Y) •

Proof:

Same as that of Theorem 3.5.1.

Turnstyle Deduction Theorem for Normal Logics 12.2: This
time let L be the first-order version of K, K4, T, S4, D or
D4.

S,X F

L

u~v

iff for some n,

CHAPTER SEVEN

374

S I;:

L

n
1
0
U, a X, o X, ••• , o X ~v.

Proof:

In one direction (right to left) the proof is the

same as that of Theorem 3.5.2 part 1.

The other direction

is a minor modification of part 2 of that proof.

We

sketch.
Suppose for no n do we have
Sl=

0

L

1

n

u,ox,ax, ... ,ox~v.

Definea

collection C of sets of signed sentences as follows.

Put a

set W of signed sentences of L( C uP ) into C provided 1)
0

0

only finitely many parameters occur in W and 2) for each n
there is an L-model <G, R, P, If-> and an interpretation v such
that the members of S are globally satisfied in this model,
under v, and for some rEG, all constants of v(W) and of
n
1
0
v(X) are in P(r ), and r If- v({D X, 0 X, ••• , a X}) and

r lr v(W).

We leave it to the reader to check that Cis a

T(SV{X})-compatible L-consistency property.

Then the

proof concludes exactly like that of Theorem 3.5.2.
We note, without restating them, that Corollaries
3.5.3, 3.5.4 and 3.5.5 then carry over immediately to the
first order case.
Finally we note, also without a full statement of the
results, that the deduction theorems for regular logics,
given in Chapter Six #5, also carry over to the first-order
case for those logics L listed in #8.

The proofs are

modifications of those of Chapter Six, along the same lines
as the proof above.

QUANTIFIERS

#13

375

INTERPOLATION THEOREMS

In Chapter Three #8 and #9 we proved the Craig and the
Lyndon Interpolation Theorems for certain normal
propositional modal logics.

And in Chapter Six #6 we

proved similar results for various regular logics. Those
theorems extend very easily to encompass quantifiers. We
make the extension in this section, and consider a major
consequence. In Chapter Three #8 we actually presented two
proofs of Interpolation.
well.

Both extend to quantifiers very

But we prefer the one using Symmetric Gentzen

Systems, as being easier to follow.
Definition:

Let U and V be finite sets of (signed)

sentences of L(C uP ) , and let Z be a single such
0
0
sentence. Z is an interpolation formula in the logic L for
the sequent U~ V if: 1) all relation symbols of Z are
common to U and V; 2) all constants and parameters of Z are
common to U and V; and 3) the sequents U~Tz and TZ-----? V
are both L-valid. We say Z is an interpolation formula in
L for the sentence X:::> Y if Z is an interpolation formula
for the sequent X ~ Y.
Theorem 13.1:

Let L be any of the first-order logics

listed near the start of #8.

Let A:::> B be a sentence of

L( C uP ) • If A :JB is L-valid then A :::J B has an
0
0
interpolation formula in L.
Add to the Second Proof of Theorem 3.8.1 (the
sequent calculus proof) or to the proof of Theorem 6.6.1 as
Proof:

is appropriate, the following extra rules (and

CHAPTER SEVEN

376

interpolants).
U, He)

U, ~

X(c)

( V x)X(x)

U X(c) V o(c)
(a x)X(x~

' V

V

v' s

u

(The above for any constant or parameter c.

It is

understood c may occur vacuously in X(c), in which case,

( v x)X(x) and ( 3 x)X(x) are equivalent to X itself.)
X
U, S(c)-----> V
X

X

u~v.

X

u,s____,.v

t(c)

u -----+ v' '/{

(The above for a parameter c that does not occur in the
sequent below the line.)
The reader may easily check that adding these sequent
rules to the propositional rules for L produces a complete
and correct first-order proof procedure. Of course Theorem
8.1 should be used.
And the reader also can verify that if the sentence
over the arrow is an interpolant for the premis-sequent in
one of the rules above, then the same is the case with the
conclusion-sequent.

Note that in the second pair of rules,
if X is an interpolant for the premis-sequent, then the

parameter c can not occur in X.
follows.

The reasoning is as

If X is an interpolant for the premis-sequent,

all parameters of X are common to both sides of the arrow,
hence all parameters of X occur in V.

But c is required

not to occur in V since it is part of the sequent below the
line.
Thus, as a sequent is proved in the system above, an
in~erpolant

for it is constructed.

377

QUANTIFIERS

The quantifier rules just presented are taken from
Smullyan [1968] Chapter XV, where they are used as part of
Remark:

a proof of the Interpolation Theorem in Classical logic.
In Chapter Three #9 a definition of positive and
negative occurrence was given (for a propositional variable
A similar definition can be given for an
occurrence of a relation symbol in a formula. The
in a formula).

propositional clauses are essentially the same as in
Chapter Three 119, and we add the extra quantifier clauses
6)
of P in
7)

if P occurs in
~

~(c)

the corresponding occurrence

has the same polarity;

if P occurs in

S(c) the corresponding occurrence

of P in o has the same polarity.
Then the proof just presented for Theorem 13.1
actually establishes the stronger result
Under the same hypotheses as 13.1, if A::::>B
is L-valid then A:::> B has an interpolation formula Z in L

Theorem 13.2:

such that every relation symbol of Z occurs in both A and B
with the same polarity with which it occurs in Z.
Finally, we conclude with one example of a consequence
of an Interpolation result: Beth's definability theorem
3.10.1 extends to first-order modal logics. The reader
should consult Chapter Three #10 for a discussion of the
following i terns.
We use the following notational conventions.

F(R) is

some sentence of L(C ) in which the n-place relation symbol
0
R has some (possibly 0) occurrences. If P is also an

378

CHAPTER SEVEN

n-place relation symbol, F(P) denotes the result of
replacing every occurrence of R in F(R) by an occurrence of

P.
Definition:

There is an explicit definition of R from F(R)

in the logic L if there is a formula

, ••• ,x ) with all
n
free variables among x , ••• ,x , in which R does not occur,
1
n
such that
F(R)=>(Vx ) ••• (V'x )[R(x , ••• ,x) ""
1
n
1
1
is L-valid.
Definition:

~(x

1

~(x

1

, ••• ,x )]
n

F(R) defines R implicitly in the logic L if

the following holds:

for an n-place relation symbol R',

other than R, that does not occur in F(R),
[F(R)AF(R')] :::>
(vx ) ••• (vx )[R(x , ••• ,x) _
1
n
1
n
is L-valid.
Theorem 13.3:

R'(x , ••• ,x )]
1
n

Once again, let L be one of the first-order

modal logics listed near the start of #8.

If F(R) defines

R implicitly in L then there is also an explicit definition
of R from F(R) in L.
Proof:

The proof is a direct adaptation of that of Theorem

3.10.1 to encompass quantifiers.
implicitly in L.

Suppose F(R) defines R
Let R' be a relation symbol, different

than R, that does not occur in F(R).

Then

[F(R)/\F(R')] :::>
(Vx ) ••• (Vx )[R(x , ••• ,x) ~ R'(x , ••• ,x )]
1
n
1
n
1
n
is L-valid. From this we easily get that, for any
parameters c , ••• ,c , which we may take to be distinct, and
1
n

379

QUANTIFIERS

not already occurring in F(R), the following is L-valid:
[F(R)AR(c , ••• ,c)]
1
n

~

[F(R 1 )~R 1 (c

1

, ••• ,c)].
n

Then by Theorem 13.1 there is an interpolation formula for
this.

That is, there is a sentence

If

such that 1) all

relation symbols, constants and parameters of

If

are common

to [F(R)AR(c , ••• ,c)] and to [F(R 1 )=>R 1 (c , ••• ,c)], and
1
n
1
n
2) [F(R) 1\R(c , ••• ,c )] ::>"'' and 'f ~ [ F( R1 ) :::> R1 ( c , ••• ,c ) J
1
n
1
n
are both L-valid.
Now neither R nor R1 can occur in l.f by 1) , though 'f
may contain c , ••• ,c •
1

n

To reflect this, from now on we

write Lf(c , ••• ,c ) instead of 'f.
1
n
By 2), [F(R)AR(c , ••• ,c)]::> 'f'(c , ••• ,c) is L-valid,
1
n
1
n
hence so is
F(R)=>[R(c , ••• ,c):::;, 'f(c , ••• ,c)]
(*)
1
n
1
n
Also by 2), l.f(c , ••• ,c ):::l[F(R 1 ):::lR 1 (c , ••• ,c)] is
1
n
1
n
L-valid, hence so is the result of replacing all
occurrences of R1 by occurrences of R.

Since R' does not

occur in l.f, this gives us that
l.f(c , ••• ,c ):::l[F(R):::lR(c , ••• ,c)] is L-valid.
1
n
1
n
Hence so is
F(R):::>['f(c , ••• ,c ):>R(c , ••• ,c)]
1
n
1
n
It follows from (*) and (**) that

(**)

F(R) :::>[R(c , ••• ,c ) =: 'f(c , ••• ,c )]
1
n
1
n
is L-valid. And from this it is an easy step to the
L-validi ty of
F(R)~(Vx

1

) ••• ('IX )[R(x , ••• ,x) =
n
1
n

This is as far as we take things.

'f(x , ••• ,x )].
1
n
A first-order

development parallel to the propositional one of Chapter

380

CHAPTER SEVEN

Three is possible.

One may use Compactness and Deduction

Theorems to extend the theorem above to allow local and
global assumptions. But we think enough has been said.
#14

DROPPING MONOTONICITY

All models considered thus far in the chapter obeyed the
monotonici ty condition: r B t::. ::::9 P ( r ) ~ P ( t::. ) •

Now we

consider briefly what happens if this condition is dropped.
Example:

In #6 we gave a C-tableau proof of the so-called

converse Barcan formula, D('V x)A(x)=>{V x) ClA(x).

Then by

the work of #7, it must be valid in all C-models of the
sort considered there.

But, the monotonicity condition was

assumed; if we drop it, it is easy to give a counter-model
to this formula. Indeed, we give an 54-counter-model.
Let D, the domain of the model, be {a,b}. And let G =
{r,~};

rliA,

rBr ,.6.BA; P(r) = {a,b}, P(A) ={a}.

We thus have an 54-frame <G,B,P> without monotonicity.
Now, on atomic sentences, set

r 11- A( a), r u- A(b),

611- A(a), and 11- holds in no other atomic cases.

This

completely determines an 54 model <G, B, P, 11->.

In it,

r II- A(x) for each X €. P( r) so r II- ( 'V x)A(x).
A 11- A{x) for each xe: P(A) so A It- ('r/ x)A(x).

Likewise

r lr a <'V x)A( x).

Hence

On the other hand, if r lr (If x) o A( x),

since bE: P( r) then r It- D A( b) and hence A 11- A( b) which
is false.

Thus r Jl'- ('I x) a A(x), so

r Jl'- D ('r/ x)A(x):::> ('r/ x) IJA{x).
This example is from Kripke [1963A] where he makes the
interesting observation that, in it, A is simply an

QUANTIFIERS

381

This remark suggests a convenient
modification of our tableau rules to correspond to the
existence predicate.

dropping of the monotonicity condition on models. We
present the restrictions necessary, and leave their
detailed development to others.
We associate with each branch of a modal tableau a set
of constants and parameters that are alive on that branch,
at that stage of the tableau's construction. These sets
change from time to time in accordance with the following
conditions.
At the beginning of a tableau construction for,
say, FX, the set of constants and parameters alive on the
1)

(only) branch consists of those constant symbols of X.
2)

If' on branch

e' the s -rule is applied to infer

S (c) from l5, then c is added to the set alive on e.
3) . If, on branch e, the lT -rule is applied then the

set of constants and parameters alive on e becomes the
empty set. Likewise for the v-rule of the deontic logics.
Any other tableau rule leaves unchanged the set
alive on the branch. (For the f3 -rule, each of the two
4)

resulting branches has the same set alive on it as the
original one did.)
Now, the ¥ -rule is changed as follows:

o(c)

where c is any constant or parameter
that is alive on the branch.

The idea is, the only constants and parameters we can
use are those whose existence is ensured by the tableau
argument up to that point; jumping to another world starts

382

CHAPTER SEVEN

things over again.
The reader can easily check that, with these
restrictions the proof of IJ(V x)A(x):J (V x)oA(x) inC
given as Example 1 in #6 no longer goes through.
We omit any attempt at correctness or completeness
proofs.

But we note that an appropriate model theory to go

along with these tableau restrictions not only drops the
monotonicity condition but also allows the empty domain to
be considered.

That is, we could have PC r ) = 121.

If this

is thought to be not desirable, one could add T(3 x)T as a
global assumption in tableau proofs to rule out the empty
domain without re-imposing the monotonicity condition.
The modified tableau rules suggested above are
investigated more fully, for Classical logic in Fitting
[1971] where a more careful consideration is made of the

fact that, in a S -rule application adding

E; (c)

to a

branch, if the quantifier involved is vacuous, the
parameter c does not "actually" occur on the extended
branch.

How one chooses to react to this can actually

change the resulting logic.

We assumed, in the discussion

above, that c is added to the set of constants alive on the
branch even if the quantifier involved in the passage from

o to
#15

.S (c) was vacuous.

CONSTANT DOMAIN MODELS

In the previous section we briefly considered the effects
of dropping the monotonicity condition on first-order
models.
it.

We now also consider the effects of strengthening

383

QUANTIFIERS

Definition:

A constant domain model is one in which P ( r )

= JP( A) for all worlds r and

A.

There are thus constant domain versions of first-order
S4, or K, or of any of the logics we have been considering.
In a few cases, the constant-domain requirement is no
restriction though. It is easy to see that a model meeting
the monotonicity condition that is symmetric is essentially
constant domain.
changes.

Thus for KB, DB, B and S5 nothing

For the other logics, however, restricting

ourselves to constant domain models changes things
dramatically.
It has been shown in Fine [1979] that for
constant-domain logics of the sort we are concerned with,
the Craig Interpolation Theorem fails.

It follows that

there can be no "reasonable" cut-free tableau system for
such logics for if there were we could use it, or the
related symmetric Gentzen system, to prove an Interpolation
result. This partly accounts for the difficulty we had in
earlier chapters with the "symmetric" logics KB, DB, B and
S5. It also accounts for the very brief treatment we
accord here to constant-domain logics in general; earlier
tableau methods are not appropriate.
We should, however, say a little about how one can
work with constant-domain logics by other proof procedures,
namely axiom systems.
Quantifiers and modal operators have many
similarities, with ( V x) analogous to o and ( 3 x) to ~ •
Fitting [1981] is an attempt to make explicit some of the
But none of the various proof principles
considered in earlier chapters has said much directly about
similarities.

384

CHAPTER SEVEN

how quantifiers and modal operators relate to each other.
We did see, however, that 0 ( V x) could be switched around
(Example 1 in 116 shows CJ(Vx)A(x)=>('<fx)DA(x) is a
theorem of C.) We also saw in 1114 that this was related to
the monotonicity condition on models.

And we saw in 116

Example 2 that the converse, (Vx)oA(x)::>O(V'x)A(x) held
in KB. Now this is suggestive because KB models must be
constant domain models (more precisely, constant domain KB
models are enough to consider).

As a matter of fact, this
formula is exactly what is needed to axiomatically

"capture" the restriction to constant domains.
In Barcan [1946] a first-order modal logic was
extensively developed for the first time.
propositional S2.

It was based on

In it the explicit assumption was made

of ( V x) o A(x) ::> 0 ( \:1 x)A(x), or more properly, of

o [¢(3x)A(x):>(3 x)<>A<xn which is equivalent for normal
logics.

Since then the assumption has become known as the

Barcan Formula.

Kripke [1963A] pointed out the connection

between the Barcan Formula and the requirement that models
have constant domains, and also the connections between the
converse Barcan Formulp and the monotonicity condition.
Even so, a rigorous proof of an appropriate completeness
theorem for the S2 system actually considered in Barcan
[1946] does not seem to have been published until Routely
[1978].
Completeness proofs for axiom systems including the
Barcan Formula, in terms of constant domain models, are
most easily found in Hughes and Cresswell [1968] Chapter Nine.
They are much like those suitable for logics not involving the
Barcan Formula, or constant domain models.

To us there

QUANTIFIERS

385

seem to be significant differences however.

Most notably,

they do not seem to extend to uncountable languages.

This

is in marked contrast to the completeness proofs we have
been presenting in this book, in which countability
assumptions played no role. Mind you, we do not know
countability restrictions are necessary for suitable
completeness proofs once the Barcan Formula is added, but
we have not seen a proof that could avoid them.

Indeed

there seems to us to be a curious similarity between
constant domain completeness proofs for axiomatically
formulated modal logics including the Barcan Formula, and
the proof of the Omitting Types Theorem of Classical Model
Theory.

And for it too, countibility restrictions seem to

play a significant role.
In this book, however, since we prefer to use tableau
methods as much as possible, we postpone any further
discussion of constant domain logics until the next
chapter. There tableau systems based on completely
different principles will be constructed, and it will be
possible to deal with constant domain logics.

Then in

Chapter Eight #12 we will sketch how to derive appropriate
axiomatic completeness results by showing how to translate
tableau proofs into axiomatic proofs.

Interestingly enough

though, for certain reasons, all the work of the next
chapter must assume a countable language.
that again.

We are back to

CHAPTER EIGHT
PREFIXED TABLEAU SYSTEMS

#1

INTRODUCTION

In Kripke's original papers on modal logic semantic
tableaus were used extensively.

But they were quite

different from the ones we have been investigating.
Instead of "updating" a branch, a new alternate tableau was
created.

This in turn could give rise to other alternate

tableaus, and so on.

The final proof was often more of a

forest than a single tree.

The disadvantages of such an

approach include, of course, complexity.

On the other

hand, there are certain clear advantages.

Branch updating

techniques of the sort we have been using cause one to
forget the past.

Thus they are less than ideal for logics

in which you can go home again, logics like B for example.
They are also inappropriate for first order constant domain
logics in which, so to speak, the discovery that something
exists in an alternate world makes one realize it must have
existed in the world we left behind.

Keeping track of all

the various alternate tableaus avoids these problems, since
there is then have the potential for interaction.
The main problem with Kripke's technique is, instead,
a very practical one.

It is complicated to use, and

difficult to prove complete, at least by the "systematic
tableau" methods that were intended.

So in this chapter we

present a simple modification of Kripke's original ideas
along the following lines.

We will use prefixed formulas,

in which the prefix can be thought of as a "name" for what
386

387

PREFIXED TABLEAU SYSTEMS

would have been an alternate tableau, had we actually
created one.

Since the prefixes are available to sort

things out for us, actual alternate tableaus will not be
needed.

Tableau proofs can, then, consist of single trees.

But of course our tableau rules must tell us how to
manipulate prefixes as well as formulas.
The resulting tableau systems are very simple to use,
and quite general.

Constant domain logics will present no

problem, for instance.

The price paid is that these

methods do not lend themselves to interpolation theorem
proofs, or to finite axiomatizability proofs, or to
deduction theorem proofs.

On the other hand, since we have

the added machinery of prefixes to work with, we can
establish something that was not possible before: a
"fundamental theorem" showing how to separate the modal and
the truth-functional parts of an argument.
In earlier chapters we used consistency properties;
essentially a Lindenbaum construction in the abstract.
That can be done here too.

But for the sake of variety,

and also because it works well in the present setting, we
prefer to give a systematic-tableau-construction
completeness argument.

That is, one sets out to prove X,

systematically "does everything" and, if no proof is found,
enough information will have been generated to produce a
counter-model to X.

The point is, since prefixes allow us

to work with just a single tableau, the description of a
systematic proof procedure becomes rather easy.

When

actual forest~ of trees are involved, the details can be
quite complex.
The present chapter is simply an expansion of Fitting
[1972].

More logics are discussed here, but no ideas are

388

CHAPTER EIGHT

presented beyond what was contained in the paper referred
to.
#2

PREFIXED PROPOSITIONAL TABLEAUS

We begin, as usual, with the propositional version.

Once

that is understood, adding quantifiers is easy.
Important Remark:

For the entire of this chapter we only

consider a countable language.

That is, there are

countably many symbols to the alphabet, hence countably
many formulas.

The reason is that a

systematic-tableau-construction style of completeness
argument does not seem to work, even in Classical logic,
when uncountable languages are involved.
The main ideas of this chapter can be traced back to
Fitch [1966]: add to the formal language symbols intended
to name possible worlds in Kripke models.

Now if syntactic

manipulations are to be kept reasonably simple, it would be
well to choose a system of such name symbols with some
convenient mathematical structure, to reflect automatically
certain features of arguments about Kripke models.

The

following, at least for several normal logics, was
developed in Fitting [1972].
Definition
integers.

A prefix is a finite sequence of positive
Example: 1,1,2,1.

A prefixed formula,

prefix or followed by a formula X.

a-X,

is a

Similarly a prefixed

signed formula, cr Z, is a prefix cr followed by a signed
formula Z.

We will systematically use cr, cr' , etc. for

389

PREFIXED TABLEAU SYSTEMS

prefixes throughout this chapter.
To keep the informal language simple, in our
discussions from now on, when we say formula we generally
mean either an unsigned or a signed formula. We will, as
usual, present tableau systems for both versions. And when
we say model we mean either a Kripke model or an augmented
Kripke model.
The idea is, we will interpret prefixes as naming
possible worlds in some model. o-x will be thought of as
true under such an interpretation if X is forced in the
world a- names.
All tableau proofs begin with 1FX (signed version) or
1~X (unsigned version). Intuitively, starting with 1FX
amounts to assuming there is a world, named by the prefix
1, in which X is not forced.
The informal idea of prefixes suggests appropriate

~

and f3 rules, namely:
c:ro<

1

o- o<2
where cr is any prefix.
A tableau branch is closed if it contains o-X and
<J ....... X (unsigned version) or a- TX and a-FX (signed version)
for some prefix cr and some formula X. A tableau is closed
if every branch is closed. A closed tableau for 1 -x, or
1FX is a proof of X.
The key i terns, of course, are the v and TT rules.
Before presenting them, a little more terminology.

CHAPTER EIGHT

390

We say a prefix r:r is used on a tableau branch if r:r Z
occurs on the branch for some formula Z.
a- is

We say a prefix

unrestricted on a tableau branch if rr is not an

initial segment (proper or otherwise) of any prefix used on
the branch.

We say a prefix

~·

is a simple extension of

o- if cr• = rr, n for some integer n.
The rest of what we need depends on what logic we are
considering.

We begin with S4, and an example, after which

we summarize versions for all our modal logics, in chart
form, and conclude with a few more tableau examples.
For S4 let us say a prefix tT 1 is accessible from

cr

if o- is an initial segment (proper or otherwise) of a- 1 •
The idea is, we will think of a-' as naming a world
accessible from tT.

Examples:

1,1,2 and 1,1,2,1,2 are

both accessible from 1,1,2.
Now, for S4, the v and rr rules are as follows.

crv

cr'-v

0

where either a-• is an unrestricted
simple extension of cr, or cr' is a
a used prefix accessible from cr.

crrr

cr'rr0
Example:

where a-' is an unrestricted simple
extension of o-.

Here is an S4 proof of OX :> o( c X v Y).

391

PREFIXED TABLEAU SYSTEMS

1F0X;:)D(OXVY)

( 1)

1T Cl X

(2)

1F o (oX v Y)

(3)

1,1FOXVY

(4)

1,1FCJX

(5)

1,1FY

(6)

1, 1, 1FX

(7)

1, 1, 1TX

(8)

closure
Explanation:

(2) and (3) are from (1) by o<.

(3) by rr.

(5) and (6) are from (4) by

(5) by rr.

Finally (8) is from (2) by v.

o<.

(4) is from
(7) is from

Now we present prefixed tableau systems for all the
propositional logics considered earlier in this book.
All systems use the

o<

and f1 rules given above.

The

definitions of used, unrestricted and simple extension are
the
same for all systems.

What changes is the definition of

accessible from, and the form of the v

and 1T rules.

Because of the number of logics invloved, we summarize
things in chart form.
We want to make sure we have "enough" prefixes
available for any tableau argument.

Now tableaus are

finite, so for any given tableau branch and for any given
prefix cr there will be some integer n (indeed, infinitely
many) such that

~.n

is unrestricted on the branch.

simply arrange things so that
all our tableau systems.

cr ,n

is accessible from

We
cr

in

There are also other, more

specialized accessibility conditions we consider, so it is

392

CHAPTER EIGHT

handy to introduce the following terminology (in which ~
is an arbitrary prefix).
Definition:

We say the relation of accessibility from, on

prefixes, satisfies:
1)
~

the general condition if ~ ,n is accessible from

for every integer n;
2)

the reverse condition if a- is accessible from
o-,n for every integer n;
3)

the identity condition if cr is accessible from

o-;
4)

the transitivity condition if the sequence cr. cr'
is accessible from ~ for every non-empty sequence o-'.
Note that transitivity includes the general condition as a
special case.
Now, for the various logics we consider, the
accessibility relation on prefixes is given in the
following chart.

PREFIXED TABLEAU SYSTEMS

FOR THE LOGIC
K, D, C, CD,
CN, CND
T, CT, CNT
KB, DB, CB,
CDB, CNB, CNDB
B, CTB, CNTB
K4, D4, G, C4
CD4, CN4, CND4
S4, CS4, CNS4
S5, CS5, CNS5

THE ACCESSIBILITY RELATION ON
PREFIXES MEETS THE CONDITIONS
general
general, identity
general, reverse
general, identity, reverse
general, transitivity
general, identity, transitivity
no special conditions; any prefix
is accessible from any other

Next the v and iT rules themselves, also in
summarized fashion.

We begin with the normal logics other

than G, and the regular logics other than the closed ones.
First, one more item of terminology.
Definition:

A prefix a- is normal on a given branch if

o- -v occurs on the branch for some formula v.

Now the tableau rules.

-v -rule:

o--v

cr'v 0

where cr' is accessible from cr and in addition

393

394

CHAPTER EIGHT

FOR THE LOGICS

THE FOLLOWING CONDITIONS
MUST HOLD

K, KB, K4, C,

o- 1 has been used on the branch

CB, C4
D, T, DB, B, D4,

cr 1 has been used on the branch,

S4, S5, CD, CT

or is an unrestricted simple

CDB, CTB, CD4,

extension of a-.

CS4, CS5
n -rule:

cr rr
CT 1 IT

0

where cr 1 is an unrestricted simple extension of cr and in
addition
FOR THE LOGICS

THE FOLLOWING CONDITIONS

K, KB, K4, D, T

no other conditions

MUST HOLD
DB, B, D4, S4,
S5
C, CB, C4, CD,

cr is normal on the branch

CT, CDB, CTB,
CD4, CS4, CS5
For the logic G, use the K4 v-rule, and the following
rr -rule for G:

<JTT
I

cr rr0
1-

cr 1r

where cr- 1 is an unrestricted simple extension of cr.

395

PREFIXED TABLEAU SYSTEMS

Finally, for any closed regular logic CNL, use the
tableau rules for CL but re-define normal prefix by adding
the condition: if Qi is normal on a branch, and either of
the tableau rules
o-v

<JTT

cr v 0

a- rr 0

I

I

is applied on the branch, then cr 1 is also normal on the
branch.
This completes the definitions of prefixed tableau
systems.
Example:

The following is a proof, using the C-tableau

rules, of ( Cl X " o Y) => o (X" Y).
1F( a X A a Y) :J a (XA Y)

( 1)

1TCXACY

(2)

1F 0 (X 1\ Y)

(3)

1T OX

(4)

1T a Y

(5)

1,1FXAY

(6)

1, 1TX

(7)

1,1TY

(8)

~

1,1FX

closure
Explanation:

(9)

1,1FY

( 10)

closure
(2) and (3) are from ( 1) by o<.

are from (2) by o<.

(4) and (5)

(6) is from (3) by TT; note that the

prefix 1 is normal at this point because of (4) and (5).
(7) and (8) are from (4) and (5) by V; note that at this

CHAPTER EIGHT

396

point the prefix 1,1 has been used on the branch.
(9) and ( 10) are from (6) by
Example:

Finally

~.

The following is a proof, using the B-tableau

rules, of [ <> D A A

¢

D(A :::lB)] :::> <>B

1F[<>oAA¢0(A:::lB)]::><>B (1)
1T[<> OA A ¢0(A:::lB)]

(2)

1F <>B

(3)

1T <> DA

(4)

1T¢0(A::::>B)

(5)

1FB

(6)

1, 1T c A

(7)

1 ,2T c (A:::> B)

(8)

1TA

(9)

1T(A:lB)

(10)

/ ( 11 ~
)
1TB

1FA

closure
Explanation:

(12)

closure
(2) and (3) are from (1) by «.

are from (2) by o<.

(6) is from (3) by V.

are from (4) and (5) respectively by
from (7) and (8) by v.

rr.

(4) and (5)
(7) and (8)

(9) and (10) are

( 11) and ( 12) are from ( 10) by fl.

Note that this proof will also work in CTB because line (3)
makes the prefix 1 normal on the branch.
Concluding Remarks on 35:

The accessibility conditions for

35 (and also for CS5 and CNS5) are trivial in that any
prefix is accessible from any other.

Since the whole

structure of finite sequences is thus ignored, we may as

PREFIXED TABLEAU SYSTEMS

397

well replace the set of finite sequences by just the set of
integers. Then an integer prefix may be considered to be
unrestricted on a branch just in case it is new to the
branch, and of course any integer is accessible from any
other.

In brief the S5 modal rules become simply

v -rule:
nv

kv

0

for any integer k

lT -rule:

nlT

k rr 0

for any~ integer k.

This is suggestively similar to the quantifier rules of
Chapter Seven.
Here is an S5-proof, in the modified system, of
~X:::>

D<>X.
1F¢X:::>O¢X

( 1)

1T~X

(2)

1F 0 ¢X

(3)

2TX

(4)

3F¢X

(5)

2FX
closure

(6)

Explanation: (2) and (3) are from (1) by o<. (4) and (5)
are from (2) and (3) respectively by 1f. Finally (6) is
from (5) by v.

398

CHAPTER EIGHT

This tableau system for S5, turned into Gentzen
sequent form, is due to Kanger, see Kanger [1957] or Feys
[1965] pp 181-184.
113

CORRECTNESS

Let L be one of the modal logics treated in the last
section. We refer to the accessibility notion on prefixes
that is appropriate for L as L-accessibility for short.
Now, we have been saying prefixes are names for possible
worlds; it is time to be more precise.

(I would like to

thank Osamu Sonobe for pointing out some needed corrections
in an earlier version of this section.)
Definition:

Let S be a set of prefixed formulas. And let
<G, R, If->, or <G, Q, R, 11-> be an L-model as appropriate. Gall

r £ G idealizable provided, if r is
normal then there is some .6 £ G such that r R A. Now, by an
a possible world

L-interpretation of S in the model we mean a mapping I from
the set of prefixes that occur in S to G such that if

~~

is L-accessible from cr and if I( cr) is normal and
idealizable then I( cr ) BU( ~ 1 ) .
We say S is L-satisfiable under the L-interpretation I
if, for each cr Z E S, I(cr) lt-Z.

We say S is L-satisfiable if S is L-satisfiable under
some L-interpretation.
formula

We also say a single prefixed

is L-satisfiable if the set {~ Z} is.
We say a branch of a tableau is L-satisfiable if the
~Z

set of prefixed formulas on it is L-satisfiable.
tableau is L-satisfiable if some branch is.

And a

PREFIXED TABLEAU SYSTEMS

Lemma 3.1:

399

Suppose Tis a prefixed tableau that is

L-satisfiable. Let T' be the tableau that results from a
single L-tableau rule being applied toT. Then T' is also
L-satisfiable.
Proof:

In its general organization the proof is much like

that of Lemma 2.3.2. Thus if T is L-satisfiable because
branch e is L-satisfiable, and if our tableau rule was not
applied on branch 6 , then 9 is still present in T' , and
still L-satisfiable.

So now we concentrate on the case

where the tableau rule in question was applied to branch

e, an L-satisfiable branch ofT.
If the tableau rule was either o< or (3 , it is
straightforward to produce a satisfiable branch ofT'.

If

the tableau rule was either v or TT then the argument
depends on the logic L. That is, there are 31 cases to
considert Fortunately they are all very similar. We pick
one logic, S4, as representative and leave the rest to the
reader.

We note that for S4 models, all worlds are normal

and idealizable.
So, suppose branch

e is 54-satisfiable, say under the

54-interpretation I in the S4-model <G, R, 11->, and say
either the -v -rule or the rr -rule is applied on e to turn
tableau T into tableau T'.
First the v -rule. Suppose cr v occurs on 9 , and
(J"'v is added to the end of e according to the S4
0
v -rule. Then there are two possibilities.

First possibility:

cr' is accessible from cr and was

used on 9 • Then I is already defined for cr', and
I(o-)liU(cr'). Since e is L-satisfiable under I and crv
occurs on

e, I(cr) 1:- v

It follows that I (a-' ) u- v

0

by

400

CHAPTER EIGHT

the usual S4-model conditions.

Thus the enlarged branch is

still S4-satisfiable, under the same S4-interpretation I.
Second possibility: cr 1 is an unrestricted simple
extension of

cr-.

defined on cr-.

Then I is not defined on

<r 1 ,

though I is

Every world of an S4-model has some world

accessible to it (since we have reflexivity).

Choose a

member of G in the relation B to I( c:r ) , say r, and extend
the definition of I by setting I( cr 1 ) = r .
I(cr )BU( cr 1 ) .

Now cr

1

is unrestricted, so it is not an

initial segment of any prefix of
"t;

occurring in

Then

e.

Thus for any prefix

e we do not have 1: accessible from cr- 1 •

On the other hand, suppose cr 1 is accessible from -c
is,

1:

is an initial segment of cr- 1 ) .

Since cr 1 was a

simple extension of cr-, we must have that

1:

segment of a- (possibly not proper though).
that cr is accessible from
S4-interpretation of

t

I('t )SI(cr 1 ) .

is an initial
This means

Since I was an

•

e , we have I( -c ).Jii( cr ) •

things so that I(o-)IU(cr 1 ) .

(that

We chose

But B is transitive, hence

We have thus verified that the extended

mapping I is still an S4-interpretation.
Again, I( cr) 11- v

and I( cr) SI( r:r 1 ) hence I( a- 1 ) 11- v

0

Thus the enlarged branch is still S4-satisfiable under the
extended S4-interpretation I.

The rr -rule case is similar to the second possibility
above, so we omit the argument.
Theorem 3.2:

If X has a prefixed L-tableau proof, then X

is valid in all L-models.
Proof:
L-valid.

Suppose X has an L-tableau proof, but is not
Say X does not hold at world

r of some L-model.

.

PREFIXED TABLEAU SYSTEMS

401

Now a prefixed L-tableau proof begins 1FX.
L-interpretation I by setting I(1) =
forced at

Since X is not

r, it follows that the starting L-tableau is

L-satisfiable.
L-tableau.

r.

Define an

Then by Lemma 3.1, so is every subsequent

But an L-satisfiable tableau can not be closed,

contradicting the assumption that X had a tableau proof.
Thus if X is L-provable, X must be L-valid.
#4

A SYSTEMATIC TABLEAU PROCEDURE

It is possible to establish the completeness of the various
prefixed tableau systems by using a maximal-consistent-set
construction.

Indeed, consistency property notions are

easy to come by too.

But this time, partly for the sake of

variety, we use a different method entirely.

We describe a

systematic proof procedure that must produce a tableau
proof if one exists and, if one does not, will give us the
information necessary to construct a counter-model.

The

prefixes make it relatively easy to describe such a
systematic procedure, indeed, virtually any such procedure
suitable for Classical first-order logic can be adapted
without much change.

The one we use is based on the

first-order analog in Smullyan [1968].
Certain formulas in a tableau must be considered over
and over in any reasonable proof procedure.

Namely, if

o- v occurs on a branch, we want to make sure cr 1 v

been introduced for each prefix cr 1 accessible from
is used on the branch.

0

has
<r that

As time goes on there may be more

and more such prefixes, which means we want to work with

o-v many times.

To keep the book-keeping simple we use a

device due to Smullyan according to which we work with each

402

CHAPTER EIGHT

occurrence of a prefixed formula only once, but whenever we
work with one of the form a- v

we add a fresh occurrence of

it at the end of the branch.

Of course this involves an

inessential extension of the tableau rules, which we assume
for the rest of our work on tableau completeness.
As we said, we will work with each occurrence of a
prefixed formula in a tableau just once, after which we are
finished with it.

Consequently we add to the tableau

machinery the ability to officially declare occurrences
finished.

In implementing the procedure with pencil and

paper, one might place a check mark after an occurrence to
indicate it is finished.

In Smullyan [1968] the term used

was used for this purpose, but we have already used used
for something else.
Description of Systematic Procedure:
We present a version using prefixed signed formulas.
The unsigned version is a simple variant.

We do not

describe a procedure for G or for any of the closed regular
logics.

Systematic procedures for them are easily obtained

from the ones we do give and may be left to the reader.
We refer to a prefixed signed formula as atomic if it
is of the form cr TA or cr FA where A is an atomic formula.
Let X be a formula.

We describe a systematic attempt

to produce a proof of X in the logic L.

Some of the steps

vary slightly with the choice of L, as we indicate below.
The procedure is in stages as follows.
Stage 1:

Begin by placing 1FX at the origin.

concludes stage 1.

This

403

PREFIXED TABLEAU SYSTEMS

Suppose n stages of the construction have been
completed.

If the tableau we have constructed is closed,

then stop.

Likewise if every occurrence of a prefixed

formula is finished, then stop.
Stage n+1:

Otherwise we go on to

Choose an occurrence of a prefixed formula as

high up in the tree as possible (as close to the origin as
possible) that has not been finished, say it is a-z.

(This

is somewhat non-deterministic as there may be several
unfinished formulas at the same level.

A choice of which

to work with does not really matter, but to be precise, say
we always choose the one on the left-most branch).

If a- Z

is atomic, simply declare the occurrence finished.

This

ends stage n+1.

Otherwise we extend the tableau as

follows.
For each open branch

If cr z is of the form cr «, add

1)

the end of
If

2)

branch

e through the occurrence of a- Z:

e.
(j

(/0(

1

and

to

(jO(

2

z is of the form a- f3 , split the end of

and add a-(3 to the end of one fork and
1
the end of the other.
&

(J(3 to
2

3)

If cr Z is of the form a-v

a)

for the logics K, KB, K4, C, CB, C4, T, B, S4, S5,

then

CT, CTB, CS4, CS5: for each prefix cr ' that has been used
on

e and that is accessible from a- (if any), add cr' v

to the end of 6, after which add a fresh occurrence of

0

cr v to the end of 19 •

b)

for the logics D, DB, 04, CD, CDB, CD4: for each

prefix cr' that has been used on
from o- , add cr' v

0

to the end of

e and that is accessible
e. If there are no such

prefixes, let k be the smallest integer such that cr,k is

404

CHAPTER EIGHT

unrestricted on

e, and add <r ,k v

0

to the end of

e.

After either of these, add a fresh occurrence of <r v to
the end of

e.
a- rr then

4)

I f cr Z is of the form

a)

for the logics K, KB, K4, D, T, DB, B, D4, S4, S5:

let k be the smallest integer such that cr ,k is
unrestricted on
b)

8 , and add 0""" ,k TT to the end of 8.
0

for the logics C, CB, C4, CD, CT, CDB, CTB, CD4,

CS4, CS5: i f cr is normal on

e then let k be the smallest

integer such that cr,k is unrestricted on
cr ,k TT to the end of
0

e, and add

e ; if cr is not normal on e, add a

fresh occurrence of cr TT to the end of £7 •
Having done this for each branch

e through the

particular occurrence of crZ being considered, declare that
occurrence of cr Z finished.

This completes stage n+ 1.

This ends the description of our systematic tableau
procedure.

In the next two sections we show that it must

produce a proof if one exists.

#5

KONIG'S LEMMA

In following the systematic procedure of the previous
section, it is possible to fall into an endless sequence of
steps.

For example, a systematic attempt at a K4 proof of

<>A::::> ¢DA (A atomic) goes on forever, and begins:

PREFIXED TABLEAU SYSTEMS

405

1F <>A :::> <> OA ,_1T<>A .....1F <> c A ....-1, 1TA .....1, 1F0A .....1F <> OA .,.-/
1,1,1FA ,.....1 , 1 , 1F Cl A V'
1, 1F OA
1F <> OA
1,1,1,1FA

etc.
Here we have carried the construction through several
stages, using check marks to indicate when an occurrence is
finished.
Now in this example we are generating an infinite
tableau, but since it has only one branch we are trivially
generating an infinite branch too.

In other cases, the

construction might be much more elaborate.

What we need to

know is that, if the construction never terminates, then an
infinite branch must always be involved.

This is the

content of K6nig 1 s Lemma, an important but easy to prove
result about trees.
Definition:

A tree is finitely generated if each node has

only a finite number of immediate successors.
Tableaus are finitely generated, of course, since each
node has either zero, one or two immediate successors (two

406

CHAPTER EIGHT

if a ~-rule is involved, one in all other cases, except
branch ends).
Definition:

A tree is infinite if it has infinitely many

nodes.
K~nig's

Lemma 5.1:

An infinite, finitely generated tree

must have an infinite branch.
Proof:

By the descendants of a node N in a tree we mean

the immediate successors of N, their immediate successors,
their immediate successors, and so on.
Call a

Let T be an infinite, finitely generated tree.

node good if it has an infinite number of descendants.
Since the tree is infinite, the origin must be good.
Suppose N is a good node.

Since the tree is finitely

generated, N has only a finite number of immediate
successors, say N , N , ••• , N •
1

2

k

The descendants of N

consist of these k nodes, together with their descendants.
Since N has infinitely many descendants, one of N, N , ••• ,
2

1

N must also have infinitely many descendants. That is, a
k
good node N must have a good immediate successor.
Now proceed as follows.

The origin P of T is good.
0

It in

It has good immediate successors; choose one, P •
1

turn has good immediate successors; choose one, P
on.

2

And so

In this way we produce an infinite branch P , p ,
0

p ' ••••
2

Remarks on the use of K~nig's Lemma:

1

In the completeness

proof of Chapter Two #5, Tukey's Lemma was used.
Lemma is equivalent to the Axiom of Choice.

Tukey's

We do not use

407

PREFIXED TABLEAU SYSTEMS

it in the present section, rather, K6nig's Lemma takes its
place.

The proof of K6nig's Lemma does, however, use a

weak form of the Axiom of Choice: in the last paragraph of
the proof above we made countably many choices, each from a
finite set.

In fact, this weak form of the Axiom of Choice

is equivalent to K6nig's Lemma, and is strictly weaker than
the full Axiom of Choice.

It is important to remember,

though, that in this chapter our work is restricted to
countable languages.
All use of any non-constructive principle could be
entirely avoided if we could modify our systematic tableau
procedure so that it always terminated.
this point in #7.

We will return to

But such termination can not always be

managed once quantifiers are present, so we have taken no
pains about it now either.
#6

COMPLETENESS

We prove the completeness of all our prefixed tableau
systems, except for G and the closed regular logics.

It

will be obvious how to adapt the work of this section to
those systems though, so we omit the details, to keep the
clutter down.

The idea of the proof is simple and very

much in the tableau spirit:

if a systematic attempt at a

tableau proof does not produce one, it will produce
sufficient materials to construct a counter-model.

To

further keep the clutter down we only discuss the signed
version.

The unsigned argument is a trivial variant

though.

So, it is understood that for the rest of this

section L is any of our logics other than G or a regular
closed logic.

CHAPTER EIGHT

408

Definition:

Let S be a set of prefixed formulas.

If

a- v €. S for some -v -formula, we say the prefix <r is normal
in S.
Definition:

Let S be a set of prefixed formulas and L be

one of the modal logics we are considering in this section.
We say S is L-downward saturated if:
0)

for no atomic formula A and no prefix cr do we

have cr TA e: S and a-FA E S,
1) <r«ES -==9 CJO( e:s and CT 0( €" S,
1
2
2) a-,SES ~ a- 13 e: S or o-~2 e:S,
1

3a) o- V E S ~ a-' -v e: S for every cr' that occurs
0
in S and is L-accessible from cr,
3b) if L is one of D, DB, D4, CD, CDB or CD4,
c:r v e: S ~
from cr,

a-' v E S for some cr' that is L-accessible
0

4a) if Lis one of K, KB, K4, D, T, DB, B, D4, S4 or
S5, o-rr E. S ===;> cr' rr E S for some cr' that is
0
L-accessible from cr,
4b) if Lis one of C, CB, C4, CD, CT, CDB, CTB, CD4,
CS4 or CS5, cr normal in S and a- TT E S ~ c:r ' 1T E. S for
0
some a-' that is L-accessible from cr.
Remark:

This should be compared with the use of the term

downward saturated in Chapter Seven #8.

The two are

closely related.
Lemma 6.1:

If Sis L-downward saturated then Sis

L-satisfiable in a model whose possible worlds are simply
the prefixes occurring in members of S.

409

PREFIXED TABLEAU SYSTEMS

Proof:

Suppos·e S is L-downward saturated.

Construct a

model as follows.
Let G be the set of prefixes that occur in S.
For <r, o-'E.G, let crBa- 1 provided the prefix cr' is
L-accessible from cr.
If L is one of the regular, non-normal logics, C, CB,
C4, CD, CT, CDB, CTB, CD4, CS4, CS5, let Q be the set of
prefixes in G that are not normal in S.
This determines a frame <G,B>, or an augmented frame

<G,Q,B>, and it is easy to check that it is, in fact, an
L-frame.
Define an interpretation v as follows: for a- e.G and
atomic A,
v( cr ,A)

= l~FT

i f o-TA E. S

otherwise

This interpretation determines a unique relation

~.

covering all formulas, so that <G, B, If->, or <G, Q, B, 11-> as
appropriate, is an L-model.
Claim:

for every signed formula Z and every prefix a- ,

o-ze:s

~

a-11-Z.

This claim is established by an easy induction on the
degree of Z, which we leave to the reader.
Finally then, S is obviously L-satisfiable in the
L-model just constructed, under the L-interpretation I that
is simply the identity map on prefixes of S.
Completeness Theorem 6.2:

If X is L-valid, then X has a

proof in the prefixed L-tableau system.

410

CHAPTER EIGHT

Proof:

As usual we show the contrapositive.

not provable.

Suppose X is

Then a systematic attempt to prove X, as

described in #4, will fail.

Very well; carry out a

systematic tableau construction, starting with 1FX.

If the

procedure ever terminates, it must leave us with an open

e.

branch, choose one, say

Likewise if the procedure does

not terminate, then by Konig's Lemma 5.1 there still must
be an open branch, say

e again.

In either case, because

the systematic procedure ensures we "eventually do
everything," it is easy to check that the set of formulas
on branch 19 will be an L-downward saturated set.
Lemma 6.1, that set is L-satisfiable.

Then by

But 1FX is on

e,

hence there is a world in an L-model at which X is not
forced: X is not L-valid.
Corollary 6.3:

If X has an L-tableau proof, then X has a

systematic L-tableau proof.
#7

DECIDABILITY

In earlier chapters we showed certain modal logics were
decidable, but our techniques did not extend to all those
we considered.

We are now in a better position on this

issue since for many logics the systematic tableau
procedure described in #4 is actually a decision procedure,
while for the rest, it can be easily modified into one.
We begin with a decision method for all the logics
given in #2 whose accessibility relation does not involve
thetransitivity condition.

Modify the systematic tableau

PREFIXED TABLEAU SYSTEMS

procedure of #4 to prevent repetitions.

411

That is, if a

prefixed formula is supposed to be added to the end of a
branch, and an occurrence of it is already present, don't
add the extra occurrence.
~-rule

This means the systematic

should be modified so that, instead of continually

adding occurrences of cr- ~ to branch ends, we simply
remember that, whenever a new prefix cr- 1 , accessible from
~.is

introduced on a branch containing cr-v, we also add

~' v
to the branch end, but we don't add a fresh
0
occurrence of crv itself. With this trivial modification

we claim the systematic procedure, for logics not involving
transitivity, must eventually terminate.

When it does,

either we have a proof of the formula in question or else
by the work of #6 we have a (finite) counter-example.

In

either case, validity has been decided.
So we must prove termination of the systematic

procedure for these logics.

For convenience in wording, we

state the argument for the logic K.

Trivial modifications

adapt it to the various other non-transitive logics.
Suppose a systematic attempt at proving a formula X,
using prefixed K-tableau rules, goes on forever.

We derive

a contradiction.
By Konig's Lemma 5.1, we must be constructing an
infinite branch, say 19 •

There must be, on

many prefixed formulas, all different.

e , infinitely

For any given

prefix cr, if cr Z is on 9 , Z must be a signed sub formula
of X, and there are only a finite number of these.

Thus

e only finitely often. Hence
infinitely many different prefixes must occur on e, since
e is infinite, and contains no repetitions. We now have

each prefix can occur on

two possibilities.

412

CHAPTER EIGHT

Case 1)

e of

There are infinitely many prefixes on

the same length.

Let n be the smallest integer such that

infinitely many prefixes of length n occur on

e.

Now, it

is easy to see that the only prefix of length one occurring
on

e is the prefix 1 itself, and it occurs finitely often.

Hence n>1.

Further the only way a prefix of length n>1 can

e is by the rr -rule being applied to a

be introduced on

prefixed formula of the form cr rr where cr is of length
n-1.

And the rr -rule can be applied to such a prefixed

formula only once.

So if there are infinitely many

prefixed formulas of length n on
infinitely many formulas on
of length n-1.

e, there must be

e of the form cr 1r where rr is

This contradicts the choice of n.

Case 1

is impossible.
Case 2)

For each n there are only finitely many

e of length n. Since an infinite number of
prefixes occur on e, then infinitely many prefix lengths
prefixes on

e.

must be represented on
occurrences of a
formula.

and

~

Let us call the number of

in a formula the M-degree of that

Now, if rr,kZoccurson

added using the v

e itmusthavebeen

or rr -rule on some prefixed formula a- Z'

where Z' is of higher M-degree than Z, or else it must
follow by a sequence of <>< and (3 rule applications from
such a formula.

And

o<

and f3

rules do not increase

M-degree.

It follows that the maximum M-degree of all

formulas on

e with cr ,k prefix is lower than the maximum

M-degree of all formulas on

e with cr prefix.

prefixes get longer, M-degrees get smaller.
n, any prefixed formula on
must be of M-degree 0.

Briefly, as

Hence for some

e whose prefix is of length n

But v

and rr rules do not apply to

such prefixed formulas, hence no prefixes of length greater

PREFIXED TABLEAU SYSTEMS

than n can have been introduced on

e.

413

Thus case 2 is also

impossible.
This completes the proof that the systematic tableau
procedure for K provides us with a decision prodecure. As
we remarked earlier, similar arguments establish similar
results for all our logics that do not involve
We turn to those that do next.
Once logics involving transitivity are considered, a

transitivity.

systematic tableau construction may not terminate. We gave
a K4 example in #5. Nonetheless, it is still possible to
use a modified systematic procedure as a decision method.
Again, to keep things simple, we only discuss one logic,
K4.

Modifications to treat the rest are straightforward.

We continue, for the moment, to use systematic
tableaus as altered earlier: no repeat occurrences on a
Now, suppose we attempt such a systematic prefixed
tableau proof of some formula X, in K4. If we do not find

branch.

a proof, as noted above the attempt may run on forever.
Then by Konig's Lemma again, there will be an infinite
branch.

Consider one, say

e.

Exactly as for the logic K

we can argue that the branch must contain infinitely many
prefixes but only a finite number of any given length (that
is, the case 1 argument given above still applies). But
for K4, this does not lead to a contradiction, since the
case 2 argument breaks down.

We must proceed differently

now.
By a chain of prefixes we mean a sequence
1, o- , <r , ••• in which each is a simple extension of
2
1
the preceeding. It is clear that 9 must contain infinite
chains of prefixes. For a particular prefix cr, let us say

414

CHAPTER EIGHT

e -associated with <r is the set of all
Z such that cr Z occurs on e . Let S(X) be the collection

the set of formulas

of all signed subformulas of X.
Now, if cr Z occurs on

size n.

n
Thus there are at most 2

be a subset of S(X).
possibilities for sets
1, a- ,
1

e.

e, Z must belong to S(X).

e -associated with a given prefix <r must

That is, the set

prefixes on

S(X) is finite, say of

e -associated with the various

It follows that, for any chain of prefixes

a-, ... occurring on e' there must be two' cr. and
2

l

n

where i < j < 2 , such that both have the same set of
J
formulas e -associated with them. In an obvious sense,
CJ.,

will have
and cr
cr the chain is periodic: cr
j+k
i+k
j
the same e -assoc1ated sets.
Suppose, on e , for each chain 1, cr , o- , ••• we

after

0

1

2

discard everything except the initial segment up to where
it begins to be periodic.
have the same sets of

That is, i f cr

and cr

(i < j)

e -associated formuias, andj i and j

are the smallest numbers for which this is true, we retain
only 1, cr , cr , ••• , cr , ••• , o- and throw the rest away. If
j
i
2
1
we do this to each chain on e, then in what results, every
n
chain is finite, of maximum length 2 • It further follows
that the modified branch, let us call it 9 1 , is itself
finite.
Now the original infinite branch

e contained enough

information to construct a counter-model to X.
the proof of Completeness went in #6.

This is how

But the finite

branch 9' also guarantees us the existence of a
counter-model.

Very simply, by looking at

9' we can see

that our construction has become periodic, so if we have
not had closure yet, we never will get it by continuing

B', thus an infinite branch, and hence a counter-model

PREFIXED TABLEAU SYSTEMS

415

could be constructed.
The question is then, can we produce the finite branch

e' without first producing all of e' then throwing most
of it away?

The answer is yes; we can tell, in the course

of following our systematic procedure, when a branch has
become periodic because, for any given k, we can tell when
all formulas with a prefix of length k that could ever be
introduced on a branch already have been.
if k is 1.

This is trivial

And the only way a prefix with length k+1 can

be introduced onto a branch is by using the
formula with a prefix with length k.

TT -rule

on a

Once all such

formulas have been declared finished, no new length k+1
prefixes can occur.

And then, all possible formulas with

length k+1 prefixes come along using the v,

o<

and fJ

rules, and it will be obvious when all appropriate
applications of these have been made to give us length k+1
prefixes.
The upshot is, in following our systematic K4
procedure since, for any branch, we know when we have all
possible prefixed formulas of a given prefix length
present, we can tell that a branch will become periodic
without constructing all infinitely much of it.
So, modify the systematic K4 procedure as follows.
Declare all prefixed formulas of the form a- Z on a branch
finished on that branch if: 1) we know these are all the
formulas with that prefix we can get and 2) the set of
formulas associated with cr on the branch duplicates the
set associated with some proper initial segment of cr.
Then in the systematic K4 procedure, do not do anything on
a branch with a formula occurrenc~ that is finished on that
branch.

With this modification, the K4 procedure must

CHAPTER EIGHT

416

terminate, either in a closed tableau (hence X is provable)
or otherwise (hence X has a K4 counter-model).
The decision procedures described above are
essentially those presented in Hughes and Cresswell [1968].
Indeed, prefixed tableaus are essentially their tableaus,
with their various boxes collected together, but with
contents sorted out by the use of prefixes.
#8

LOGICAL CONSEQUENCE

The rules for introducing local and global assumptions into
prefixed tableau proofs are straightforward, but the
techniques used for proving completeness are amusing.
We add to the usual prefixed tableau rules the
following, in which S and U are sets of formulas.

In a

tableau argument:
1)

the members of S are used as global assumptions if

e for any Z E S and

a- Z can be added to a tableau branch

any prefix cr that has been used on
2)

e;

the members of U are used as local assumptions if

1Z can be added to a tableau branch

e for any Z E U.

Theorem 8.1: (stated for unsigned formulas only)

LetS and

U be sets of formulas and X be a single formula.

Also, let

L be one of the logics treated in #6.

Then there is a

closed prefixed L-tableau for 1--X using the members of S
as global and the members of U as local assumptions if and
only if S 1=
Proof:

L

U----? X.

The correctness half of the proof is a

PREFIXED TABLEAU SYSTEMS

417

straightforward adaptation of the work in #3.

We omit the

details and concentrate on the completeness half.
usual, we argue for the contrapositive.

As

That is, we

suppose there is no closed prefixed L-tableau for 1--X
using the members of S as global and the members of U as
local assumptions; we show S ~

L

u-x.

We modify the systematic tableau procedure of #4 to
incorporate the local and global assumption rules as
follows.

Suppose the members of S and U have been arranged

in sequence:
S:

A,A,A, •••
1

3

2

U: B,B,B, •••
1 2 3
Now, add to the description given in #4 the following.
Assumption step:

at the completion of stage n (as given in

114), for each open branch

e of the tableau thus far
e : cr A for each i < n and

constructed, add to the end of

i

for each prefix ~ that has been used on
That's it.

e, and also 1B •
n

Now, recall we were supposing there was no

closed L-tableau for 1--X using S as global and U as local
assumptions.

Run a systematic L-tableau for 1- X,

incorporating the assumption step above.

Of course it

never closes.

Then, just as in the proof of Theorem 6.2,

an open branch

e is produced that must be L-downward

saturated, since the systematic procedure was followed.
But the set of prefixed formulas on fJ must contain 1- X
since this is how we began our tableau, and further, it
must contain <r Z for every Z e S and every prefix

e , and also 1Z for every Z e:. U.

~

used on

This by the assumption

418

CHAPTER EIGHT

step added to the systematic tableau construction.
Lemma 6. 1 immediately says S ~
#9

L

Then

u ~x.

THE FUNDAMENTAL THEOREM

Modal operators bear certain obvious resemblances to
quantifiers, with prefixes playing a role analogous to
parameters.

Indeed, Smullyan [1973] is a simultaneous

abstract trteatment of both modal operators and quantifiers
based partly on this idea.

Now, in Smullyan [1968] was

proved what was called the Fundamental Theorem of
Quantification Theory, a Gentzen-Herbrand sort of result.
It separates the quantifier part of a first-order Classical
proof from the propositional part in a way that is
naturally suggested by tableau methods.

vfuat we show in

this section is that an analog of Smullyan's result can be
established for the normal modal logics we have been
considering, separating the modal part of a proof from the
Classical propositional part.

The result given in this

section first appeared in Fitting [1972].
We do not consider any of the regular, non-normal
logics here.

\'ie

also do not consider any of the logics K,

KB or K4 (nor G, for that matter).

InK models one can

have worlds with no others accessible to them, hence D has
some of the features of V if one allows empty domain
models, and this requires complications in the Fundamental
Theorem machinery.

However, a Fundamental Theorem for many

of the logics just mentioned has been established by Osamu
Sonobe (private communication, February 1982).
For this section, then, L is one of the logics D, T,
DB, B, D4, S4 or S5.

419

PREFIXED TABLEAU SYSTEMS

For this section, too, we generalize the notion of
formula somewhat by allowing truth-functional combinations
of prefixed formulas.
(tJX :::1 a-'Y),

Thus, for example, (a-XAcr'Y) and

and even (cr X-" (<r'Y ::~o-"Z)) will be treated

as (generalized) formulas in this section.

Correspondingly

we use both the "" and ~ rules as formulated in 112 and the
more conventional o<.. and fS rules from earlier chapters.
Thus from o- (X A Y) we can get cr X and a- Y by the o< -rule of
112, while from (crX-" cr'Y) we can get o-X and cr'Y by the

"usual"

o< -rule.

We also extend the notion of 11-, in

Kripke models, in the obvious way, to include generalized
formulas.

This gives us a corresponding generalization of

satisfiability.
We also choose to use unsigned formulas and tableaus
in this section.

This is merely a matter of taste, of

course.
Definition:

By an L-regular formula we mean any formula of

the form o--v ::::> cr' v 0 or o-rr::::» cr' rr0 where o-' is
L-accessible from cr.
Definition:

Let Z , Z , ••• , Z
1

L-regular formulas.
IT n :::> o-' TT •

2

n

be a finite sequence of

Suppose Z is o--v ::::» o-' -v or
i

0

We say the prefix cr' has been used before
0
that point in the sequence if either cr' occurs as a prefix
in one of Z z2' ••• ' z
or i f cr' is cr. We say cr' is
i-1'
1'
unrestricted at that point in the sequence if a-' is not an
initial segment of any prefix in z
1'
Definition:

z ' ... ' z
2

i-1

or of cr.

Let Z , Z , ••• , Z be a finite sequence of
1
2
n
L-regular formulas. We call it an L-regular sequence if it

CHAPTER EIGHT

420

meets the following conditions:

•
is of the form 1"V:::lCJV or 1 rr .::> o-rr.
o'
0
2) i f i > 1 and z is crv~cr'v or cr rr ::> o- ' rr
i
0
0
then CT occurs as a prefix in one of Z z2' ••• ' z
1'
i-1
3) i f z is crv ::> cr' v then either a-' has been
i
0
used before this point in the sequence, or else c:r' is
1)

z

1

unrestricted at this point in the sequence and is a simple
extension of cr ;
4) if Z is r:r rr ::> o- 1 TT then cr' is unrestricted at
i
0
this point in the sequence and is a simple extension of a-.
Example:

The following is a B-regular sequence.

For

reading ease we have written successive B-regular formulas
on successive lines.
1-<>B~1-B

1 <>oA,:,1,1 ClA
1 <> P (A:::> B) :::> 1 , 2 D (A ::l B)

1,1oA::::>1A
1, 2 o (A:::::> B) ::l 1 (A a B)

Definition:

If R is an L-regular sequence and X is a

formula, we say R~1X is a generalized tautology if there
is a closed tableau beginning with the terms of R and 1-X,
that does not use the v

and rr rules.

The Fundamental Theorem 9.1:
standard sense.

Let X be a formula in the

X is L-valid if and only if there is an

L-regular sequence R such that R ~ 1X is a generalized
tautology.
Example:

Let R be the B-regular sequence of the previous

421

PREFIXED TABLEAU SYSTEMS

R ::> 1 { [ <> o A /\ <> o( A ::>B) J ::> <>B} is a generalized

example.

<> D (A :::J B) J :::> ~ B is B-valid.

tautology, and indeed [ <> o A A

The rest of the section is devoted to a proof of this
result.
Lemma 9.2:

Let S be an L-satisfiable set of generalized

formulas.

Suppose cr rr :::> cr-' TT

0

is L-regular, cr- occurs in

S, cr' is a simple extension of cr , and cr' is not an
initial segment of any prefix in S u { cr- rr}. Then
S u{c:rTT :::> cr' rr } is again L-satisfiable.
0

Proof:

The argument is much like that of Lemma 3.1, by

design.

We sketch it.

S is L-satisfiable, say under the L-interpretation I
in the L-model <G, B, 11->.
defined.

Since cr occurs in S, I( <r) is

We have two cases.

First, suppose I( cr- ) .JI'- rr •

I( cr' )

is undefined;

choose some world in G in the relation B to I(cr-), say r,
and set I( o- ' ) = r . (For the logics we are considering
This is a trouble spot in

there always is such a world.

trying to extend things to K, KB or K4.)

The extended I is

still an L-interpretation and trivially, under it,
cr 1T :::J <:r' 11

0

comes out true in <G, B, 11->.

Next, suppose I(cr) 11- TT.
r E G such that I( a- ) li r and

Then there is some world
r 11-

Ti

0

•

Set I( cr ' ) = r •

Again the extended I is an L-interpretation and under it
cr rr :::> a- 1 rr

comes out true.

Lemma 9.3:

Let S be an L-satisfiable set of generalized

formulas.

Suppose o- v ::> cr' v

0

0

is L-regular, cr occurs in

CHAPTER EIGHT

422

S, and either cr 1 occurs in S u {cr v} or else cr 1 is not an
initial segment of any prefix in S u {a- v}.

v } is again L-satisfiable.

S u { cr v

:> cr 1

Proof:

Similar to the preceeding.

Lemma 9.4:

Then

0

Suppose the formula X is satisfiable in some
If R is any L-regular sequence, then the set

L-model.

consisting of 1X, and the terms of R, is also
L-satisfiable.
Proof:

By induction on the number of terms of R, using

Lemmas 9.2 and 9.3.
Proposition 9.5 :

Let R be an L-regular sequence.

If

R ~1X is a generalized tautology then X is L-valid.
Proof :

If X were not L-valid,

~x

would be L-satisfiable.

Then by Lemma 9.4 the set consisting of 1-X together with
the terms of R would beL-satisfiable.

But if R~1X is a

generalized tautology, there is a closed (propositional)
tableau beginning with the members of this set.

And this

is easily seen to be a contradiction.
This, of course, is half the Fundamental Theorem.

The

other half is somewhat simpler, given tableau completeness.
Proposition 9.6:

If X is L-valid then there is an

L-regular sequence R such that R ~1X is a generalized
tautology.

423

PREFIXED TABLEAU SYSTEMS

We first make a change in the -v and rr rules for
prefixed tableaus. For the time being we will require an
Proof:

unrestricted prefix to be unrestricted not just on the
particular branch in question, but unrestricted on every
branch of the tableau.

Clearly this more stringent

requirement makes no change in the set of provable formulas
of L.
Now suppose X is L-valid.

Construct a closed prefixed

tableau for 1-X, using the stringent version of
unrestricted prefix just described. At the same time,
construct a sequence R as follows.
Suppose we have completed the nth stage in the tableau
construction, and the corresponding stage in the
construction of R.

If the n+1st tableau step is to add

to a branch containing cr v, using the v -rule of L,
also add the L-regular formula cr -v ::::> cr 1 v to the end of
cr 1 v

0

0

Similarly if the n+1st tableau step is to add cr 1 rr to
0
a branch containing cr 1T, using the rr -rule of L, also add
R.

the L-regular formula cr rr ":) cr 1 rr

0

to the end of R.

For

any other tableau rule application, leave R alone.
Clearly the sequence R that has been constructed by
the time a closed tableau for 1-X is reached is an
L-regular sequence. And it is easy to see that we can
produce a closed propositional tableau showing R :::>1X is a
generalized tautology, from the original closed tableau for
1- X.

This concludes the proof.

The B-regular sequence used as an example in this
section was created using the method described in the proof
Remark:

above, starting with the (unsigned version of the)
B-tableau example given in #2.

424

#10

CHAPTER EIGHT

QUANTIFIERS-CONSTANT DOMAINS

Let us extend our language to first order, as in Chapter
Seven #2.

Thus we have quantifiers, variables, constant

symbols and parameters.

For this and the next several

sections, L(C ) is a formal first order modal language, and
0

L( C u P ) is the extension of it by adding a set of
0
0
parameters P • It is understood, again, that all languages
0

are countable.
We use the ls' ,

~

notation from Chapter Seven 115.

Now, the most straightforward thing to do is, simply, add
to the propositional prefixed tableau rules of #2 the
following quantifier rules, where

cr

is any prefix.

'g' -rule:

o- 't(c)

for any constant c ~ C up
0
0

6 -rule:
<JS
CT S (c)

for any new parameter c E P

0

where, as usual, new means new to the branch.
Adding these rules to the propositional rules for L
from #2 gives us a complete and correct proof procedure for
the constant domain first-order version of L (see Chapter
Seven 1115 ) •
Example:

The following is a proof, in the system for K, of

the Barcan formula in the form: <>(3 x)A(x):::> (3 x) <>A(x).

425

PREFIXED TABLEAU SYSTEMS

1F[¢(3 x)A(x)::>(3 x) <)A(x)]

( 1)

1T <>( 3 x)A(x)

(2)

1F( .3 x) <>A( x)

(3)

1, 1T( 3 x)A(x)

(4)

1,1TA(c)

(5)

1F<>A(c)

(6)

1,1FA(c)

(7)

closure
Explanation:
(2) by

rr.

( 2) and ( 3) are from ( 1) by o< •
(5) is from (4) by li.

( 4)

is from

(6) is from (3) by

IS.

(7) is from (6) by v.
This proof does not work in any of the C-based logics
because, when the IT-rule is used to add line (4), the
prefix 1 is not normal on the branch.

The reader may

easily produce a variation that does work, however.
#11

CORRECTNESS AND COMPLETENESS

The reader has seen enough of this sort of thing by now for
us to give merely a sketch of how things are proved, and
leave out most of the detail work.
Correctness of the constant domain systems of #10 is
established by a simple combination of the techniques used
in #3 to deal with prefixes, and the techniques used in
Chapter Seven #7 to deal with constants and parameters.
That is, one introduces the notion of an interpretation I
of both constant symbols and prefixes.

I maps constant

symbols to the constants of some model, and prefixes to
possible worlds; and I meets appropriate conditions for

426

CHAPTER EIGHT

both kinds of objects.

We leave the exact formulation to

the reader.

One defines a tableau branch to be
L-satisfiable if there is some such L-interpretation I into

an L-model under which all the formulas on the branch come
out true.

Then one shows the usual

Key Lemma:

If a tableau T has an L-satisfiable branch, and

an L-tableau rule is applied, the resulting tableau still
has an L-satisfiable branch.
Since a closed tableau can not have an L-satisfiable
branch, correctness follows in the familiar way.
To establish completeness we first extend our
systematic procedure from #4 to encompass quantifiers.
This simply means adding two more cases to the list of what
to do in Stage n+1.

Again, the particular procedure is

based on the one in Smullyan [1968] for Classical logic.
In order to carry it out, we must assume that, ahead of
time, the set C v P of constants and parameters has been
0
0
arranged into a fixed countable sequence: c , c ' c ' •••
1
2
3
(Recall, we restricted ourselves to countable languages in
this chapter.) Now, the additions to the systematic
procedure of #4 are these.
Case 5)

If cr Z is of the form cr 'It then add to the end of

e each of cr '( ( c ) , <r If ( c ) , ••• , cr ~ ( c ) , followed by a
1

fresh occurrence of crt.
Case 6)

2

n

I f a- Z is of the form <r S then add to the end of

e the formula cr b (c) where c is the first parameter in
the list c , c , ••• that has not yet been used on the
1
2
branch B.

427

PREFIXED TABLEAU SYSTEMS

This completes the description of the systematic
procedure with quantifiers involved.

Note that Case 5

(generally) will force things to go on forever, if closure
does not occur.
Now the notion of an L-downward saturated set, from
#6, can be extended to encompass quantifiers very simply.
Add to the definition given there the two additional
clauses
5) <J 'If E. S ====}
6)

(f"

~

ES ~

<r ~ (c) E S for

every c e: C up
0

cro(c)ES for some ce:P.

0

0

We leave to the reader a proof of the obvious
generalization of Lemma 6.1,
Lemma:

If S is an L-downward saturated set (including the

two conditions above) then S is L-satisfiable in some
first-order constant domain L-model.
From this, completeness follows easily.

If X has no

first-order L-tableau proof, then a systematic tableau for
1FX will produce an open branch (Konig's Lemma comes in
here, see #5).

By the systematic construction, the set of

prefixed formulas on such an open branch will constitute an
L-downward saturated set. One of them is 1FX. Hence, by
the Lemma, there is an interpretation in some constant
domain L-model under which 1FX is satisfied.

Hence X is

not valid in all constant domain L-models.
Thus we have completeness, established in the usual
contrapositive form.

428

#12

CHAPTER EIGHT

CONSTANT DOMAIN LOGICS AXIOMATICALLY

We follow up on the promise of Chapter Seven #15 and sketch
a proof that the Barcan formula is what makes for constant
domain models.

More precisely we show that, on adding the

Barcan formula as another axiom schema to the axiom system
for K given in Chapter Seven #10, we get a system that is
correct and complete for constant domain first-order
K-models.

other logics are handled similarly so K will

serve as a representative example.

What we actually show

is how to translate a tableau proof in the prefixed K
system of #10 into an axiomatic proof. Since the tableau
system is known to be complete, axiomatic completeness
follows.
For this section, BAR is the axiom schema
<>(3 x)lf(x):::>(3 x)<> \f(x) or equivalently,
(\lx)o lf(x);:, O('d x)'f(x) where 'f(x) is any formula with
only x free.
We use the first-order axiom system for K given in
Chapter Seven #10.

We consider the system K+BAR.

Note

that in Chapter Seven #10 we gave a proof, in the K system
alone, of the converse of the Barcan formula.
Now it is easy to check that every (closed) instance
of schema BAR is valid under every interpretation in every
constant domain K model.

Since this is certainly the case

for the K axioms themselves, and the rules of inference
preserve validity, it follows that every line of an
axiomatic proof in K+BAR must be valid in all constant

PREFIXED TABLEAU SYSTEMS

429

domain K models, including the last line, of course.

Thus

we have correctness.
Completeness is much more work.

Rather than a

detailed proof we merely sketch a translation procedure
from prefixed tableau proofs to K+BAR axiomatic proofs, and
leave out the necessary checking that the translation in
fact works.

The idea is a simple one, though:

moving from

a prefix cr to a prefix <:r ,n is moving to a world possible
relative to a-, and so we introduce another "level" of
possibility into things.
More specifically, we associate with each first-order
K tableau, as given in #10, a certain associated
(unprefixed) sentence.

This is done by first associating a

sentence with each branch of the tableau, then forming the
disjunction of these sentences.

We thus must describe how

to associate a sentence with a tableau branch.
So, let

e be a branch of a K-tableau which attempts

to prove Z, and which thus begins with 1-Z.

We go through

several steps to produce an associated sentence.

We assume

the tableau uses unsigned formulas.
First we group together all sentences having the same
prefix on

e.

That is, for a given prefix cr occurring on

e , let X , X , ••• , X be all the sentences such that cr X
1
2
n
i
appears on e , and form the prefixed sentence
cr (X A X " ••• " X ) • Of course, with parentheses
1
2
n
placed in some suitable manner. Let S be the set of all
prefixed sentences thus produced.

Then in S each prefix

occurs at most once.
Next, choose a prefixed sentence in S whose prefix is
of maximal length.

If this length is not 1, we must have

430

CHAPTER EIGHT

cr,nX where there is a prefixed sentence rrY also in S.
Then: delete a-,nX from S, and replace crY by cr(YA<>X).
Keep repeating this step until the only prefixed sentence
in S has a prefix of length 1 (hence the only prefix is 1
itself).
Thus we have reduced S to a single prefixed sentence,
say 1X(c , ••• ,c) where c , ••• ,c are all the constants and
1
n
1
n
parameters that did not occur in the beginning sentence

-z.

Choose n distinct variables x , ••• ,x , otherwise
1
n
unused, and form the sentence ( 3 x ) ••• ( 3 x )X(x , ••• ,x ) •
1
n
1
n
This is the sentence associated with the branch 9.
Note: actually there are several sentences associated
with

e, since at several places we had options available

to us; order of formulas in a conjunction, choice of
variables, etc.

We could make this deterministic, of

course, but it is not really necessary since all sentence~
associated with a given branch e will be provably
equivalent in K+BAR (indeed, in first-order U).

We

continue to speak about "the" associated sentence for
simplicity.
Finally suppose a tableau T contains branches

e,
1

e , ... , e .

If X, X, ••• , X are the sentences
2
k
1
2
k
associated with these branches, then (X v X v ••• v X ) is
1

2

k

the sentence associated with T itself (again with suitable
parentheses).
For instance, consider the (one-branch) tableau in the
K-system, given as an example in #10.

Its associated

sentence (suitably converting to an unsigned tableau first,
of course) is

431

PREFIXED TABLEAU SYSTEMS

(3 y) ( {~ [ 'V (3 x)A(x) :J ( 3 x) <)A(x)] .1\
¢(3 x)A(x) A
"' ( 3 x) <)A(x) .1\
~ <>A(y)}

/\

<){(3 x)A(x)/\A(y)A~A(y)})
Now, the chief items needed are these.
Item 1)

A tableau proof of Z begins with the

one-branch, one-item tableau
1-Z.

Its associated sentence is simply ~z.
Item 2)

If T is a closed tableau and X is the

associated sentence, then --xis provable in K+BAR (indeed,
~x

will be provable inK itself).
Item 3)

sentence X •
1

Suppose T

1

is a tableau with associated

Suppose tableau T

2

results from the

application of a single tableau rule to T , and let X be
the sentence associated with T •
2

in K+BAR.

2

1

Then X :J X is provable
1

2

From these three items it is easy to see how to
convert a tableau proof into an axiomatic proof, and hence
axiomatic completeness follows from tableau completeness.
The details are long and tedious and are omitted.

But we
In

do indicate briefly where the Barcan formula comes in.

fact, it is used in verifying item 3 when the S -rule was
used as the tableau step.
Suppose, for instance, that T

was turned into T

2

by

e which already contained
Say the associated sentence to e before this

adding cr A( c) to branch

o- ( 3 x) A( x).

1

step was (schematically)

CHAPTER EIGHT

432

(3 Y ),,,(3 y )[.,,A¢(.,, A(3 X)A(X)A .,,)A ••• ]

1

k

Let z be a hitherto unused variable. The sentence above
axiomatically implies (indeed is equivalent to)
(3y ) ••• (3y )[ ••• A~( •• ,A(3x)A(X)

1
k
/\ ( .3 z) A( z) A • • • ) A

••• ]

Using standard Classical manipulations the (3 z) quantifier
can be "moved outside" as far as the

<> thus:

(3 Y ) ••• (3y )[ ••• A¢(3 z)( ••• A(3x)A(x)

1

A A( z) A

k

... ) A

••• ]

Next, using the Barcan formula, this implies
( 3 Y1) ••• ( 3 Yk )[ ••• 1\ ( :a z) <> ( ••• A ( 3 X) A (X)
A A( z) A

... ) A

... ] •

We continue in this way through a chain of implications
until (3 z) is moved all the way outside.
(3 Y1 ) ••• (3 yk)(3 z)[ •••
A A( z) 1\ . . . ) A

"<> ( ••• A( .3 x)A(x)

... ] •

And this is a sentence associated with branch

e after the

S -rule application in question has been made.

This should be enough to give the general idea.

In

the next section we present prefixed tableau systems not
corresponding to constant domain models. We note that a
similar translation procedure is possible from tableau
proofs to axiomatic proofs (not using the Barcan formula of
course).

The only change is that the existential

quantifiers corresponding to cS -rule applications can't
always be "pushed outside". Rather they "pile up" at ¢
occurrences, since the Barcan formula is not available.
But this is as it ought to be.

Those

<> occurrences

represent moves to alternate worlds and, if the models
involved are not constant domain, moves to alternate worlds

PREFIXED TABLEAU SYSTEMS

433

can enlarge domains; new things can exist, and this is what
these existential quantifiers represent.
#13

QUANTIFIERS-VARYING DOMAINS

The reason the simple quantifier rules.of #10 gave us
systems appropriate for constant domain models is quite
straightforward.

The same parameters could be used with

all prefixes.

There was no connection between parameter

and prefix.

Imposing conditions relating them will allow

us to get proof procedures for other than constant domain
logics.
Let us divide the (countable) collection of parameters
P into countably many disjoint countable classes. And
0
let us associate one such class with each of our (countably
many) prefixes.

Thus, each prefix ~ has an associated,

countable set of parameters, and distinct prefixes have
disjoint associated parameter sets.

To indicate that a

parameter is associated with a prefix a- we will designate
it by c~ •

Further, to make things somewhat simpler, let

us suppose we have no constant symbols to deal with, other
than parameters.
Now, instead of the quantifier rules of #10, let us
add the following more complex rules.

We assume the

propositional rules are those for the logic L as given in
112.

~-rule:

a- /Hccr,)

434

CHAPTER EIGHT

where co-,

is any parameter associated with cr' and cr' is
a prefix that 1) has been used on the branch and 2) is such

that cr is accessible from cr' •

o -rule:
cr S (c
where cs

d

is a new parameter associated with

o-

(has not

been used on the branch yet).
The addition of these quantifier rules gives us
complete and correct proof procedures appropriate to those
first-order L-models meeting the monotonicity condition:

r R ~ ===9 P( r) <;;JP>( .c.)
Example:

[see Chapter Seven #3].

The following is a C-tableau proof, using these

quantifier rules, of the converse Barcan formula
D('V x)A(x) :::J (v x) 0 A(x).
1FO(V x)A(x):J (V x)DA(x)

( 1)

1T Cl ( v x)A(x)

(2)

1F(~Vx)DA(x)

(3)

1F OA(c )
1
1,1FA(c )
1
1, 1T( v x)A(x)

(4)

1,1TA(c)
1
closure
Explanation:
(3) by S •

(5)
(6)
(7)

(2) and (3) are from ( 1) by

o<..
(4) is from
(5) is from (4) by 1T (note that the prefix 1

435

PREFIXED TABLEAU SYSTEMS

is normal at this point because of line (2)).
(2) by v. (7) is from (6) by 't.

(6) is from

We note that there are various other alternatives one
might want to consider. One could, for example, change the
'6 -rule to
'l) -rule:

cr~(ca-)

where ca- is any parameter associated with cr.
This would block the proof presented in the previous
example. In fact, the resulting tableau systems correspond
to Kripke models in which a monotonicity condition is not
required, but in which each world r has a non-empty set
P ( r ) of constants associated with it.
Finally one might further modify the

~ -rule

to

(( -rule:

where co- is any parameter associated with cr, and cr is
S -normal on the branch, where by S -normal, we mean some
prefixed formula of the form

<r S

occurs on the branch.

The model theory corresponding to these tableaus is
that of Kripke models in which a monotonicity condition is
not required, and in which empty domains are allowed, that

436

CHAPTER EIGHT

r, we could have P(r) empty.
We omit entirely all proofs of completeness and

is, for a world

correctness for any of these systems.

As we have said

enough times, enough is enough.
#14

CONCLUDING REMARKS

Because of the variety possible, we simply outline
additional results attainable rather than present them in
detail.
In #9 we gave what we called The Fundamental Theorem,
separating the modal from the propositional part of a
proof.

This was based on a corresponding result in

Smullyan [1968] separating the quantificational part of a
Classical first-order proof from its propositional part.
It is obvious that the two results can be combined for
first-order modal proofs.

That is, one can separate the

modal-and-quantif ier part of an argument from the
propositional part.
In earlier chapters we considered natural deduction
systems.

Well, prefixed natural deduction systems can be

developed.

Similarly, axiom systems involving prefixes are

possible.

(See Fitting [1972A] for a related approach,

using a different notion of prefix).

As we said, these are

all possible, though we can think of no good reason for
developing them in detail.

Perhaps others can.

CHAPTER NINE
INTUITIONISTIC LOGIC

#1

INTRODUCTION

Strictly speaking, Intuitionistic logic is not a modal
logic.

There are, after all, no modal operators in the

language.

It is a subsystem of Classical logic, not an

extension of it.

But GBdel [1933] recognized that

Intuitionistic logic could be interpreted naturally into
one of the standard modal logics, S4.

And so Kripke was

led to create a model theory for Intuitionistic logic which
is very similar to his S4 models, see Kripke [1965A].
(Also see Dummett [1977] pg 214.)

Tableau techniques

having similarities to those of S4 can be developed.
Consequently we have included a treatment of Intuitionistic
logic in a book that is largely about modal logics.
Intuitionistic logic, first formulated in Heyting
[1930] and also known as Heyting's Predicate Calculus, was
intended to capture the formal aspects of the logic of an
Intuitionistic mathematician.

This is not the place to

discuss Intuitionistic mathematics.

For this, see Heyting

[1956], Kleene and Vesley [1965] and Dummett [1977].

It

must suffice here to say that for an Intuitionist, true
means proved, and exists means has been constructed.

On

the basis of the first, one would not expect xv --X to be
logically valid for an Intuitionist.

Essentially it reads,

either X is proved or else it is proved that X leads to
contradictions.

Since there are, at the moment, unsettled

mathematical questions, X v ~x can not be correct for every
437

438

CHAPTER NINE

choice of X.

Similarly the way Intuitionists use the term

exists rules out the validity, for them, of
~C"fx)~A(x)::J(3

x)A(x).

The model theory we will use in this chapter is from
Kripke [1965A], and reflects the basic Intuitionistic ideas
fairly well. But it does so from a Classical point of view.
No attempt is made to confine ourselves to Intuitionistic
methods in working with these models.

It is as if a

Classically oriented mathematician had developed a model,
not of fluid flow, or the hydrogen atom, but of
Intuitionistic truth.

The model is not the reality, but it

makes the reality intelligible to the Classical
mathematician.

In fact, the modelling involved has been

extended to encompass portions of Intuitionistic
mathematics beyond just logic, and has proved useful for
certain meta-mathematical investigations of Intuitistionic
mathematics.

For example, see Smorynski [1973, 1977,

1978].
There have been attempts at producing a version of
Kripke's model thoery in which only methods acceptable to
an Intuitionistic mathematician are used.
[1976], De Swart [1976,1977].

See Veldman

These are very interesting,

but it is a line of work we do not attempt to follow here.
There have been several other successful Classical
attempts at creating models of Intuitionistic logic.

Beth

[1956,1959] is similar, in certain respects, to Kripke's
approach, but has notable differences.

There have also

been topological models and algebraic models.

See Rasiowa

and Sikorski [1968] and Rasiowa [1974] for a unified
treatment of these.

And in the propositional case, at

least, it is possible to go between the various model

INTUITIONISTIC LOGIC

439

theories by "natural" means. See Fitting [1969] for
example. Once quantifiers are added however, this writer
at least knows of no direct translation between the
algebraic kinds of models and Kripke's. Connections are
there, of course, since they both model the same logic, but
transitions between the various kinds of models are not
simple.
We have, then, many mathematically quite different
attempts at modelling Intuitionistic logic. Under the
right "magnifying glass" they do, in fact, "look
different." Nadel [1978] shows that different results are
obtained, using the various model theories, once infinitely
long formulas are admitted. In the finitary case, however,
Kripke's, Beth's, topological and algebraic models all are
essentially equivalent.
In this book we only consider Kripke's model theory
for Intuitionistic logic. We continue to use the methods
of earlier chapters, and no attempt will be made to be
constructive in our proofs. We are Classical
mathematicians here, carrying out a formal investigation.
#2

PROPOSITIONAL INTUITIONISTIC MODELS

We use the language described in Chapter One #1 but without
modal symbols. That is, the formal language is the same as
that of Classical logic.
Propositional Intuitionistic models are built on a
frame having the same features as an S4 frame.
Definition: <G,R> is an Intuitionistic frame if G is a

440

CHAPTER NINE

non-empty set and R is a reflexive, transitive relation on

G.
Finally, once the forcing relation

is specified we

1~

have our models.

<G,R, If-> is a (propositional) Intuitionistic
model if <G,R> is an Intuitionistic frame and, for each
Definition:

G:
r I- A, rRA

1)

A atomic,

2)

r

3)

r II- (X" Y) ~ r It- X and r o- y
r II- (X v Y) ~ r 11- X or r 11- Y

4)
5)
6)

Remarks:

II- T

and

~~~~A

r .11'- J.

r It-- X~("' A)[ r lli! ~ ==;>AJI'- X]
r It- (X ::::> Y) ~ ( "' .t::. )[ r li 4 ~ ( .6. .11"- X or .6. It- Y)]
One might think of r t:: G as being a state of

knowledge, and

r R A as saying:

given knowledge

a possible future state of knowledge
out, given what we know at r ) .

(A

r, A

is

can not be ruled

Then Condition 6 says:

to

know X:::>Y given information r, it must be the case that,
whenever we get sufficient additional information to enable
us to know X, we will also be able to conclude that Y is
the case.

Condition 5 has a similar reading.

It is
understood that these readings are heuristic, and are not
meant to "explain" Intuitionism.
We will continue the convention that
arbitrary world in the relation R to

r.

r * denotes an
Thus conditions

5) and 6) could be written as
5')

r It- ~x~< 'Vr*)(r*...lf- X)

6I )

r It- (X:::> y) <:==9 ( 'V r *) ( r *.II' X or

r

* II- y) •

441

INTUITIONISTIC LOGIC

Unlike in Classical logic, all of

A,

v, ..v and :::> are

independent connectives in Intuitionistic logic.

(See #3.)

But by virtue of condition 2, we do have

r 11- ~ x <F9 r u- <x ::l J. ) •
Some formal treatments of Intuitionistic logic make much
use of this (see Prawitz [1965] for example). We do not.
Condition 1) is only stated for atomic formulas, but
it can be generalized.
If <G, R, 11-> is an Intui tionistic model and

Lemma 2. 1:

r E G then r 11- X ===> r * Jr X for all formulas X.

Proof:

By an induction on the degree of X, using the

reflexivity and transitivity of the R-relation for
Intuitionistic models. We leave the details to the reader.
Next we note that, just as for modal models, an
Intuitionistic model is completely determined by the frame
<G,R> and by the behavior of lr on propositional variables.
This too is by an easy induction on formula degree, which
We use the result quite a bit, however.

we omit.

Definition:

A formula X is valid in an Intuitionistic

model <G, R, jj-> i f

r Jr X for all r E. G.

X is

Intuitionistically valid if X is valid in all
Intuitionistic models.
Lemma 2.2:

If X is Intuitionistically valid, then X is a

Classical tautology.
Proof:

We show the contrapositive.

Suppose X is not a

44 2

CHAPTER NINE

Classical tautology.

Then, using the usual Classical
truth-table rules, some assignment v of T's and F's to the

propositional variables of X causes X itself to evaluate to
F.

Now create a one-world Intuitionistic model as follows.

G:{ r } .

r Rr

For propositional variables A, set

r I~ A iff v(A)=T.

This completely specifies an

Intuitionistic model <G,R, ~> and it is easy to check that,
for any formula Z, r If- Z iff Z evaluates to T under the
truth-value assignment v.

Hence

r ~X, so X is not

Intuitionistically valid.
The converse is, of course, not true, or the logic
would be of no interest.

We conclude with two examples

showing Classical tautologies that are not
Intuitionistically valid.
Example..l_:

Let G={r,A} and rR.6.,

propositional variables, let

.6. If-

A.

rRr, ABA.

On

Schematically

r

l

1::. If- A.

The reader may check that in the Intuitionistic model
<G, R, If-> thus determined,
Example ~:

r )1'- (A v ~A) •

This time let G={ r, A, .n.}.

LetR be reflexive

r R,::,. and r Rn •

On propositional

on G and, in addition,

443

INTUITIONISTIC LOGIC

variables, let Air A and ~lr B (A and B distinct, of
course).

Again, schematically

r

£:::.

/\
lr A

f)_ II- B

The reader can verify that in the resulting Intuitionistic
model <!li,R, lr>. r lr"""' ~(Av B) but r ~--A and

r ,If'- --B.
Remarks:

Hence r ,11<- [-.....,(AvE)::> (--Av --B)].

A few observations that may make the creation of

such models somewhat easier.
is an "end point" of an Intuitionistic
model, that is, if L:>.R i1. ==} D.= .D.., then if A )1'- A we must
have D. If- ~A. Because, if c:, ¥ -A, there woud be some
l)

t::;,*

If

D.

such that .A* If- A.

an "end-point".

But this would say .A 11- A, if A

is

Indeed, more generally, the behavior of If-

at "end-points" degenerates to Classical Boolean
Truth-value behavior.
2)

For any world r, to say

r n- --X is to say:

for every r * there is a r ** such that r ** 11- X.
Every extension of r has an extension forcing X.

Loosely:
Thus in

example 2, if r lr ~ . . . . A then the extension J1. would have
an extension forcing A. But the only extension of 1L is
itself and it does not force A.

Thus in example 2,

The reader probably will uncover more such

CHAPTER NINE

444

"short-cuts" in model-checking.

We have found thse two

particularly useful.
#3

INDEPENDENCE OF THE INTUITIONISTIC CONNECTIVES

We remarked in #2 that the connectives 1\, v, - and
are independent in Intuitionistic logic, unlike the
situation in Classical logic.

:::l

It is a simple, but

instructive exercise in the use of Kripke models to
establish this.
I.

We do so below.

Independence of v.
Consider the three-world Kripke model <G, R, 11-> where

G = { r , A, n}.

Let R be specified by

r

/~ n
More precisely,
too.

rR.c.,

ran., and of courseR is reflexive

We often use such schematic shorthand.

Further,

suppose 11- is defined so that <G, R, II-> is an Intui tionistic
model; the details won't concern us until later.
For the time being, and with nothing perjorative
intended, let us call a formula X bad if, in the model
<G, R, If->, X is forced by exactly the two worlds

.n..
Lemma 3.1:
1)

If X :::lY is bad, so is Y.

2)

-X is never bad.

A

and

445

INTUITIONISTIC LOGIC

I f XAY is bad, so is one of X or Y.

3)

Proof:

t::. 11- X ::J Y and Jl 11- X;:) Y but

r * are:

possibilities for
then

IJ. 11-

IJ.

The

r * ~ Y.

r , A and .fl. •

But .t::. 11- X;:) Y, hence

X.

Since r J11- X::::> Y

r .If- X;:) Y.

r * 11- X but

then for some r * we have

If

r* = A ,

If- Y, which would

= r *.II' Y.

Thus

r *;I!

contradict the fact that

A

Similarly r *;I! IL.

r * = r , and so r 11- X.

Lemma 2. 1,
.!llf-Y.

A

Thus

11- X and .n. 11- X.

r = r*JI'-Y.

Also

Then

Suppose X =>Y is bad.

We only show part 1.

A •

Then by

It follows that IJ. If- Y and

HenceYisbad.

To be fair, let us call a formula X good if it is not
bad.
Corollary 3. 2:

If X and Y are good, so are X::::> Y, -X and

X A y.

Now, suppose v could be characterized in terms of the
and

connectives A , -

?

.

That is, suppose we had a

schema, 'f(x,y), built up from "formula variables" x and y,
using A , -

and

?

,

but not using v , so that for any

formulas X and Y, the formulas (X vy) and

'f(X, Y) always

behaved alike in Intuitionistic models.

(That is, they are

forced by exactly the same worlds.)

We show this leads to

a contradiction.
We have not yet given any details about the relation
It- in the model <G, R, 11->

discussed above.

The Lemma and

its Corollary do not need such information for their
Now we say just what the relation It- is to be.
Choose two propositional variables P and Q. Set 1:::.11- P and

proofs.

446

CHAPTER NINE

1l lr Q, and otherwise. on propositional variables, the
relation lr never holds.

This, as usual, determines the

Intui tionistic model <G, R, lr>

completely.

Now, in <G,R, 11->, P is good since .n .11'- P.
is good.

It follows by Corollary 3.2 that

also be good.

Likewise Q

~(P,Q)

must

On the other hand, it is easy to see that

t::.. 11- P v Q and .n. lr P v Q but r Jf- P v Q, hence P v Q is bad.
It follows that P v Q and

\f'( P, Q) do not "behave alike" in

the model <G, R, lr>.
Hence no characterization of v in terms of
::::>

A, ~

and

is posible.
We have presented one independence proof in detail; we

sketch the rest.
II.

Independence of I\ •
Consider the three-world model <G, R, 11-> where

G = { r, t::. ,.!2} and R is specified by

r

j
..fL

This time, call a formula X bad if X is forced by
exactly 11.

We leave it to the reader to show

Lemma 3.3:
1)

If X::::>Y is bad, so is Y.

2)

-X is never bad.

3)

If X vy is bad, so is one of X or Y.

447

INTUITIONISTIC LOGIC

Then if we define good to mean not bad, we have
Corollary 3.4:

If X andY are good, so are X:JY,

and

~x

X vY.

Now, let P and Q be propositional variables, and
require that r It- P, fl.. lr P,

A

11- Q, .fl. It- Q, . and otherwise

This

lr does not hold on propositional variables.
determines completely the model <G,R, 11->.

And it is easy
By the

to see that P and Q are good while P" Q is bad.

corollary, any formula built up from P and Q using

:J ,

~

and v would be good, and hence would "behave" differently
than P"' Q in this model.
Thus "' can not be characterized in terms of v ,
and
III.

~

:J

Independence of

:::> •

Consider the

This is the most complicated one.

four-world model <G, R, ~> where G = { r , r , A
1

R is specified by

2

1

, .to

2

}

and

l l
For this argument, call a formula X bad if exactly one of
the following is the case:
1)

X holds in one "half", that is,

r

1a)

X is forced by exactly

1b)

X is forced by exactly A

1
1

and

r , or

and

A•

2

2'

CHAPTER NINE

448

2)

X holds at one "end point", that is,
X is forced by exactly r

2a)

2b) X is forced by exactly A
X is forced by exactly

3)

or

2'

2'

r 1' r2 and c. .
2

This time it takes a fairly complicated argument to
establish
Lemma 3.5:
1)

If X A Y is bad, so is one of X or Y.

2)

If X vy is bad, so is one of X or Y.

3)

If-xis bad, so is X.

(Note the change here, in the negation clause, from earlier
Lemmas).
Then, again defining good as not bad, we have
Corollary 3.6:

If X andY are good so are XAY, XvY and

-x.
Now let P and Q be propositional variables, and
require that

11- P, A It- P and .6 11- P and also r 11- Q
2
1
2
2
and A 11- Q. Then P and Q are good, hence so is any
2
On the
formula built up from them using A , v and

r

other hand, P::>Q is forced by exactly

r

hence is bad.

1

'

r

2

and

.6

2'

As usual, this implies that P :::> Q can not be
characterized in terms of
IV.

A '

v

and

Independence of-.
We have kept the easiest for last.

Consider the

and

449

INTUITIONISTIC LOGIC

trivial one-world model <G, R, 11-> where G = { r } and, of
course r R r •
have

Call a formula X bad if r .11'- X.

Then we

Lemma 3.7:
1)

If XAY is bad, so is one of X or Y.

2)

If xvy is bad, so are X and Y.

3)

If X ::>Y is bad, so is Y.

As usual, good means not bad.
Corollary 3. 8: If X and Y are good so are X 11. Y, X v Y and
X ::>Y.

Let P be a propositional variable and set r 11- P.
Then P is good, hence so is any formula built up from it
using A , v and :::> • On the other hand, r .11"- - P, hence ~ P
is bad.
Conclusion:
v and ::::~.

is not characterizable in terms of

A

,

Concluding Remarks: The independence of the Intuitionistic
connectives was proved by Wajsberg [1938} and McKinsey

[1939] by different methods.
matrix methods.

McKinsey used so-called
Now his matrices are, essentially,

pseudo-boolean algebras, and there are ways of going from
such algebras to Kripke models.

It is by such a route that

the proofs above were developed. In some cases they come
directly from McKinsey's matrices, in others certain
simplifications were introduced.

450

#4

CHAPTER NINE

UNIFORM NOTATION

We continue the use of signed formulas as in earlier
chapters.

Thus at a world r of an Intuitionistic model

<G,B, 11->

we have

r II- TX for r II- X
r II- FX for r Ji' X
Note that FX and

~X

play very different roles now, while

in earlier chapters, which had Classical underpinnings,
they were essentially the same.

Informally,

r 11- -X

asserts that, given the state-of-knowledge r , a disproof
of X can be achieved.

But r 11- FX merely asserts that no

proof of X is possible with knowledge r.
distinction can be based on Lemma 2.1.

A more formal

From it,

==9r* 11--x

r11-~x

but also, from that same Lemma,

r * II- FX ~ r II- FX.
Examples can be produced to show that, in general, neither
implication reverses.
Consequently, though we use the

>< ,

f3

notation of

Chapter One #3, it is the signed version only that is used
throughout the present chapter.
When we come to tableau rules in the next section, we
are going to want a Branch Modification Rule appropriate to
Intuitionistic logic.
simple:

The idea behind all such rules is

if we move from

take along.

r to r *, what information may we

Once again, Lemma 2. 1 comes in:

then r * 11- TX.

if r 11- TX

Thus we define II, and dually p operations

on sets of signed formulas as follows.

INTUITIONISTIC LOGIC

451

Definition:
S/1 = {TX I TX E s}
Sp = {FX I FX E S}

Lemma 4.1:

In an Intuitionistic model <G,B, 11->,

r II- S ~ r * 11- Sll

r* 11- s ~ r n- Sp
Proof:

By Lemma 2.1.

Our next job is to re-state the definition of
Intuitionistic model, using uniform notation, as a
preliminary to getting suitable tableau rules.

There are,

primarily, two approaches that we can follow.

The first is

based on the observation that the connectives -- and
behave in a "special" way while "
"regular" fashion.

~

and v behave in a more

The second approach is based on the

very different roles played by T-signed and F-signed
formulas, as seen in Lemma 4.1.

We present both options.

Option _l:
Definition:

We call the connectives -

the connectives "

and v regular.

(respectively regular)

oc

and

::>

special and

By a special

or f3 formula we mean an

o<

or f1

formula in which the main connective is special
(respectively regular).
Conditions 3)-6) from the definition of Intuitionistic
model in 112, that is, the conditions for

A ,

v , - , ::> ,

easily give us the following uniform version.

452

CHAPTER NINE

for regular connectives
R1)

r II- <X

r II-

<;:::==?

o<

1

and

R2) r 11- ,s ~ r 11- f> or
1
for special connectives

s 1)
S2)

l'

11- o<

2

r 11- (3 2

r 11- o< ~ < 3 r * ) < r * It- <>< and r * 11- o< )
1
2
r 11- ~ ~ < v r *) < r * It- (3 1 or r * 11- ~ )

We also have the following conditions
C1)

A atomic,

2

r 11- TA =====> r *II- TA

C2)

r 11- T T

and

r 11- F ..L

C3)

A atomic

~

exactly one of r 11- TA,

r 11- FA.

As a matter of fact, these conditions completely
determine the behavior of Intuitionistic models.

From them

Lemma 4.1 can be derived, and also C3 generalized, by an
induction on degree, to
C3')

rJf-Z,

for every signed formula Z, exactly one of

r1r-z.

On the other hand, if we adopt C3' directly instead of C3)
then one of Rl, R2 and one of Sl, S2 becomes redundant.
Thus we have one direct characterization of
Intuitionistic models, in terms of signed formulas, using
uniform notation.

We turn now to

Option ~:
Definition :

By a positive signed formula we mean one of

the form TX; by a negative signed formula we mean one of
the form FX.

INTUITIONISTIC LOGIC

453

Note that if Z is positive, then

r lr Z{=¢ ( v r*)( r * 11- Z).

Similarly, if z is negative

then r If- Z ~ ( 3 r *) ( r * 11- Z).

This uses Lemma 4.1 and

the fact that the R-relation of Intuitionistic models is
reflexive. Utilizing these observations, the model
conditions of #2 give us, without much trouble, the
following
for positive formulas:
P1)

r 11- c<

P2)

r 11- ~ ~ < v r *) < r * 11- ~ 1 or r * II- ~ 2 >

~

< v r *) < r *II- ex

1

and r * if-

o<

2

)

for negative formulas:
N1)

r 11- o<

~

<3

r *) < r * 11-

N2)

r u-

~ ( 3

r *) ( r * II-

R

r

o<
R

1

~"1

and

r * 11-

or

r * lr-

0(

f'2

2

)

)

Once again, these conditions, together with Cl, C2 and C3
above, completely characterize Intuitionistic models.

And,

once again, if C3' is adopted as basic instead of C3, then
one of Pl, N2 and one of P2, Nl is redundant.
#5

TABLEAU SYSTEMS

In the previous section we gave two characterizations of
Intuitionistic models using uniform notation.

Each of

these will provide us with a tableau system, and each has
its uses.

In this section we present both.

First System:
Not surprisingly, we begin a tableau proof of X by
putting down FX.

This amounts to supposing there is a

454

CHAPTER NINE

world in which X is not forced; an ensuing contradiction
will tell us X is forced everywhere, i.e. X is
Intuitionistically valid.

The contradiction to be sought

is an occurrence of TZ and FZ on each branch.

That is,

formally, tableau closure is as usual, though the semantic
interpretation is altered.
branch extension rules.

What we concentrate on are the

And for these we use the Model

characterization under Option 1 in #4.
Recall, the regular connectives are /\ and v, the
special connectives are -

and

:::> •

Now conditions R1 and

R2 of #4 suggest that for regular connectives, the standard
Classical rules should suffice.

Thus
{S

0<

1\

0(

1
0(

(32

(31

2

for regular o< and (3 •
The special connectives need fancier treatment.
Condition S 1 of //4, for special 0< , says

s 1)

r n-

0(

~

< 3 r *) < r * u- D(

and r * 1r- o<

2

)

Now suppose we think of the set of formulas on a branch

e

of a tableau as a (partial) description of a world r in
some Intui tionistic model.
t7 , where

o<

is special.

And suppose

o<

occurs on branch

Condition S 1 then gives us

information, not about r , but about some world r *
accessible from r •

We jump from one world to another when

this condition is applied.

So we have the usual question:

455

INTUITIONISTIC LOGIC

in such a jump, what information may we take with us? We
have already considered this question, in #4: we may take
That is,

with us positive but not negative information.
Intuitionistic Branch Modification Rule:
Delete all formulas of the form FZ.

Then, based on condition S1, a plausible tableau rule is
o(

ex

1

D(2

for special

o< ,

provided the Intui tionistic Branch

Modification Rule is applied first.
Finally we come to condition S2 of #4, covering
special

formulas.

r 11- (3

S2)

~

It reads:

C 'I r *) C r * 11- ~

1

or

r * It-

~

2

)•

As it happens, this is much less trouble than would seem to
be the case because of the following circumstance: all
special f3 formulas are signed with T (they are of the form
We noted earlier that, for positive Z,
T~X or TX::>Y).

r

I~

Z =9 ( Y r *) ( r * 11- Z).

It follows that, even for

special (3 , condition R2, for regular
if

f3 is special
r 11- 11 ~ C v r *) C r * 1~ ,a )

f3 , suffices because
(since (3 is

positive)
~

Cv r*)( r *I~ (J

1

or r*ll- f>

2

)

(by R2).

CHAPTER NINE

456

Thus the coincidence (?) that special {3 formulas are all
positive suggests that we can use the same tableau rule for
both special and regular # :
~

/\

f3,

{32

Thus, finally, the full set of tableau rules is as
follows.
0)

1)

closure of a branch if it contains
a)

TX and FX

b)

T.J...

c)

FT

for all

~ -formulas

~

1\

(,32

{31

2)

for regular

o<

(involving

0(
()(

1

2

A

and v )

INTUITIONISTIC LOGIC

3)

for special

o<

(involving

~

and

457

:::::> )

o(

0{
0('

1

2

but Intuitionistic Branch Modification Rule first.
Schematically, we may write this rule as: for special

<>< :

S, c<
Sf!, o< , o<

1

2

where Sfl = {TX I TX ~ S}.
Example:

The following is a tableau proof, in this system,

of --(X v -X).

It begins

F --(X v -X)

This is a special
in.

( 1)

~

, so the Branch Modification Rule comes

We get
F

(X .,

X}

( 1)

T-(Xv-X)

(2)

FX v -X

(3)

FX

(4)

F-X

(5)

Here (3) is from (2) by f!J and (4) and (5) are from (3) by
regular o< •

Next, ( 5) is a special

Branch Modification Rule comes in.

0(

so once again the

We get

458

CHAPTER NINE

(X v

F

X)

( 1)

T- (X v~x)

(2)

FX v

(3)

X

-FX-

(4)

-F---+

(5)

TX

(6)

Here (6) is from (5) by special ex.
present, so we can proceed,
(X " oX)

F

( 1)

T- (X v -X)

(2)

FX v

(3)

X

(4)

-FXF

But (2) is still

X

( 5)

TX

(6)

FX v -X

(7)

FX

(8)

F"-'X

(9)

closure
Where (7) is from (2) by ~ ; (8) and (9) are from (7) by
regular o< •
Remarks:

We have noted earlier in this book the close

connections between tableau systems and Gentzen-seque nt
systems. If the tableau system just presented is converted
into the corresponding Gentzen-seque nt calculus, along the
lines of Chapter Three #6, it is, essentially, Beth's
system as presented in Beth [1956] and Beth [1959] pp
444-461.

The present tableau formulation was introduced in

459

INTUITIONISTIC LOGIC

Fitting [1969].
Definition:

Consequently we make the following

Beth tableaus are tableaus constructed

according to the rules for the First System above.
Second System:

After the elaborate discussion above we can

be more compact in our presentation of a tableau system
based on Option 2 from #4.

Recall, positive formulas are

those signed with T, while negative formulas are those
signed with F.

Now the discussion above for special ~

formulas, and a glance at conditions P1 and P2 from #4
suggests that for positive « and

we use the Classical

~,

Rules:
0(

0(
0(

fS

1

2

1\

~1

(S2

Next, conditions N1 and N2 from #4 suggest the
following rules:
for negative formulas
{3

0(

1
0<

2

1\

ra1

~2

but Intuitionistic Branch Modification Rule first.
We summarize the full set of rules in this system.

460

0)

CHAPTER NINE

closure of a branch if it contains
a)
b)
c)

1)

TX and FX
T..l..
FT

for positive formulas
{3

0(

0(

1

0(2

2).

1\

(31

(32

for negative formulas

fl

0(

0(

1
0(2

1\

~1

(32

but Intuitionistic Branch Modification Rule first.
Remarks:

We leave it to the reader to construct examples

using these rules.
As presented, these rules do not correspond to
anything exactly in the literature. But they are close to
a well-known system. Observe that, though we may have many
F-signed formulas on a branch at one time (introduced by
T. . . . or T::> for instance), whenever we try to use one in a
tableau rule 2) application, we loose all the rest.

The

effect is as if we could only have one F-signed formula on
a branch at a time.
In Gentzen [1935] a famous sequent-calculus system was
presented for Intuitionistic logic, for which the
differences between it and the corresponding Classical

461

INTUITIONISTIC LOGIC

system could be summarized as: only one formula can appear
on the right of the arrow at any time.

Recalling the

discussion of Chapter Three #6, this corresponds to a
tableau system in which only one F-signed formula can occur
on a branch at any time. This is not quite the tableau
system just described, but it is close. As we remarked
earlier, our system allows several F-signed formulas on a
branch at a time, but only one can ever be used
as the premis of~ tableau rule application.

In fact, it

is easy to convert a tableau proof in our system to one in
the tableau system corresponding to Gentzen's.
Consequently we make the following
Definition: Gentzen tableaus are tableaus constructed
according to the rules for the Second System above.
We find Beth tableaus easier to use in practice than
Gentzen tableaus for the psychological reason that they are
more "forgiving".

That is, generally they cause fewer

formulas to be crossed out and hence we have more to work
with.

The two systems are equivalent, of course.

And

Gentzen tableaus have the great virtue of providing us with
additional information.

For example, the following is

easily established using Gentzen tableaus but not using
Beth tableaus.

In the statement of it we assume

correctness and completeness has been shown.
Proposition 5. 1:

If Av B is Intuitionistically valid, then

either A or B is Intuitionistically valid.
Proof:

A Gent zen tableau proof of Av B must begin

CHAPTER NINE

462

Bt¥-B-

(1)

FA

(2)

FB

(3)

At this point we only have F-signed formulas so closure is
impossible.

And whichever of (2) or (3) we work with next

will cause the deletion of the other.

Thus if we can

produce a closed tableau it must be from FA alone or from
FB alone, hence one of A or B must itself be provable.
Note:

This is in marked contrast to Classical logic in

which A v -A can be provable without having either A or -A
separate! y.
#6 LOCAL AND GLOBAL SATISFIABILITY
For modal logics it was useful to have two versions of
satisfiability: local (at some world in some model) and
global (at every world in some model).

For Intuitionistic

logic, however, the global version is of little interest,
as the following propositions show.

In them we retain the

local-global terminology for the time being, but apply it
in the context of propositional Intuitionistic Kripke
models.
We first show that, for global satisfiability,
F-signed formulas can be "paraphrased away."
Proposition 6.1:

LetS be a set of signed formulas.

holds at every world of a model <«<i, R, 11-> iff
{TX I TX e: S} u {T~X I FX e S} holds at every world.

S

463

INTUITIONISTIC LOGIC

Proof:

Suppose S holds at every world of <G,R, It->.

some r E: G.

Then trivially, r It- {TX I TX €. S} •

choose any r *.

Choose

Further,

Since S holds at every world,

FX E S =H * If- FX => r* -11'- X.
FX E S ~ rjl- - X.

Since r * is arbitrary,

r II- {T- X I FX €. S}.

Thus

The converse argument is straightforward.
Next we show that for sets of T-signed formulas, local
and global satisfiability coincide.
Proposition 6.2:

Let S be a set of T-signed formulas.

S

is globally satisfiable iff S is locally satisfiable.
Proof:

If S is globally satisfiable, S is trivially

locally satisfiable.
direction.

So we concentrate on the other

follows.
R

0

1~

r

Suppose S is locally satisifiable, say at

in the model <G, R, II->.
Let G

0

0

Create a new model <G , R , 11- > as

= {A E IIi I r li A} •
0

be R restricted to members of G .
restricted to members of G .
0

0

Then

r

0

0

E IIi

0

0

Finally, let

0

too.
1~

0

Let
be

It is straightforward to

check that <G , R , It- > is again an Intui tionistic model.
0

0

0

r 1~ S, since we had r I~ S in <G,R, 1~>.
0 0
0
Then, by Lemma 2. 1, every world A accessible from r in
Now, in it,

<G , R , 1~ > will force S.
0

0

0

But this is the case for every

0
world in G , hence S is globally satisfied in <G , R , 11- >.
0
0 0
0

Because of these results, from now on in our
discussion of Intuitionistic logic we only consider local
satisfiability which we refer to simply as satisfiability.
Similar arguments can be given for logical consequence
notions.

Hence in this chapter we simplify notation from

464

CHAPTER NINE

earlier chapters, and write just S F V to mean: for every
I
Intuitionistic model <G,R, t-> and for every reG, if r
forces every member of S, then r forces at least one
member of V.
#7 INTUITIONISTIC CONSISTENCY PROPERTIES
Not surprisingly, a useful notion of Consistency Property
for propositional Intuitionistic logic can be based on
either of the two tableau systems presented in #5.

We

choose to work exclusively with one based on the Beth
version.

It suffices for everything we need.

This time, unlike with modal logics, we cannot build
on a Classical foundation.
the signed version of the

We start from scratch.
o<, (3

notation.

the reader that:
1) the special connectives are ....... and
ones are A and v ;
2)

We use

And we remind
::l ;

the regular

S#:{TX!TX€S}.

Definition:

Let C be a collection of sets of signed
We call C a propositional Intuitionistic

formulas.

consistency property if it meets the following conditions,
for each S E C :
0) S contains no signed atomic formula and its

conjugate, S does not contain either F T or TJ. ;
1)

f3 e S ====t S u { f3 } e C or
1

SU{fl }EC;

2)

for regular
0(.

2

ES=9SU{C(, C( }EC;

1

2

465

INTUITIONISTIC LOGIC

3)

for special

o<,

« E. S ==> Sfl U { o<

1

, o< } E C •

2

The notion of a Consistency Property for
Intuitionistic logic was introduced in Fitting [1973].
Model Existence Theorem for propositional Intuitionistic
logic 7.1:

Let C be a propositional Intuitionistic

Consistency Property. If S €. C then S is satisfiable in some
propositional Intuitionistic Kripke model.
Proof:

The proof of this theorem exactly parallels the

modal Model Existence Theorem proof in Chapter Two #5.

To

refresh the reader's memory, we outline the steps but omit
the details.
Suppose C is a propositional Intuitionistic
Consistency Property.
First, close C under subsets.
subsets of its members.

That is, add to C all

The result is another

propositional Intuitionistic Consistency property.

(See

Lemma 2.5.4).
Next, enlarge C again by adding to it any set U all of
whose finite subsets are already present.

Again this gives

us another propositional Intuitionistic Consistency
Property (see Lemma 2.5.5).
The enlarged C we now have is a collection of finite
character, hence Tukey's Lemma applies, and one may show
any member may be extended to a maximal member (see
Proposition 2.5.7).
Now define a model <IIi, R, If-> as follows.

Take for G

the collection of all maximal members of the (enlarged)

466

CHAPTER NINE

collection C.

For r , 6 € G, let r R A mean r II~ t::J..
r If- Z i f Z e: r •

signed atomic formulas Z, let
this uniquely determines If-

For

As usual,

on all signed formulas so that

<G, R, II-> is a propositional Intui tionistic Kripke model.
The key item now is, for any signed formula Z, and for
any rEG,

z E r ===* r If- z

(*).

As usual, the proof of this is by induction on degree.

We

discuss one of the three non-atomic cases.
Suppose Z is a special ex , and the result is known for
all formulas of lower degree than Z.

Then

ze: r ~o<e: r
rllu{oc:, oc: }E.C
1
2

~

(by definition of consistency property).

Extend

rllu{ o<, o<} to a maximal member of C, call it A.
1

2

Then A e: G, and r II c;; t:;., hence r R A.
o< , oc e A.
1

2

Since these are of lower degree than o<,

by the induction hypothesis,
(3

Further,

r *)( r * II- o<

1

and r * 11-

condition S1 from 114.

6 II- o<
c<

2

)

1

and

A

If- o<

2

hence r 11- o< , using

Finally, suppose S € C (as originally given).
belongs to the expanded version of C also.
maximal member, S'.

Thus,

•

Then S

Extend S to a

Then S' € G and, since S ~S', the

condition (*) gives us that
ze:s~s· 11-

z.

Hence S is satisfiable, in <G, R, 11->.

This concludes the

sketch.
Consequences:
Both the Beth and the Gentzen tableau systems, given
in 115, are correct and complete with respect to

467

INTUITIONISTIC LOGIC

propositional Intuitionistic Kripke models.
Correctness follows by familiar tableau methods, and a
formal argument can be omitted here.

(See Chapter Two #3).

Completeness of the Beth system is quite direct.

Call

a finite set S of signed formulas consistent if no Beth
tableau starting with the members of S closes.

It is easy

to see that the collection of consistent sets is a
propositional Consistency Property.

Then, if X were not

provable, {FX} would be consistent, hence a member of this
Consistency Property, hence satisfiable by Theorem 7.1, and
hence X would not be valid in all Intuitionistic Kripke
models.
The completeness of Gentzen tableaus requires slightly
more work.

This time call a finite set S of signed

formulas consistent provided, for each subset S c;;;;s
0

containing at most one F-signed formula, no Gentzen tableau
starting with the members of S closes.
0

One may check that

the collection of sets consistent in this sense is again a
propositional Intuitionistic Consistency Property.

Then

completeness follows as usual.
Remarks:

The various other expected consequ~nces now could

be derived easily:
etc.

compactness, axiom system completeness,

But we choose to postpone proofs of these until

quantifiers have been introduced.

It is little more

trouble, and one easily can scale things down to the
propositional part if desired by ignoring whatever we say
about quantifiers.

However, we do include, in the next

section, one application of the propositional Model
Existence Theorem that has no first-order analog, namely
decidability.

468

#8

CHAPTER NINE

DEGIDABILITY

Propositional Intuitionistic logic is decidable, and
consistency properties can be used to demonstrate this.
The argument is similar to the one we gave for several
modal logics in Chapter Three #12.

We repeat the main

ideas for convenience.
Definition:

A set G of signed formulas is said to be

closed under subformulas if, whenever TX or FX is in G and
Y is a subformula of X then TY and FY are in G.
Note that, unlike in Chapter Three, the language now
does not include modal symbols.
Definition:

If e is a propositional Intuitionistic

consistency property and G is closed under signed
subformulas, by etc we mean the collection of all sets of
the form Sf\ G where S € C.
It is straightforward to show that if G is closed
under signed subformulas, then if e is a propositional
Intuitionistic consistency property, so is efc.
Next, for a formula X, let G(X) be the set of all
signed subformulas of X. The main item is the following.
Theorem 8.1:

X is valid in all propositional

Intuitionistic models if and only if {FX} is not a member
of any propositional Intuitionistic consistency property of
the form efG(X).

469

INTUITIONISTIC LOGIC

Proof:

Essentially the same as that of Theorem 3.12.2.

Now, just as in Chapter Three #12 this means that if
we want to check the Intuitionistic validity of X we only
have to see if {FX} belongs to one of a bounded number of
propositional Intuitionistic consistency properties, each
of a bounded size.

Thus we have a decision procedure.

For another decision procedure, indeed a somewhat more
practical one, we may do the following. Formulate a proof
procedure for propositional Intuitionistic logic using
prefixed formulas as in Chapter Eight. The system given
there for S4 adapts very easily. Then a tableau decision
procedure is easily described, again based on one for S4.
The details can safely be left to the reader.
#9

FIRST-ORDER INTUITIONISTIC MODELS

We use the various first-order languages described in
Chapter Seven #2, but without modal symbols. Thus L(C)
means the first-order language with constant symbols from
C, but without o or <> • We continue the convention
that a certain infinite set of formal constant symbols C
0
has been set aside, and L(C ) is our formal first-order

P

0

0

Likewise a disjoint set of the same cardinality,
has been set aside as parameters. Then L(C uP ) will

language.

0

0

Likewise each
be the language used in formal proofs.
Intuitionistic model has a domain D and we use L(D), the
language of that model.

The various other notions from

Chapter Seven (substitution, sentence, subformula, etc.)
are carried over in the obvious way.

470

CHAPTER NINE

First-order Intuitionistic frames are the same as
Let D be some non-empty set.

S4-frames.

A first-order

Intuitionistic frame over D is a triple <G,R,P> where
<G,R> is an Intuitionistic frame and P is a mapping

from G to non-empty subsets of D meeting the monotonicity
condition:

r.IA~P(r

Definition:

A first-order Intuitionistic model over a

)<;;JP'(A).

domain D is a quadruple <G,R,P, 11-> where <G,R,P> is a
first-order Intuitionistic frame over D and

~

is a

relation between members of G and sentences of L(D) such
that:
1)

<G, R, 1~> is a propositional Intui tionistic model

as defined in #2, and
2)

for each

r E G and quantified sentence of L(D),

r 11- (3 x)A(x) ~ r 11- A(c) for some ce P(r)
r 11- ('V x)A(x) <;===:>for every r*,

r * 11- A( c) for every

cEP(r*).

Remarks:

As usual, we might think of P ( r ) as the "things"

that exist in world r.

Since Intuitionistic models are

supposed to capture the logic of an Intuitionistic
mathematician, we might take these "things" to be
mathematical entities.

Then what are we to make of the

monotonicity condition?

Surely the collection of numbers

(say) does not increase with time.

Well, as a matter of

fact, in mathematical work we do not use numbers
themselves, but rather names for them.

Suppose we think of

P ( r ) as the collection of meaningful mathematical names

of world r where, for an Intuitionist a name is meaningful
only if it has been verified that it names something.

In

471

INTIDTIONISTIC LOGIC

this sense, "the second smallest positive integer" is,
presumably, always meaningful.

On the other hand, consider

"the smallest positive integer n such that the decimal
expansion of 11" contains a string of 100 5 1 s commencing at
decimal place n."

This may or may not name anything; until

it has been verified (to the satisifaction of an
Intuitionistic mathematician) that it does, it is not a
meaningful name.

But likewise, it has not been verified

that this does not name something so we must leave open the
possibility that someday it could be a meaningful name.
Thus if we think of P ( r ) as the set of names that
have been verified to be meaningful at state

r (many of

which will name the same thing, of course) then it is
reasonable to suppose P ( r ) can vary with r , though
subject to the monotonicity condition, of course.

Once we

have verified a name to be meaningful, it remains so, no
matter what the additions to our mathematical knowledge.
Now part 2 of the definition above should seem like a
reasonable reflection of Intuitionistic practice.

To say

( 3 x)A( x) is known to be true at a state of knowledge r is
simply to say, we have a c for which A(c) is known to be
true.

On the other hand, to say we know (~ x)A(x) is true

at state of knowledge r , it is not enough to say A(c) is
known to be true for all the c we know about at

r.

Rather

we must have some way of verifying that A(c) will also be
true for all c that we ever could come across, no matter
what the future development of our mathematical research is
like.
Several features of propositional Intuitionistic
models carry over to first-order ones.
is enough to specify

1~

For one thing, it

on the atomic level in order to

4 72

CHAPTER NINE

determine it completely.

Also we have the following analog

to Lemma 2.1, whose proof we leave to the reader.
Lemma 9. 1:

I f <IIi, R, P, II-> is a first-order Intuitionistic

model and

r e G then r 11- X ===> r * 11- X.

Definition:

Let <G,R,P, 11-> be a first-order Intuitionistic

model over D, and let X be a sentence of L(D).
in the model i f

X is valid

r E. G such that all

r If- X for every

constants of X are in P( r).
Examples:
I.

A model in which ~ ( 3 x) ~A( x) => ( ~ x)A( x) is not

valid.

Consider <IIi, R, P, 11-> where:

r R r,

D. RD.; IP( r ) = IP(D.) = {a}; and on atomic

formulas,

r -lf- A( a) but D. 11- A( a).

r

0

b.

@ If- A(a)

l

Now

r~A(a),

aEP(r) and

= { r , A} ; r IIi! D.,

Schematically:

rRr, hence

Since A 11- A(a), AJI'- ~A(a).
member of P(A), .6-lf- (3 x)~A(x).
by Lemma 9.1.

G

Since, for every

r.lr ('v'x)A(x).

And since a is the only
Then r -If (3 x)-A(x)

r* we have

r*JI'- (3x)-A(x), then r 11- ~(3x)~A(x).
r .11<- -

( 3 x) -A(x) :::> ( '~ x)A(x).

Hence

473

INTUITIONISTIC LOGIC

In the model above each world had the same domain.
The next example involves domains that vary.

A model in which

II.

('</ x)[A(x) v ( 3 y)B(y)] :::>[('17' x)A(x) v (3 y)B(y)] is not

valid.

Using a schematic presentation the model is

r

j

~II- A( a)

tJ.

~

n- A(a)
II- B( a)

Clearly

r~

(3y)B(y) but tJ.

r Jl'- ("' x)A(x) since r R A
Now

r 11- A(a) hence

only member of P( r).
A 11- A(x~ v ( 3 y)B(y)

II- (3y)B(y).

Also

and tJ. .11'- A( b) though bE. P( A).

r 11- A(a) v (3 y)B(y) and a is the

Also A 11- (3 y)B(y) hence
for every x E P( A).

Then

r II- ('<I x)[A(x) v (3 y)B(y)].
r 11- ( v x)A(x) v ( 3 y)B(y) we
would have either r 11- (Vx)A(x) o r r It- (3y)B(y). We
On the other hand, i f

have already ruled both of these out.

Hence

r Jl'- (V x)[A(x) v (3 y)B(y)] :::> [(V x)A(x) v (3 y)B(y)].
Finally, just as in modal logic (see Chapter Seven #4)
we introduce the machinery of interpretation of a formal
language into the language of a model.
Suppose C and D are two sets of constants and

v:C---7D.

In the obvious way we extend v to a mapping

on languages v:L(C)~L(D).

474

CHAPTER NINE

Recall, L(C up ) is our formal language (without
0

0

modal symbols now) to be used in proofs.

By an

interpretation of this language in a first-order Kripke
model <G,B,P, 11-> over D we mean a mapping v:C up - D .
0

We say a sentence X of L(C up ) is valid under an
0

0

0

-----

interpretation v in a model <G,B,P, 11-> if v(X) is valid in
this model in the sense used above.
Finally a first-order sentence X of L( C up ) is
0

0

Intuitionistically valid if X is valid under every
interpretation in every first-order Intuitionistic model.
#10

UNIFORM NOTATION, AGAIN

As we did in #4 for propositional models, now we try to
characterize first-order Intuitionistic models, using
uniform notation.

As before, the intention is to have

simple Intuitionistic tableau systems suggested to us.
We add to the « , f3 notation of #4, signed
cases.

X and

$

These, and their instances, are as follows.
S(a)

~ (a)

T( 'V x)A(x)

TA(a)

T( 3 x)A( x)

TA(a)

F(3 x)A(x)

FA( a)

F('Vx)A(x)

FA( a)

We understand signed sentence as before: for a world

r 11- TX means r If- X and r If- FX means r .IF- X.
Again, as in #4, we might divide up cases by noting
that V behaves in a "special" way in first-order
Intui tionistic models while .3 behaves in a more "regular"
fashion.

Or we might observe that T-signed sentences and

F-signed ones act differently.

Either approach will do;

475

INTUITIONISTIC LOGIC

they merely amount to different ways of classifying the
same material.
In the following, <G, B, P, 11-> is a first-order
Intui tionistic model,

r e: G, and all sentences are

sentences of the model language.
Option 1:

We add '<:/ to the list of special connectives and

quantifiers of 114 (the others were
are regular.

~

and ':)).

All others

Then the model conditions of #9 give us the

following which, in turn, is enough to characterize
first-order Intuitionistic models (given the Version
propositional clauses of #4 of course).
1)

for ~ -sentences
a)

for regular lS ,

b)

for special

r 11- "t ~ r 11- '( (a) for every a e P( r )
~ ,

r 11- ~ ~ ( '<:/ r*)( r * 11- ~ (a) for every
aeP(r*))
2)

for 6 -sentences,

s.

a)

for regular

b)

r 11- b ~ r If- & (a) for some aeP(r)
for special 5 ,

r

11- S ~

( 3 r *)( r * s II- (a) for some

aeP(r*))
Option 2:

Recall, positive sentences are T-signed ones,

negative sentences are F-signed.

Then the following

together with the Version 1 propositional clauses of #4,
characterizes first-order Intuitionistic models too.
1)

for positive sentences

476

CHAPTER NINE

a)

r 11- ¥ ~ ( v r*)( r *If- If (a) for every

b)

r If- 0 ~ ( V r *)( r *If- s (a) for some

aEP(r*))
aeP<r*))
2)

for negative sentences
a)

r 11- 'If ~ ( 3 r*)( r *If-

~(a)

for every

aE.P(r*))
b)
aEP(r*)).
#11

r If- & ¢::=:>

( 3

r*)( r * 11- 0 (a) for some

FIRST-ORDER TABLEAU SYSTEMS

Each of the options considered in sections 4 and 10 gives
rise to a tableau system.

We presented propositional

versions in #5; now we introduce the quantifier rules. We
think the discussion in Chapter Seven #6 on the respective
roles of constants and parameters should suffice; we do not
repeat the argument here.

Likewise we do not repeat the

details from #5, of how one turns the model
characterization of the previous section into tableau
rules.

Here are the rules.

Beth Tableaus:

Add to the propositional Beth rules of #5

the following.
1)

for any 't -sentence

o(c)

for any constant c E. C up
-

0

0

477

INTUITIONISTIC LOGIC

2)

for regular

S,

for any new parameter c E: P
0
-

cS (c)
,3)

for special

~ (c)

&,

for any new parameter c E: P

-

Intuitionistic Branch Modification Rule first.

obut

Thus of the four quantifier rules the only one treated
differently than in Classical logic is the special

cS

rule,

namely F 'V.
Example;

The following is a Beth tableau proof of

~(3x)~(A(x)::JB(x)):J('</x)(~B(x)::J~A(x)).

It begins,

of course, with an F-signed copy of the sentence, after
which the F;:) rule (special o< ) causes the Branch
Modification Rule to be applied and leaves us
F~(3JE)

(A(x)3B(x))3(Vx)(

T~ (3 x)~ (A( x) :::::>B( x))
F(~ x)(~B(x)::>-A(x))

B(x):::>=A(x))

(2)
(3)

Next, the F 'V rule (special 0 ) applies, giving us the
following (where c is a parameter)

(1)

478

CHAPTER NINE

F

(3 x)

T~(3

(A(x)3D(x))3(v' x)(•oD(x)~-A(x))

x)-(A(x)::;)B(x))

F('V x)(

D(x) 3

(1)

(2)

A(x))

(3)

F-B(c) ::;)-A(c)

(4)

We use F :::> (special <>< ) on 4 getting the following

F

(3 x)

(A(X)3D(x)):9 (V x)(

T~(.3x)~(A(x):::>B(x))

(2)

F('o' x)(

(3)

F

D(e) :3

D(x)3

A(x))

A( e)

D(x) 3

oA(x))

(1)

(4)

r~B(c)

(5)

F-A( c)

(6)

Next, F~ on 6 (special o<) gives the following
f '"' ( 3 JE )---( t.( X) 3 B ( X) ) 3 h' X) ( "' D (X) ~ m A ( X) )

T-(3 x)-(A(x) ::>B(x))

(2)

F('V x)( u D(x) :::> -A(x))

(3)

f<><E(e):J

(4)

,'\:(e)

T-B(c)

(1)

(5)

F ·A( e)

(6)

TA(c)

(7)

Notice that we have, so to speak, turned everything into a
T-signed sentence.

Now the tableau finishes as follows.

INTUITIONISTIC LOGIC
f,.,.(~x) ..... (.'l,(x)o:B(x)): :>('Vx)(

F

B(x):J

B(e) 3

A(x))

(3)

(5)

Foet.(e)

(6)

TA(c)

(7)

F

(.'i(x)::.B(x))

(8)

(A(e)9B(c))

(9)

TA( c);::, B( c)

( 10)

/~

FA(c)

(11)

(1)

(4)

A( c)

T~B(c)

F(.3 x)

A(x))

(2)

T~(3x)~(A(x);:,B(x))

F('q x)(

B(x)3

479

TB(c)

( 12)

FB(c)

(13)

In this, (8) is from (2) by f3 • ( 9) is from (8) by 't.
Then ( 10) is from (9) by special o<., causing (8) and (9) to
be crossed out.
( 11) and ( 12) are from (10) by ~.
Finally (13) is from (5) by
Gentzen tableaus:

f3, and each branch is closed.

Add to the propositional Gentzen rules

of #5 the following.
1)

for positive sentences

6 (c)
c e c up
0
0

for any constant or parameter

480

CHAPTER NINE

a (c)
2)

for a new parameter c E: P

0

for negative sentences

(l'(c)

c E C UP

o

first

for any constant or parameter

but Intui tionistic Branch Modification Rule

a-

8 (c)

for a new parameter c e:. P

-

Intuitionistic Branch Moficiation Rule first.

obut
-

Thus in the Gentzen version the Branch Modification Rule is
applied whenever a tableau rule is used on an F-signed
sentence.
We do not present any examples of first-order Gentzen
tableaus; we leave that to the reader.

We do note,

however, that just as in the propositional case, Gentzen
tableaus tend to give more "side" information than Beth
tableaus.

For example, using Gentzen tableaus (assuming

completeness and correctness) the reader can easily show
the following by using the ideas of the proof of
Proposition 5 .1.
Proposition 11.1:

Suppose a , ••• ,a are all the constants
1
n
of A(x,a , ••• ,a). If (3 x)A(x,a , ••• ,a) is
1
n
1
n
Intuitionistically valid, so is A(c,a , ••• ,a ) where cis
1
n

INTUITIONISTIC LOGIC

one of a , ••• ,a •
n
1
arbitrary.
#12

481

If A contains no constant symbols, c is

FIRST-ORDER INTUITIONISTIC CONSISTENCY PROPERTIES

As before, both the Beth and the Gentzen tableau systems
suggest Consistency property notions, and both are useful.
We present only the Beth version.
everything we need.

It suffices for

The theorem first appeared in Fitting

[ 1973 J.
Definition:

Let C be a collection of sets of signed
C is a first-order Intui tionistic

sentences of L( C V P ) .
0
0
Consistency property if
1)

C is a propositional Intuitionistic Consistency

property as defined in #7
and, for each S E. C:
2)

[~-condition]

l5 E S =9 S v { r (c)} E. C for every constant or parameter c
3)

[&-condition]

3a)

for regular

s,

b E S =9 S u { 8 (c)} E: C for some constant or parameter c
3b) for special

fi ,

o E: S ~ S/1 v { & (c)} E C for some constant or parameter c.
Model Existence Theorem for first-order Intuitionistic
logic 12.1:

Let C be a first-order Intuitionistic

Consistency property.

If S is C-consistent, where S is a

set of signed sentences of L(C ), then Sis satisfiable
0
under some interpretation in some first-order
Intuitionistic model.

Indeed, in a model whose domain is

482
L(C

CHAPTER NINE

0

UP )

0

Proof:

under the "identity map" interpretation.

Just as the propositional version paralleled what

we did for modal logic, so too with the first-order
version.

Only minor changes are necessary in the proof of

Theorem 7.8.1, so we just summarize.
So suppose C is a first-order Intuitionistic
consistency property.

Close C under subsets (see Lemma

7.8.2) getting another first-order Intuitionistic
consistency property.

Next, throw in every set W such that

some parameter substitution of W is already present (see
Lemma 7.8.3).

This gives us a collection, which we call

C again, which satisfies all the consistency property

conditions except that the S -condition is replaced by the
New Parameter Condition:
if b

for any WE. C:

is regular, S E. W~ Wv { S (c)} E. C for every

parameter c that does not occur in W.
i f S is special,

bE W~ Wflu { S (c)} E.C for every

parameter c that does not occur in W.
As in Chapter Seven, we will call a first-order
Intuitionistic consistency property with the New Parameter
condition replacing the usual

s -condition an alternate

Intuitionistic consistency property.
Finally, enlarge C by throwing in any set all of whose
finite subsets are already present (see Lemma 7.8.4).

We

get yet another alternate Intuitionistic Consistency
property, which we call C again, that is of finite
character.

Further, just as in Chapter Seven fl8, not only

is C an alternate Intuitionistic Consistency property of

483

INTUITIONISTIC LOGIC

finite character, but so are sections of it, CJP where Pis
(see
a set of constants and parameters extending C
0

Proposition 7.8.6).

Next, suppose P is a set of constants and parameters
extending C , and wE. C.

We say W is downward saturated in

0

cfp i f
1)

w is maximal in crp

2)

if

?. E. W~ & (c) E. W for some

S is regular,

c E. p.

Then one can show an analog of Proposition 7.8.7 as
follows.

Suppose C SP SP u Q c;;;C uP
0

0

0

where P and Q are

disjoint but of the same cardinality. If wE. c rp then w can
be extended to a set that is downward saturated in

cr (p u Q). This is the heart of the matter and the

reader should verify our claim with some care.
Now, after these preliminaries, we are ready to
construct our Intuitionistic model.

Partition the set P

0

of parameters into countably many disjoint sets, all of the
3
2
1
same cardinality: P = p UP UP u ...
0

0

0

0

Define a collection G: put r in G i f I is downward
n
1
saturated in c r(c u p u ... up ) for some n' and set
0
On
0
1
Define a relation R by:
P ( r ) = C up u ... u P •

r Rb. if

0

0

rt~c;:;.c.

0

and P(r )SIP'(L:::..).

Finally, for atomic

sentences A of L( C u P ) set r 11- A i f TA E. r . Then lf0
0
can be extended uniquely to encompass all sentences so that
<G, R, P, If-> is a first-order Intuitionistic model.
We make the familiar claim:

for each r E. G and for

each signed sentence Z of L( C up ) ,
0
0
C*)
z E r ~ r If- z
The verification of(*), as usual, is by induction on
degree. We check a few of the cases.

484

CHAPTER NINE

case (3 )

Suppose

(3 E r

and the result ( *) is known for

all signed sentences of lesser degree than that of

f3 • We

show r 11- {3 •
Since

1

r E G, r is downward saturated in, say
n

cr(c UP u ... uP ), which is, itself, an

0
0
0
alternate consistency property.

Since r is a member and

f3 E r then either r U { f3 } or r U { f3 } is a member.
1
1
2n
But f' is maximal in cf(C UP u ••• UP) hence has no
0
0
and thus either

0
(3 E f' or f3 € r .
1
2
Since these are of lower degree than (3 , the induction

proper extensions

hypothesis can be applied:
In either case,
case special S )

either

r II- f .

r 11- f3 1 or r It- (3 2 •

Suppose S is special,

0 e: r , and (*) is

known for all signed sentences of lesser degree than

~ •

We show r 11- 0 .

1
n
is downward saturated in cr ( c v p v •.. up ) •
0
0
n+1
0
Choose any c E. P
• Then c can not occur in r. Since C
0
is an alternate Intuitionistic consistency property,

Say

r

r/IU{ o (c)} E. C.

As a matter of fact,
1
n
rt!U{b(c)}E.Cf(C up U •.• UP U{c}). Then
0
0
0
r II u { f. (c)} can be extended to a set, call it .6. , that is
1
n
n+ 1
downward saturated in C ( C u p u ••• U P uP
) • Then
1
0
r\4.1
0
0
~ E.G, P (b.) = C u p u •.• u P
, r I A, and S (c) E. A.
0
0
0
Since o(c) is of lesser degree than .S the induction
hypothesis applies, so ~ 11- S (c). Thus we have, for some

r

6

such that

r B .6.,

A

If- 8 (c) for some c E P( A).

Hence

r 11- s .
The other cases are similar.
Now the finishing touches are standard.

Suppose

S E. C, where S is a set of -signed sentences of L( C ) •
Extend S to a set f'

0

that is downward saturated in

485

INTUITIONISTIC LOGIC

1

Then rEG and, since S£ r, by(*) every
member of S is forced by r . Finally, as an interpretation
L(C UP).

0

0

v, simply use the identity map on
C Up •

Under this interpretation S is satisfied in

0

0

#13

CONSEQUENCES

<G,R,P, If->.

In this section we briefly list the usual quick
consequences of the Model Existence Theorem then, in the
next few sections, we take a longer look at some that need
more elaborate work.
I.

Tableau Completeness.
Both the Beth and the Gentzen tableau systems of #11

are complete (and correct).
For the Beth system, simply call a finite set S of
signed sentences of L( C uP ) consistent if no tableau for
0
0
S closes. The collection of consistent sets is a
Then

first-order Intuitionistic consistency property.
completeness follows as usual.

For the Gentzen system, call S consistent if there is
no closed Gentzen tableau for any subset of S containing at
most one F-signed sentence.

This too gives us a

consistency property.
Correctness is by the usual argument.
II.

Strong Tableau Completeness
Suppose S is a set of unsigned sentences.

We add an

assumption rule to the tableau systems as follows.
members of S can be used as assumptions in a tableau

The

486

CHAPTER NINE

argument if, whenever we want, we can add TZ to the end of
a branch for any Z E: S.

Then we have: there is a (Beth or

Gentzen) tableau proof of X using S as assumptions if and
only if SF

I

X (see #6 for notation).

It is understood

that S consists of sentences of L(C ) and X is a sentence
0

of L(C ) too.
0

To get this completeness result for the Beth system,
call a set W of signed sentences of L(C UP ) consistent if
0
0
no Beth tableau for any finite subset of W closes, allowing
S as assumptions.

This is a Consistency property and, if X

is not derivable from S using tableaus, then TS U{FX} is a
member of it.

Strong completeness then follows.

For the Gentzen system the argument needs the usual
modification.
III.

Compactness
LetS be a set of sentences of L(C ).
0

If every finite

subset of S is Intuitionistically satisfiable, so is S.
A proof of this can be based on the previous result.
Equally simply, one can extract a proof from the previous
proof.

We sketch one.

Call a set W of signed sentences of

L(C uP ) consistent if: 1) only finitely many parameters
0
0
occur in W and 2) every finite subset of W is
Intuitionistically satisfiable.

The collection of sets

consistent in this sense is a first-order Intuitionistic
consistency property.

Now, if S is a set of sentences of

L(C ) every finite subset of which is Intuitionistically
0
satisfiable, then TS belongs to this consistency property,
hence S itself is Intuitionistically satisfiable.

487

INTUITIONISTIC LOGIC

Skolem-L6wenheim

IV.

LetS be a set of sentences of L(C ). If sis
0
Intuitionistically satisfiable then S is satisfiable in
some Intui tionistic model whose domain is C v p •
0
0
This follows immediately from the Model Existence
Theorem.
V.

Deduction theorem.
For sentences X,Y, and a set of sentences S, of L(C ),
S, X I=

I

Y iff S 1=

I

0

X::> Y.

An easy direct argument about models that does not even
need the Model Existence Theorem. (See the discussion in
116.)

AN AXIOM SYSTEM

#14

Since Intuitionistic logic does not have a Classical base
the way modal logics do, we can not build on the axiom
Indeed, since the propositional
connectives are independent in Intuitionistic logic, we can

system of Chapter Four #2.

not even use uniform notation (unless we are willing to
consider signed formulas in axiomatic derivations). So we
start over again, from the beginning.
As in earlier chapters, we have certain axioms and
certain rules of derivation.

In these, we allow both

constants and parameters, that is, we allow sentences of
L(C uP ) . A derivation from..§. set ~ is a sequence each
0

0

line of which is either an axiom, or a member of S, or
comes from earlier lines by one of the rules of derivation.
A proof is a derivation from the empty set 0. In either
case the sentence derived, or proved, is simply the last

CHAPTER NINE

488

line of the sequence.
Now, we choose to work with the following.
Axioms:

All sentences of L(C UP ) of the following forms
0

are axioms.
I1)

X ::>(Y:::>X)

I2)

(X::> (Y ::> Z)) ::>((X:::> Y) :::>(X::> Z))

I3)
I4)

(XAY)::>X

I5)

X ::>(Y ::>(XA Y))

I6)

X=>(XvY)

I7)

Y::>(XvY)

I8)

((X::>Z)A (Y::>Z)) ::>((XvY)=>Z)

I9)

(XI\~X)::>Y

(XAY)::>Y

I10)

(X ::>-X):::> -X

I11)

..L :::::>X

I12)

X:JT

I13)

X(a) ::> ( 3 x)X(x)

I14)

( 'V x)X(x) =>X( a)

Rules of Derivation:
MP)

X

X =>Y

y

R 3)

Z(a) ::>Y
(3x)Z(x):::>Y

R'V)

Y=>Z(a)
Y::>('<lx)Z(x)

0

489

INTUITIONISTIC LOGIC

Note:

In rules R3 and R\:/ a must be a parameter that does

not occur in Y, and in a derivation from a set S a must not
occur in S either.
We write Sri X to indicate there is a derivation, in
this system, of X from the set S. Likewise we write r x
as short for 0 r

I

I

X

•

Even though there are no Classical logic
underpinnings, still certain results about the logic carry
over.

For example, since axiom schemas I1 and I2 are the

same as A1 and A2 of Chapter Four #2, and both the present
system and the Classical system considered there have MP as
a rule, then the proof of Lemma 4.2.1 still applies.
w~w

Thus

is a theorem of the present system, for any sentence

w.
As another, useful,

example, we showed a deduction

theorem for our propositional Classical axiom system,
Proposition 4.2.2.

A brief inspection of the proof shows

that all we used was axiom schemas A1 (=I1) and A2 (:I2)
and the fact that MP was the only rule of inference.
Consequently the proof can be applied to the· present system
to show the following.
Proposition~:

If B is derivable from S U{A} in the

present Intuitionistic system via a derivation that does
not use rules R3 or RV, then A:JB is likewise derivable
from S alone.
We will extend this to include the quantifier rules in
a moment, but first we use this restricted version to show
the following.

CHAPTER NINE

490

Lemma 14.2:

All sentences of the forms

1)

[X=>(Y=>Z)]::::>[Y:J(X;:,Z)]

2)

[X ::J(Y:JZ)] ::>[(X/\ Y) ::::>Z]

3)

[(XAY);::)Z]=>[X;:,(y:::>z)J

are theorems.
Proof:

We show only 1), 2) and 3) have similar proofs.

First we show there is a derivation of Z from the set
S:{X:::>(Y::::>Z),Y,X}.

The derivation goes as follows.

1)

X

member of s

2)

X:::>(Y:::>Z)

member of s

3)

Y::>Z

by rule MP on 1,2

4)

y

member of S

5)

z

by rule MP on 3,4.

Now this derivation did not use either quantifier rule,
hence by Proposition 14. 1 there is a derivation of X:::> Z
from {X:>(Y::>Z),Y}, then again, a derivation of Y=>(X.::>Z)
from {X::>(Y:::>Z)}; then, finally, a derivation
[X::J(Y:JZ)]:::>[Y:;,(X::~Z)]

from the empty set.

Now we extend to encompass the quantifier rules.
Proposition 14.3 (Deduction Theorem):

If Sv{X} 1- 1 y then

S 1- (X:::>Y).
I
Proof:

Suppose A ,A , ••• ,A is a derivation of Y from
1 2
n
S u {X}. We show each of X ::>A is derivable from S alone,
hence X;:,A

i

or X::>Y is so derivable.

n
Suppose for all i<k we know X:::>A

is derivable from S
i
:;,A
X
(induction hypothesis). We show
is derivable. There
k
are several cases depending on whether 1) A is an axiom,
k

491

INTUITIONISTIC LOGIC

2) A is a member of S, 3) A is X, 4) A comes from two
k
k
k
earlier terms by MP, 5) A comes from an earlier term by
k

R 3 or 6) Ak comes from an earlier term by R Y. Cases
1)-4) are treated exactly as in the proof of Proposition

4.2.2; we do not repeat the arguments.

Cases 5) and 6) are

similar; we discuss only case 5), which uses part 1 of the
Case 6 uses parts 2 and 3.

previous lemma.

So, suppose A is (3 x)Z(x) '::lY and for some i<k, A is
k
i

Z( a):::> Y, and Ak was introduced using rule R 3. Since this
is a derivation from SU{X}, then a must be a parameter not
occurring in Y or in any member of S U{X}.

By the

induction hypothesis, we have that
S r

or

I

X :>A

i

Sf- X~(Z(a):::>Y)
I
Then, using LellUDa 14.2, Z(a) ::1 (X ~Y) is derivable from S.
Since a does not occur in S or in X or Y, hence not in
X~Y,

by rule R3, (3x)Z(x).:::>(X.:::>Y) is derivable from S.

Then by Lemma 14.2 again, x::;,((3 x)Z(x)'::lY) is derivable
from S, that is,

s 1#15

I

x~A

k

•

AXIOMATIC CORRECTNESS AND COMPLETENESS

The correctness of the axiomatic proof procedure presented
in #14 can be shown by the usual methods.

Each axiom is

easily checked to be valid under every interpretation in
every Intuitionistic model.

And the three rules of

inference preserve such validity.

Consequently every line

of an axiomatic proof must be valid hence every theorem is
valid.

Derivations from a set S are handled similarly.

CHAPTER NINE

492

For completeness we use the Model Existence Theorem,
of course.

But there are a few modifications necessary to

the method of earlier chapters, since there is no unsigned
Intuitionistic model existence theorem.
Definition:

Let S be a set of signed sentences of

L( C u P ) • Let us call S A-consistent if:
0
0
1) S contains only a finite number of F-signed
sentences,
2) S omits infinitely many parameters, and
Say S# = TW for a set W of unsigned sentences and

3)

SP=F{X, ••• ,X}.
1

Note:

n

ThenWA<-

I

(Xv ••• vXvJ.)
1

n

As usual, the J. -clause is to deal with the

possibility that S~

is empty.

Loosely the idea of part 3

is: from the T-part of S we can not derive the F-part. Of
course the notation we have chosen presupposes that v is
commutative and associative so that parentheses don't
matter.

This is easily shown, largely using axioms I6, I7

and I8 and is left to the reader.
Proposition 15.1:

Let C be the collection of all

A-consistent sets. Then C is a first-order Intuitionistic
consistency property.
Proof:

We check several cases, and leave the rest to the

reader.

Uniform notation is no help here, since it played

no role in the presentation of the axiom system.

But it

will be seen that the axioms and rules are exactly what we
need for a simple proof that C is, in fact, a consistency
property.

They were chosen with this in mind.

493

INTUITIONISTIC LOGIC

Let S e: C: be fixed for each of the cases we consider.
We use the notational conventions:
S/1 = TW

= F {X , ••• , X }
n
1

SP

and for reading ease we abbreviate the sentence
(X v ••• v X v ..J...) by N.

n

1

Now the cases.

case T v)
TX v YES ~ S u {TX} E. C or S u {TY} E. C.
Actually we show the contrapositive.

So, suppose

Now S u {TX} l

S u {TX} l C and S u {TY} l C.

C and, since

S E.C:, it is easy to see that it must be qlause 3 that
Thus

breaks down.
W,X 1-

I

N.

Then by the Deduction Theorem (14.3)
W 1-

I

X=>N.

Similarly since S u {TY} l
W 1-

I

C,

Y=>N.

But then, using axiom I8,
W 1-

I

(X vY) ;:,N.

Then if X v YE. W we would have
W 1-

I

N

which entails that S l C.
case F :::>)
FX =>Y E. S

Thus XVY fi. W, or TXvY £ S.

= S/1 u {TX,FY} e:

C

Again we show the contrapositive.
S/IU{TX,FY} t. C.

So, suppose

Since SE.C: it follows that i t must be

clause 3) of the definition of A-consistent that fails.
Hence
W,X 1-I y
Then by the Deduction Theorem,

494

CHAPTER NINE

W 1- X::>Y
I

so of course
W 1I

(X=>Y) v N

from which it follows that FX:::>Y t:. S (since S is
A-consistent).
case T 3)
T( 3 x)A(x) e S ==*S u {TA(c)} € C for some c.
Of course we show the contrapositive.
SU{TA(c)} £. C for any c.

Suppose

Now SEC hence S omits

infinitely many parameters.

Let c

occurring in S, or in A( x).

Then S u {TA( c ) } t:. c.

0

be a parameter not
As

0

usual, it must be clause 3 of the definition of
A-consistent that fails.

Thus we have

W,A(c ) 1- N
0
I
or by the Deduction Theorem,
A(c ) :::> N.
I
0
Now c does not occur in N or in W hence rule R3 applies
0
and we get
WI-

Wt- (3x)A(x):JN
I
Then if (3x)A(x)E.W we would get
W 1-

I

N

which entails that S t:. c.

Hence (3 x)A(x) t W so

T( 3 x)A(x) rt. s.
This is enough cases to give the general idea.
Corollary 15.2:

Let S be a set of sentences of L(C ) and
0

let X be a single sentence of L(C ).

Proof:

0

1)

If S FI X then S 1- X.

2)

I f X is Intuitionistically valid then

I

Suppose S ,f-

I

X.

1-

I

Consider the set TS u {FX}.

X.
It

495

INTUITIONISTIC LOGIC

contains a finite number ofF-signed sentences (one), omits
infinitely many parameters (all of them), and by hypothesis
we can not "derive the F-part from the T-part."

Hence

TSV{FX} is a member of the consistency property C of
Proposition 15.1 and is thus Intuitionistically satisfiable
by the Model Existence Theorem (12.1).
course, that S-¥

I

This means, of

x.

Part 2 is simply a special case.
Remark:

Kripke's original completeness proof, in Kripke

[1965A] only showed a tableau version of part 2, and hence
indirectly, an axiom system version, so called weak
completeness.

That part 1, strong completeness held was

shown independently in Aczel[1967], Thomason [1968] and
Fitting [1969].
#16

A NATURAL DEDUCTION SYSTEM

The natural deduction systems for modal logics presented in
earlier chapters needed two kinds of subordinate
derivations, ordinary and strict.

The underlying Classical

system only needed one kind though, ordinary subordinate
derivations (see C~apter Four #10).

As a matter of fact,

for Intuitionistic logic too we need only one kind of
subordinate derivation, but this time all of them will be
strict.
Since we need only one kind of subordinate derivation,
we need only one kind of box, so we use the simpler
single-lined version.

Consequently natural deduction

proofs for Intuitionistic logic will look like Classical
logic proofs.

The difference is not in the appearance, but

CHAPTER NINE

496

in how we think about them.

To repeat, for our

Intuitionistic natural deduction system, all subordinate
derivations are strict ones.
Now for modal logics there were two ways of thinking
about strict subordinate derivations, what we called
A-style and I-style. In the I-style version a strict
subordinate derivation represented an argument about a

particular alternate world, while in the A-style version a
strict subordinate derivation represented an argument about
any alternate world. For our present purposes we use only
the A-style version.
question.

Indeed, we ask the following naive

Consider the Classical natural deduction system

as presented in Chapter Four #10 (propositional) and
Chapter Seven #10 (first-order).

If we interpret

subordinate derivations as being arguments about arbitrary,
generic, alternate worlds in an Intuitionistic model, which
of those rules is still correct?
First of all, the Iteration Rule must be replaced by a
Strict Iteration Rule, since all subordinate derivations
now are strict ones.

Essentially, instead of being able to

iterate a signed sentence from outside a box to the inside
of it, we can only do so if it is T-signed.

Such signed

sentences are the ones that are preserved in passing from a
world to an alternate to it.
Next, all ~he contradiction rules continue to hold
under the present interpretation.
All the propositional introduction rules likewise
continue to hold. We check these. They fall into two
classes using uniform notation, o< I and pI. We consider
them separately.

INTUITIONISTIC LOGIC

O<I

0(
0{

497

1

2

There is no subordinate derivation involved here, so what
must be shown is that, in an Intuitionistic model, if

r II-

and r 11- ex then r 11- o< • Now if o< is
2
ordinary, this is the case by condition R1
0{

1

in #4 (under option 1) which says

r II- <>< ~ r 11- 0( and r If- 0( •
1
2
If ~ is special, condition S1 from #4 says

r 11- « ~ <3 r *) < r * It- 0< and r * 11- « ) .
1
2
r B r , then r itself is some r * hence it

Now since

follows that r 11- oc and r 11- 0<. ~ r It-o< even for
1
2
special o<: • Thus rule o< I is correct under the present
Intuitionistic interpretation.

~I

{31

Consider the first of these.
is involved.
model.

Let

Now a subordinate derivation

be a fixed world in an Intuitionistic

What we must show is:

if, for every

f3 2 , then r If- {J • Since
r It- ~ 1 ~ r .Jt<- f3 1 this condition

impli~ r* It-

r*, r* If- (:3

1

498

CHAPTER NINE

becomes. ( V' r *) ( r * ..J1o<equivalently,

f3

1

==:::::::> r * 11- ~

2

) ~r 11- R. or, again
r

( '<I r *)( r * II- (3
or r * 11- (3 ) ~ r It- P. • Incidentally,
1
2
r
the second f3 I rule also turns into this condition.

Now for special (3 we have i tern S2 of /14,

r n- ~ ~ < v r *) < r * 11- f3

or r * If- (3 )
2
which immediately gives the desired condition. On the
1

other hand, trivially ( 'I r *) ( r *If-

or r * It- (3 )
1
2
implies r II- f3 or r 11- (3 , and we have condition R2 of
1
2
114 that says, for regular f3 ,

f3

r II- {3 ~ r II- (3 1 or r If- ~ 2
Hence we get the desired condition for regular (3 also.
Similarly, as the reader can check, all the (3 E rules
continue to hold.
But (important difference) the
regular o<.

~E

rules only hold for

That is, the following two rules must be

dropped:
F.::::>E

F(X .::::>Y)

F-E

TX

F-X

TX

FY

For instance, the first of these would say if
then

r 11- X and

r ..1r X::> Y

r ~ Y, and in general this is not correct,

the proper condition being i f r ..1r X:::> Y then
( 3 r*)( r * 11- X and r *JI'- Y).
Similarly if we go through the quantifier rules of
Chapter Seven 1110 we find that all are correct under the
present Intuitionistic interpretation except for special
6 •

We leave the checking of this to the reader.

INTUITIONISTIC LOGIC

499

Thus the problem cases are the same ones that were
exceptions in the Beth tableau system.

The question is,

what should replace these three Classical rules, F :::> E,
F ~ E and F v E that do not hold under the present
interpretation?

Well, we will not replace them with

It turns out that if we simply drop them we get

anything~

a complete Intuitionistic natural deduction system, as we
will show in the next few sections.
We do not present a formal argument for correctness
since, given the informal arguments above, the reader
should have no trouble producing a formal version along the
lines of Chapter Four #16.
We conclude with a presentation of the entire
Intuitionistic natural deduction system.
Strict Iteration Rule:

Let B be a box, and let S be the

set of signed sentences that: 1) have occurrences above B
that 2) have the same nest level as B.
S# may be repeated directly inside B.
Contradiction Rules:

TX
FX
TZ

T..L.

FT

TZ

TZ

Introduction and elimination rules:
o< I

o<l.
o<.._
0(

Then any member of

500

0(£

CHAPTER NINE

o<
0(1
D(Ol-

f:3E

except for special

K

{3~

_{3_

(3

~....

(31

0(

FJI

/31

o(c)

5E

- b- S(c)

for any constant or parameter c

for a new parameter c, except for

special b •
#17

DIRECT CONSEQUENCES

In Chapter Four #11 we established several useful derived
rules for the system of Classical Natural Deduction. Now
we want to see which of them still hold for the
Intuitionistic system. The Intuitionistic restrictions can
make a difference.

For instance, in Chapter Four #10 we

gave two arguments showing that in the Classical system a

501

INTUITIONISTIC LOGIC

contradiction rule (TZ follows from TX and FX) is derivable
from the rest.

Neither argument holds in the

Intuitionistic version.

Of the two, the left-hand one

breaks down because we used the iteration rule on an
F-signed sentence, while the right-hand one fails because
We do not know, but we suspect,
that in the Intuitionistic system all the rules are

we used the F~E rule.
independent.

Z to symbolize that Z has a
Definition: We write S r
IN
proof constructed according to the rules of #16 together
with the additional rule: at any time any member of S may
be used as a line provided it is not inside a box.
We read S ~IN Z as Z is deducible from Sin the
Intuitionistic natural deduction system. Here S is a set
of,

and Z is a single signed sentence of L(C up ) •
0

0

Note the difference in the role of assumptions (members
of S) here and in the Classical system. This is forced on
us by the shift from ordinary to strict subordinate
derivation.
Now the most important result about the Classical
system was Theorem 4.11.1. That carries over with some
modifications, as follows.
Z.
Z then TS r
Z and TS,X r
Theorem 17.1: If TS,X r
IN
IN
IN
Here the members of S are unsigned while X and Z are
signed.
The proof of Theorem 4.11.1 still applies, provided
we are careful about certain points. We simply discuss the
Proof:

CHAPTER NINE

502

problem areas.
We suppose we have derivations in the Intuitionistic
system of Z from TS,X and from TS,>f.

We show there is one

of Z from TS alone.
Theorem 4.11.1 was actually proved twice, the two
arguments being presented in parallel columns. We show one
of those two arguments suffices for our present needs. We
discuss the two together for the moment.
In the Classical argument the assumptions (members of S
in the earlier version) were used in going from line 1 to 2
and again from line 4 to 5, in both cases inside boxes. In
the Intuitionistic system in general such assumptions can
not be introduced into boxes, only outside of them.

But

now we are considering only T-signed assumptions (members
of TS) and these can be introduced outside the boxes, then
iterated into them using the strict iteration rule. So
this point presents no difficulties.
In the two derivations given in the proof of Theorem
4.11.1, the~ E rules were never used.

Since all the other

Classical introduction and elimination rules also are
present in the Intuitionistic system, there is no problem
here either.
Finally, in the derivation in the proof of Theorem
4.11.1, the iteration rule was used in both versions.

In

the left-hand version, X<Z was repeated into a box, and in
the right-hand version X<Z. Now, if X<Z happens to be a
T-signed sentence, the entire right-hand derivation is
correct, according to the Intuitionistic rules, and we are
done. If X<Z is F-signed, a glance at the chart defining
the < connective shows X must be T-signed and Z F-signed.
Then X is F-signed and hence X<Z is T-signed.

If so, the

503

INTUITIONISTIC LOGIC

entire left-hand derivation is correct according to the
Intuitionistic rules.

Thus one version must apply, and our

present argument is done.
torollary 17.2:
Proof:

I f TS f-

IN

T- A then TS f-

IN

FA.

The proof of Corollary 4.11.2 carries over with no

difficulty.
In Chapter Four we produced two derived rules for
negation that were simpler than the official ones. Only
one of these carries over to the Intuitionistic system,
namely

using essentially the same argument.
F~X

to get TX, fails.

The other rule, from

A glance at the argument we gave in

the Classical case shows we used Iteration on an F-signed
formula. And it is easy to produce Intuitionistic models
to show the rule is not, in fact, Intuitionistically
correct.
For the Classical system we introduced a very useful
derived rule called Reverse. That rule, and the argument
for it, carries over to the present setting.

CHAPTER NINE

504

Reverse Rule:

FZ

TJ..

TZ
We do not repeat the argument that this is a derived
rule, but simply refer the reader to Chapter Four.
#18

COMPLETENESS OF THE NATURAL DEDUCTION SYSTEM

We follow the general idea that we used in #15 for
axiomatic systems.
Definition:

Let S be a set of signed sentences of

L( C u P ) • We call S N-consistent if:
0
0
1) S contains only a finite number ofF-signed
sentences,
2)

S omits infinitely many parameters, and

3)

Say S# = TW, for a set W of unsigned sentences, and

St:> :F{X , ••• ,X}.
1
n
Note:

Then TW_..t<.

IN

T(X v ••• vX
1

n

VJ..).

As usual, the notation assumes commutativity and

associativity of v, which is easily shown in the Natural
Deduction system.
Proposition 18.1:

Let C be the collection of all

N-consistent sets.

Then C is a first-order Intuitionistic

INTUITIONISTIC LOGIC

505

consistency property.
We check several cases, and leave the rest to the
reader. Once again, uniform notation is not a great help,
Proof:

largely because of the difference in the treatment of
T-signed and F-signed sentences in the definition of
N-consistent.
Let S E. C: be fixed for each of the cases we consider.
LetS\? =F{X , ••• ,X}, and let (X v ••• vX v.L.) be
n
1
n
1
abbreviated by N.
case Tv)
TX v YES ~ S u {TX} E. C or S u {TY} E. C.
As usual, we show the contrapositive. Suppose S u {TX} ¢..c
and S u {TY} ¢C.

Since S E. C: it is easy to see that in both

instances it must be clause 3 of the definition of
N-consistency that breaks down. Thus we have
TN
IN
TN
IN
From the first of these, trivially,
S/I,TX 1-

and

S/I,TY ~

TN
S/1, TX v Y, TX 1IN
but also, from TX v Y,FX we can get TY by rule Tv E, and
from S/I,TY we can get TN, hence
S/1, TX v Y, FX 1-

IN

TN.

Then by theorem 17.1,
TN.
IN
If TX v Y E. S, this would say that S was not N-consi stent, so
SEC. Hence TXvY £ S.
S/1, TX v Y 1-

case F~)
F- X € S ===!} Sll u {TX} E. C
Again, we show the contrapositive. Suppose
Sll v {TX} t C. Since SEC: it must be clause 3 that fails,

506

CHAPTER NINE

and hence
Sll, TX t-

IN

T ...1...

Then we claim Sll 1-

IN

T~X,

by the following derivation.

( 1) TX

(2) T .L

(3) T- X
(4)

FX

Explanation:

(1) is an assumption.

This is a derivation

from S#, so members of S# can be introduced and, being
T-signed, can be iterated into boxes.
from (1) to (2) since S#,TXt-

IN

Thus we can pass
Then (3) is from (2)

T.L.

by a Contradiction Rule, (4) is from (l) and (3) byT-E
and (5) is from (1) and (4) by T~I.
Now, since S# 1-

IN

T -X but

s is N-consi stent

follows that F~x I= s.
Note:

'

it

The F:;:, case is similar, but simpler, making use

of T :::>I instead of T ~I.
case F '<i)
F('Vx)A(x)e:S~Sffu{FA(c)}E:C

for some c.

Once again, the contrapositive.

So, suppose

S//u{FA(c)} ¢. C for any c.

Let c

occurring inS or in A(x).

Then S//U{FA(c )} rt. c.

0

be a parameter not
0

As

usual, since SEC, it must be clause 3 that fails, and
hence

INTUITIONISTIC LOGIC

Sll r
TA(c ) •
IN
0
We claimS# r
T(V x)A(x).
IN
derivation.

(1)

F( 'I X)A(x)

(2)

FA(c )

507

Indeed, we have the following

0

(3) TA(c )
(4) T ..l..
(5)

Explanation:

0

T( 'V X)A(x)
(1) is an assumption.

(2)

follows by FV E.

(3) comes since we are supposing that Sll 1-

TA( c ) •
0
is from (2) and (3) by Contradiction, and (5) is by
IN

( 4)

Reverse.
Since S# ~
T(V x)A(x), and Sis N-consistent, it
IN
follows that F(~ x)A(x) t S.
The rest of the cases are left to the reader.
Corollary 18.2:

Let S be a set of unsigned sentences of

L(C ) and let X be a single such sentence.
0

1)

2)

If S F X then TS r
TX.
I
IN
If X is Intuitionistically valid then

f-IN TX.

Proof: Suppose TS~
TX. Then trivially TS u{FX} is
IN
N-consistent, hence a member of C, hence Intuitionistically
satisfiable by the Model Existence Theorem (12.1).
S -1!: I X.

Part 2 is a special case.

Thus

508

#19

CHAPTER NINE

GENTZEN SYSTEMS AND INTERPOLATION

In Chapter Three #6 we gave a method of turning tableau
system rules into sequent calculus rules, essentially by
reading them upsidedown. We illustrated the technique by
applying it to propositional S4.

Well, the same method

works on the two tableau systems for Intuitionistic logic
introduced in #5 and #11. If we apply it to the Beth
tableau system we get a sequent calculus essentially the
same as that presented in Beth [1959].
For example, one of the tableau rules is

s, o(
S/1, o< , o<
1

for special o< •

2

This turns into

IS#'

0(

1

'

0(

2

1S, <>< 1

I

for special o<,

where we use the notation of Chapter Three #6.
are two special

o< 1 s,

repetitions for F

ISfl 'TX I

Now, there

so this gives us (suppressing

X).

lstl, TX,FYI

and

ls,F-xl

ls,FX;:)YI

and, writing U for the set such that TU=S/1, these are the
sequent rules
U, X ____,.

u-v, -x

and

u,x-Y
U -V,X-:JY

INTUITIONISTIC LOGIC

509

In fact, these are two of the rules in Beth [1959] section
114.

Indeed, it was by reversing these steps that the

present Beth tableau system was created in the first place.
Likewise the same method will turn what we are calling
the Gentzen tableau system into a sequent calculus. It is
similar to Gentzen's original one, presented in Gentzen
[1935].

The main difference is that in Gentzen's actual

system, at most one sentence can occur on the right of an
arrow; in our version, more can occur but only one can ever
be "used".

It is not difficult to convert proofs between

these two versions.
On the other hand, Gentzen's original formulation is

easily proved complete directly, by an application of the
model Existence Theorem.

Simply, call a finite set

S:{TX , ••• ,TX ,FY , ••• ,FY} consistent if, for each Y.
1
n
1
k
1
the sequent X , ••• ,X --+Y. is not provable in Gentzen' s
1
n
1
Intuitionistic sequent calculus, system LJ of Gent zen
[1935]. This is a first-order Intuitionistic consistency
property and completeness follows as usual.
In earlier chapters we have been in the habit of
proving Interpolation theorems by using Symmetric sequent
calculi using signed sentences (we started this in Chapter
Three #7).

Now, symmetric systems can be created for

Intuitionistic logic, but they seem to be of little use in
proving Interpolation.

After some experimentation we have

produced a rather asymmetric sequent calculus, using signed
sentences of course, that will help.

In it, only T-signed

sentences may appear on the left of an arrow, while on the
right we have only F-signed sentences, with at most one
exception. That is, we allow at most one T-signed sentence
on the right.

510

CHAPTER NINE

The intended reading of a sequent is the same as
Thus, if r is a possible world, we say

always.

r 11- U ~ V provided: if r
r forces some member of V.

forces every member of U then
And we call a sequent valid if

it is forced by every world, under every interpretation, in
every Intuitionistic model.
The reader may find the following observation useful,
given the curious restrictions we are now imposing on
sequents.

Consider the sequent

TX , ••• , TX ----+ FY , ••• , FY , TZ. To say this is
1
n
1
k
forced by world r is equivalent to saying: if r
all of X , ••• ,X, then if also r
1
n
then r must force z.

forces

forces all of Y , ••• ,Y,

Now we present the sequent calculus rules.

1

k

The

sentences sometimes appearing above the arrows will be
explained when we come to prove the Interpolation Theorem
later on.

For the time being, ignore them.

In the axioms and rules, all signed sentences are from
Further, U and V are finite sets such that 1) U
contains no F-signed sentences and 2) V contains at most

L( C uP ) •

0

0

one T-signed sentence.
Axioms:

X

U,TX-VI> ,TX
u.2....vt. , TX,FX
U, T..L. ...:!:....v
U ~V,F.L
U ~Vp ,TT

INTUITIONISTIC LOGIC

Rules:

T" L)

A
U,TX,TY-V
U,TXAY~V

F 1\ R)

A

u~ V,FX,FY

U ____, V,FX" Y
T" R)

A
U----. Vp ,TX

u
Tv L)

1\

A
U,TX--+V

U,TXVY
F VR)

Tv R)

B
u - v ; ,TY

A
U--+V,FX
:A:"B
u

VI> , TXI\ Y
B
U,TY--+V
:A:vB
v
B
u-v,FY

V,FX vY

A
U ----. VI> , TX

A
U---+VI:>,TY

u----., VI> , TXv Y

U -VI:> ,TXvY

--=---.---=-~~:...,_-

A
U--+Vv ,TX
u-v,F-x
T-R)

A
U--+Vt> ,FX
U - v ; ,T-X

T :::> L)

U,TY~V

511

CHAPTER NINE

512

A
U---+Vp ,TX
AA ~
u

F :::> R)

B
u-v,FY

V,FX::l Y

A
U---+Vp ,FX,TY

T :> R)

u-v~o

, TX::>Y

A
U,TX(c) - v

T 31)

U,T(3 x)X(x)- V

A
u -v,FX(c)

F 3 R)

U ~ V ,F( :3 x)X(x)
U

T 3 R)

u
TV L)

F ~ R)

( 3

A(c) Vt> ,TX(c)
x)A(x)
VI> , T(3 x)X(x)

A(c)
U , TX (c) ---'----+ V
( V x)A(x)
U,T('v' x)X(x)
U

A(c)

v

V,FX(c)

( 3 x)A(x)

U --'---'----'--~ V ,F( v x)X(x)

T~R)

A

U---+VI> ,TX(c)
u - n , TC v x)X(x)

Restrictions:

In T :3 L, F 3 R and T 'v' R, c must be a

parameter that does not occur in the sequent below the
line.

On the other hand, in T3R,

T~L

and F'VR, c can be

any constant or parameter.

This completes the presentation of the sequent

INTUITIONISTIC LOGIC

calculus.

513

Proof means what it usually does for a sequent

calculus.
While this is not a symmetric system in the sense of
earlier chapters, still there is a certain degree of
symmetry involved: F-signed sentences on the right of the
arrow are interchangable with !-signed sentences on the
left.

More precisely.

Definition:

By a variant of a sequent we mean the result

of deleting any number of F-signed sentences from the right
of the arrow and adding their conjugates to the left, and
any number of !-signed sentences from the left and adding
their conjugates on the right.
Example:

U,TX---+VI> ,FY,TZ is a variant of

U, TY ---+V~ ,FX, TZ.
Note that the only sequents that can be proved in the
system above are those meeting the restrictions that no
F-signed sentence can occur on the left of the arrow and at
most one !-signed sentence can occur on the right. The
axioms meet this condition, and the rules preserve it.
Further, any variant of a sequent meeting this condition is
another such sequent.

Indeed, we actually have the

following result about variants which will play an
important role shortly.
Proposition 19.1:

Any variant of a provable sequent is

another provable sequent, indeed with a proof of the same
length.

514

CHAPTER NINE

Proof:

Left to the reader.

Now the correctness of the system above is relatively
straightforward:

one shows each axiom is

Intuitionistically valid, and the rules preserve validity.
We treat one case by way of illustration,

T~R.

Suppose the sequent U--+Vt> ,FX is valid.
the sequent u~vl:> ,T~X.

Choose some Intuitionistic

model <G,R,P, ~> and some interpretation v.
world r e G.

Suppose r

r forces some member of

Well, if not, then r would force every

, T- X, under v.

member of U and also every member of V1:>
v).

Choose some

forces every member of U under the

interpretation v; we show
V~

Consider

and F- X (under

v(- X) or r )1'- ~ v(X) then for some

Since r ..If-

r *, r * 11- v(X).

But the members of U and of V r

are all

T-signed, and T-signed sentences are preserved under jumps
to alternate worlds.

Since r forces all of U and all of

(under v) so does r *·

V~

Since U--+V~ ,FX is assumed

valid and r * forces all of U (under v), then

r * must

force one of V~ , FX (under v) and this is impossible.
Thus U---:)VI:> ,T""'X must be valid.
Thus we have correctness.

Completeness follows easily

from the Model Existence Theorem (12.1) in familiar ways.
Let {TX , ••• ,TX ,FY , ••• ,FY} be a finite set of signed
n

1

1

k

sentences of L( C uP ) • Temporarily, let us call it
0
0
inconsistent if, for some Y., TX , ••• ,TX ---:)TY. is
1

1

provable in the sequent calculus above.
F's, we call a set {TX

n

1

If there are no

••• TX} inconsistent if
' n
TX , ••• , TX - i s provable. Similarly if there are no
1

T's.

n

1'

Equivalently, we may unify these cases by always

515

INTUITIONISTIC LOGIC

considering T T and F ~ to be added to the set. Call a
finite set consistent if it is not inconsistent. If we let
nC C be the collection of all consistent sets, it is
straightforward to show C is a first-order Intuitionistic
consistency property.
Now, suppose the sequent TX , ••• , TX ____, FY , ••• , FY , TZ
k
1
n
1
is valid. Then it must be provable too. For if not,
neither would the variant TX , ••• , TX , TY , ••• , TY ~rz and
k
1
n
1
hence the set {TX , ••• ,TX ,TY , ••• ,TY ,FZ} would be inC,
k
1
n
1
hence Intuitionistically satisfiable, which is impossible
if TX , ••• , TX ______,. FY , ••• , FY , TZ is valid.
1

n

k

Thus the system is both correct and complete. Now we
use it to give a proof of an Intuitionistic interpolation
result.
The definition of an interpolation formula for a
sequent U ----;V and for a sentence X =>Y is given in Chapter
Seven 1113.
Let X ':lY be a sentence of L(C up ) •
0
0
X':l Y is Intui tionistically valid, then X:':l Y has an

Theorem 19.2:

If

interpolant (in Intuitionistic logic).
X::>Y is valid if and only if the sequent TX----7TY
is valid. Further, any interpolant for X ':lY is one for
Proof:

TX----? TY and conversely. So, as usual, it suffices to show
each valid sequent has an interpolant. Since we have
completeness and correctness, this is the same as showing
every provable sequent has an interpolant. Again, as usual
we do this by an induction on proof length. It is now that
we make use of the sentences written above the arrows.

516

CHAPTER NINE

These are intended to be interpolants.
It is straightforward to check that the suggested
interpolants for the axioms really are such. And in the
various rules of derivation, if an interpolant is known for
the premis sequents we have, in most cases, indicated how
to produce an interpolant for the conclusion.

The reader

may easily check the correctness of our work.
There are two exceptional, and slightly tricky cases,
however:

T- L and T ::::> L.

arrow."

In neither case have we said how to turn premis

In these a formula "crosses the

interpolants into conclusion interpolants.

We treat them

now.
case T-L)

U--+VI? , TX
U, T-X ---+V

Recall, the proof is by induction.

Suppose now that all

provable sequents whose proof is of size n have
interpolants. Suppose the premis in the rule T~L above
has a proof of n steps (hence has an interpolant).

We

produce an interpolant for the conclusion.
Since u--.vl> ,TX has a proof of n steps, by
Proposition 19.1, so does the variant
VI>

--u,rx

<*)

Then by the induction hypothesis, this sequent has an
interpolant, A, say.
U,T-X---+V.

We claim -A is an interpolant for

Since A is an interpolant for(*), all relation
symbols, constant symbols and parameters of A are common to

INTUITIONISTIC LOGIC

Vp and to U, TX.

517

Hence they are also common to U, T -X and

to V.
Further, since A is an interpolant for(*), we have
TA-U,TX
is valid, hence provable.

From it we get

U---->FA,TX

(variant, hence also provable)

U,T-X -FA

(by T-L)

U,T-X-T-A (by T-R)
hence this sequent is valid.
Similarly since A is an interpolant for(*), we have
VI> ___.,. TA
is valid, hence
----+VI> , TA

(variant)

(byT-L).
T-A--V
Thus we have verified that -A is an interpolant for

u,r-x--v.
case T :;:~ L)

U- - V1:1 , TX
U, TY U,TX::>Y---+V

V

----~~~~--~~~--~

Again let us suppose we know how to produce
interpolants for the premises and for variants of them and
let us show how to get an interpolant for the conclusion.
Instead of U---+ VI> , TX we work with the variant
VP ---+ U, TX.

We are supposing this has an

interpolant, say it is A.

Further, let us suppose B is an

interpolant for the sequent U,TY---+V,

We leave it to the

reader to verify that A::> B is an interpolant for the
conclusion sequent U,TX:::lY ---+V.
This concludes the proof of the Interpolation Theorem.

CHAPTER NINE

518

Remarks:

Just as in earlier chapters an Intuitionistic

version of the Beth Definability Theorem now follows.

We

omit the arguments.
The proof given for Theorem 19.2 is a re-casting of the
one presented in Fitting [1969].

In turn, it was a

descendant of the one in SchUtte [1962], which was the
first Interpolation Theorem proof for Intuitionistic logic.
Notice that the proof is actually constructive: it says
how to produce an interpolant, given a sequent calculus
proof.

There is also a constructive proof in Prawitz

[1965], along quite different lines.

Likewise there is a

model-theoretic (and non-constructive) proof in Gabbay
[1971].
#20

CONCLUDING COMMENTS

This section is a grab-bag of results relating
Intuitionistic logic and various other logics.
Going back to G8del [1933] and more especially,
McKinsey and Tarski [1948], it has been known that there
are embeddings of Intuititionistic logic into S4. The
simplest one just has us insert an occurrence of o before
each atomic subformula and before each subformula involving
a special connective or quantifier.

More precisely, we

define a mapping M from non-model to modal formulas as
follows:
M(A)= DA

for A atomic

M(X v Y):M(X) v M(Y)
M(X A Y):M(X) /\ M(Y)
M(- X)= Cl-M(X)
M(X =>Y): O(M(X) :::> M(Y))

INTUITIONISTIC LOGIC

519

M((3 x)X(x))=(3 x)M(X(x))
M( ('<I x)X(x)) = D ('>;/ x)M(X(x)).

Proposition 20.1:
modal operators.

Let X be a sentence of L(C ) without
0
X is Intuitionisticall y valid iff M(X) is

S4-valid.
Proof:

We leave to the reader the easy construction of an

S4 counter-model to X, and conversely.
It was this result that suggested Kripke's
Intuitionistic model theory in the first place, since an S4
version had been previously developed.
The translation above is not the only one from
Intuitionistic logic to S4.

Indeed, the easiest one to

characterize is simply: put an occurrence of 0 in front
of every subformula. That such an embedding also works
follows immediately from Proposition 20.1 together with the
fact that the following are S4-valid:
( 0 X A C!Y)""' 0( D X A 0 Y)

( 0 X v DY)"" D (oX v o Y)
(3 x) o X(x) ""0 (3 x)o X(x).

The schema X v ~x is known to be characteristic of
Classical logic in the sense that its addition to
Intuitionistic logic is exactly what is needed to get
Classical logic. Now, M(X v ~X)=M(X) v o~M(X). This is
equivalent to -

D ~ M(X)::> M(X).

It is easy to check that,

in S4, M(X): DM(X), hence the formula is further equivalent
to ~a~OM(X)::> DM(X), or 0 DM(X):> DM(X), one of the
characteristic S5 theorems.

This suggests the following.

520

CHAPTER NINE

Propostion 20.2:

Again let X be a sentence of L(C )
0
without modal operators. X is Classically valid iff M(X)
is S5-valid.
Proof:

In one direction things are trivial.

not Classically valid.
which X is false.

Suppose X is

Then there is Classical model in

From this create, in the obvious way, a

one-world Kripke modal model.

It is, of course, an
S5-model and in it o Z Z for every sentence Z. It follows
that M(X) is not forced, hence is not S5-valid.

=

In the other direction, let us define M(X) for a set S
by
M(S):{M(X) I X E. S}.

Now define a collection C as follows: C consists of all
sets S of unsigned non-model sentences of L( C v p ) such
that M(S) is S5-satisfiable.

0

0

C is a Classical consistency

property.

Now, i f M(X) is not S5-val~d, ~M(X) is
S5-satisfiable. As we observed in the paragraph preceeding
this proposition, M(X) v o~M(X) is S5-valid. It follows
that o~M(X) is S5-satisfiable. But this is just M(~X),
hence {~X} E IC.

Then -X is Classically satisfiable, by
the Classical Model Existence Thorem, hence X is not
Classically valid.

Remark:

This is the first place we have made much use of

the Classical Model Existe.nce Theorem.

It will play a role

in many of the results in this section. A proof of it can
be extracted from the work in earlier chapters by ignoring
the modal cases.

Or a direct proof can be found in

Smullyan [1968], Chapter VI.

521

INTUITIONISTIC LOGIC

There are also connections between Classical logic and
S4. Above we used a translation that inserted occurrences
of [ l . Now we consider one that inserts occurrences of
More precisely, for a non-modal formula X, let N(X)
be the result of inserting an occurrence of 0 <> before
0 ().

every subformula of X.
Proposition 20.3:

For a non-modal sentence X of L(C ), X

is Classically valid iff N(X) is S4-valid.

0

In one direction we use one-world models, just as
in the previous proposition. And in the other direction we

Proof:

again use Classical consistency properties. Thus, let C
consist of those sets S such that N(S) is S4-satisfiable.
C is a Classical consistency property, and we use this
fact exactly as in the previous proof.
It is somewhat more work now to establish that C is a
Classical consistency property.

The following are

S4-valid, and this will help.
N(~(XA Y)) ::l <><•<~X)v •<-Y))

() (3 x)[•((3 y)A(y)) ::l•(A(x))J
This translation can be slightly simplified.

It is

not necessary to put o () in front of subformulas of the
form X A Y. This follows from the S4-validity of
(OOXAD()Y)

= O()(O()X A DOY).

Proposition 20.3 comes from Fitting [1970] where it
was proved using a "complete sequence" type of
construction, suggested by Cohen's work on the independence
of the continuum hypothesis, specifically his proof of the
so-called Truth Lemma.

The present proof, using

522

CHAPTER NINE

consistency properties, is from Fitting [1973].
Some of the work above can be combined with resuls in
earlier chapters to produce an interesting connection
between Classical logic and Intuititionistic logic, at
least in the propositional case.
Proposition 20.4:
formula.

Let X be a non-modal propositional

X is Classically valid iff --X is

Intuitionistically valid.
Proof:

X is Classically valid iff
M(X) is S5-valid (by Proposition 20.2)
iff OOM(X) is S4-valid (by Theorem 5.8.1)
iff

<:? M(X)

iff

D¢ M(X)

is S4-valid (since M(X)::: DM(X) in S4)
is S4-valid (by a combination of the Rule

of Necessitation and axiom schema
iff

o-O-M(X)

DZ ::JZ)

is S4-valid

iff M(- -X) is S4-valid
iff --X is Intuitionistically valid (by Proposition
20.1).
This proof does not extend to the first-order case
because Theorem 5.8.1 does not extend.

In fact, the result

fails once quantifiers are introduced.

But it does hold

provided there are no universal quantifiers present.
Proposition 20.5:

Let X be a non-modal sentence of L(C )

without any occurrences of

'V.

0

X is Classically valid iff

- ~x is Intui tionistically valid.

523

INTUITIONISTIC LOGIC

Proof:

If ~~X is Intuitionistically valid, X is

Classically valid by the usual one-world model argument.
In the other direction we use consistency properties as
follows.

0

For a non-modal sentence Z of L( C u p ) , let z be the
0

0

result of replacing, in Z, all occurrences of 'V by
occurrences of

, then prefixing - - to the result.
0
For a set S, let s = {Z 0 I Z € S}. Form a collection C as
follows: if s 0 is Intuitionistically satisfiable, put Sin

nC C .

~3-

Then C can be shown to be a Classical consistency

property.
Now, suppose --X is not Intuitionistically valid.
Then i t follows from the definition of 11:- on

~

that -X

must be Intuitionistically satisfiable, hence so is ---X

=

(since - Z ~-- Z is Intuitionistically valid). Since X
0
contains no occurrences of v, ~--X= (~X) , hence
{-X} E:

c.

Then by the Classical model existence theorem

-x is Classically satisfiable, hence X is not Classically
valid.
The result above is, in a sense, at the heart of
forcing techniques in set theoretic Independence proofs.
There is a proof of it, in the spirit of Cohen's work in
set theory, in Fitting [1969] Chapter Four #8.
Another well-known connection between Classical and
Intuitionistic logic follows.
Definition:

Let X' be the result of inserting ,__ ~ before

every atomic subformula of X.
Lemma 20.6:

Let X be a non-modal sentence of L(C up ) •
0

0

524

CHAPTER NINE

If X contains no occurrences of v or 3 , then X' is stable
in the sense that --X' =>X' is Intuitionistically valid.
Proof:

By induction on the degree of X.

Proposition 20.7: Let X be a non-modal sentence of L(C )
0
containing no occurrences of v or 3 • X is Classically
valid iff X' is Intuitionistically valid.
Proof: In one direction, one-world Intuitionistic models
suffice, as usual. And in the other direction we use
Classical consistency properties.
For a set S, let S' = {X 1 I X E S} •

Let C consist of

all sets S in which v and 3 do not occur, such that S' is
Intuitionistically satisfiable.

C can be shown to be a

Classical consistency property. Lemma 20.6 is needed here.
For instance,-- (3 y)[-(\1 x)--F(x)::>-F(y)] is
Intuitionistically valid (use tableaus). Hence, for a
formula A, without v or 3 , since A1 is stable, we have
the Intuitionistic validity of
--(3 y}[-(\1 x)A'(x)::>-A'(y)].
showing one of the

~

-cases for C.

This is of use in
Then the argument

concludes in the familiar way.
Finally we should include a brief mention of so-called
Constant domain logic, CD. This is the logic determined by
the class of all Kripke Intuitionistic models in which the
P map, from possible worlds to sets of constants, is a
constant map, P( r) = IP'( A) for all r, A. It is analogous
to the various constant domain modal logics considered in
earlier chapters.

INTUITIONISTIC LOGIC

525

The logic CD is known to agree with Intuitionistic
logic on certain classes of formulas.

For example, if X

contains no occurrences of 'V, or if X contains no
occurrences of v and 3 , then X is valid in all
Intuitionistic models iff X is valid in all CD models.
Gabbay [1981] Chapter 3 #3; Fitting [1969] Chapter 6 #6.
Gorneman [1971] has shown that CD is axiomatically
characterized by adding the schema
('VX)(BvA(x)) :::>(Bv('f/x)A(x)) to Intuitionistic logic.
A prefixed-tableau system for CD can be produced
easily from the propositional system sketched in #8, by
adding the quantifier rules of Chapter Eight #10.
this to the reader.

We leave

On the other hand, no non-prefixed cut-free tableau
system for CD apparently exists.

This time we can not base

an argument on the failure of the Interpolation lemma, as
we did for constant domain modal logics in Chapter Seven
#15.

The Interpolation lemma holds for CD.

a high degree of probability.

At least, with

The Interpolation lemma for

CD was first proved in Gabbay [1977], though there is an
error in the proof which may or may not invalidate it.

It

was again proved in Lopez-Escobar [1981], though there is
an error in that proof too, sufficient to make it
unacceptable.

However, there is yet another proof, along

different lines again, in Lopez-Escobar [198?].)
Lopez-Escobar [198?] contains a direct argument that
no cut-free sequent calculus can exist for the logics CD,
using a careful and precise definition of sequent calculus.
This should rule out all possibility of a cut-free tableau
system for CD of the kind that we have been investigating
throughout this book.

So here we make

an end.

BIBLIOGRAPHY
Aczel, P.H.G.
[1967]

Some results on intuitionisti c predicate

logic, abstract in Journal of Symbolic Logic, vol 32 (1967)
pg 556.
Barcan, R.
[1946]

A Functional calculus of first order based on

strict implication, Journal of Symbolic Logic, vol 11
(1946) pp 1-16.
Becker, 0.
[1930]

Zur Logik der Modalitaten, Jahrbuch fUr
Philosophie und Phanomenologi sche Forschung, vol 11 (1930)
pp 497-548.
Beth, E. W.
[1953] On Padoa's method in the theory of definition,
Koninkl. Ned. Akad. Wetensch. Proc. Ser. A, vol 56, or
Indag. Math. vol 15 (1953) pp 330-339.
[1956]

Semantic Construction of Intuitionisti c Logic,

N.V. Noord-Holland sche Uitgevers Maatschappij (1956)
Amsterdam.
[1959]

The Foundations of Mathematics, North-Holland
Publishing Co. (1959), revised edition (1964), paperback,
Harper Torchbook, Harper & Row, New York (1966).
Boolos, G.
[1979]

The Unprovability of Consistency, Cambridge
University Press, Cambridge (1979).
526

BIBLIOGRAPHY

Bowen, K. A.

[1979]

Model Theory for Modal Logic, D. Reidel

Publishing Co., Dordrecht, Holland (1979).
Craig, W.

[1957]

Linear Reasoning.

A New form of the

Herbrand-Gentzen theorem, pp 250-268; Three uses of the
Herbrand-Gentzen theorem in relating model theory to proof
theory, pp 269-285, Journal of Symbolic Logic, vol 22

(1957).
de Swart, H.

[1976]

Another intuitionistic completeness proof,

Journal of Symbolic Logic, vol 41 (1976) pp 644-662.

[1977]

An Intuitively plausible interpretation of

intuitionistic logic, Journal of Symbolic Logic, vol 42

(1977) pp 564-578.
Dummett, M.

[1977] Elements of Intuitionism, Clarendon Press,
Oxford ( 1977).
Feys, R.

[1937]

Les logiques nouvelles des modalites, Revue

Neoscholastique de Philosophie, vol 40 (1937) pp 517-553
and vol 41 (1938) pp 217-252.

[1965] Modal Logics, Edited by J. Dopp, Collection de
Logique Mathematique, Serie B., E. Nauwelaerts, Louvain,
Gauthier-Villars, Paris (1965).

527

BIBLIOGRAPHY

528

Fine, K.
[1974]

An incomplete logic containing S4, Theoria,

vol 40 (1974) pp 23-29.
[1979]

Failures of the interpolation lemma in

quantified modal logic, Journal of Symbolic Logic, vol 44
(1979) pp 201-206.
Fitch, F. B.
[1952]

Symbolic Logic,~ Introduction, The Ronald

Press Co., New York (1952).
[1966]

Natural deduction rules for obligation,

American Philosophical Quarterly, vol 3 (1966) pp 27-38.
Fitting, M. C.
[1969]

Intuitionistic Logic Model Theory and Forcing,

North-Holland Publishing Co., Amsterdam (1969).
[1971]

A Tableau proof method admitting the empty

domain, Notre Dame Journal of Formal Logic, vol 12 (1971)
pp 219-224.
[1972]

Tableau methods of proof for modal logics,

Notre Dame Journal of Formal Logic, vol 13 (1972) pp
237-247.
[1972A]

Epsilon-calculus based axiom systems for some

propositional modal logics, Notre Dame Journal of Formal
Logic, vol 13 (1972) pp 381-384.
[1973]

Model existence theorems for modal and

intuitionistic logics, Journal of Symbolic Logic, vol 38
(1973) pp 613-627.
[1977] A Tableau system for propositional S5, Notre
Dame Journal of Symbolic Logic, vol 18 (1977) pp 292-294.

BIBLIOGRAPHY

[1978]

Subformula results in some propositional modal

logics, Studia Logica, vol 37 (1978) pp 387-391.
[198?] A Symmetric approach to axiomatizing
quantifiers and modalities, forthcoming.
Fitting, M.
[1975]

c. & Sonobe, 0.
Formulas of modal degree one, abstract in

Notices of the American Mathematical Society, vol 22 (1975)
pg A-325.
Gab bay, D.
[1971]

Semantic proof of Craig's interpolation

theorem for intuitionistic logic and extensions, I, II,
Logic Colloquium '69, edited by R. Gandy & C. E. M. Yates,
pp 391-410, North-Holland Publishing Co. (1971).
[1972]

Craig's interpolation theorem for modal

logics, Conference in Mathematical Logic - London '70,
Lecture Notes in Mathematics vol 255, pp 111-127,
Springer-Verlag, Berlin (1972).
[1977] Craig interpolation theorem for intuitionistic
logic and extensions part III, Journal of Symbolic Logic,
vol 42 (1977) pp 269-271.
[1981]

Semantical Investigations in Heyting's

Intuitionistic Logic, (1981) D. Reidel Publishing Co.,
Dordrecht, Holland.
Gentzen, G.
[1935]

Untersuchungen Uber das logische Schliessen,

Mathematische Zeitschrift, vol 39 (1935) pp 176-210 &
405-431; English translation, Investigations into logical
deduction, in The Collected Papers of Gerhard Gentzen,

529

530

BIBLIOGRAPHY

edited by M. E. Szabo, pp 68-131, North-Holland Publishing
Co., Amsterdam (1969).
G!:Sdel, K.
[1931]

Uber formal unentscheidbare SHtze der

Principia Mathematica und verwandter Systeme, Monatshefte
fUr Mathematik und Physik, vol 38 (1931) pp 173-198;
English translation in From Frege to G~del, pp 596-616,
edited by J. van Heijenoort, Harvard University Press,
Cambridge, Mass. (1967).
[1933]

Eine Interpretation des intuitionistischen

AussagenkalkUls, Ergebnisse eines mathematischen
Kolloquiums, vol 4 (1933) pp 39-40; English translation, An
Interpretation of the Intuitionistic sentential logic, in
The Philosophy of Mathematics, edited by J. Hintikka,
Oxford University Press (1969) pp 128-129.
Goldblatt, R. I.
[1976]

Metamathematics of modal logic, Part I,

Reports on Mathematical Logic, No. 6 (1976) pp 41-77.
[1976A] Metamathematics of modal logic, Part II,
Reports on Mathematical Logic, No. 7 (1976) pp 21-52.
~rneman,

S.

[1971]

A Logic stronger than Intuitionism, Journal of

Symbolic Logic, vol 36 (1971) pp 249-261.
Hallde'n, S.
[1951]

On the semantic non-completeness of certain

Lewis calculi, Journal of Symbolic Logic, vol 16 (1951) pp
127-129.

BIBLIOGRAPHY

Heath, T. L.
[1910]

Diophantus of Alexandria, second edition

(1910) Cambridge University Press, first edition (1885),
reprinted by Dover Publications, New York (1964).
Henkin, L.
[1963]

An Extension of the Craig-Lyndon interpolation

theorem, Journal of Symbolic Logic, vol 28 (1963) pp
201-216.
Heyting, A.
[1930]

Die formalen Regeln der intuitionistischen

Logik, Preussischen Akademie der Wissenschaften,
Physikalisch-mathematische Klasse, pp 42-56, 57-71 &
158-169 (1930).
[1956]

Intuitionism, an Introduction, North-Holland

Publishing Co., Amsterdam (1956).
Hintikka, K. J. J.
[1955]

Form and content in quantification theory,

Acta Philosophica Fennica, vol 8 (1955) pp 7-55.
Hughes, G. E. & Cresswell, M. J.
[1968]

An Introduction to Modal Logic, Methuen and

Co., London (1968).
Ja'skowski , S.
[1934]

On the rules of suppositions in formal logic,

Studia Logica, vol 1 (1934) Warsaw.

531

532

BIBLIOGRAPHY

Kanger,

s.

[1957] Provability in logic, Stockholm Studies in
Philosophy, vol 1, Almqvist & Wiksell, Stockholm (1957).
Kaplan, D.
[1966]

review of Kripke [1963], Journal of Symbolic

Logic, vol 31 (1966) pp 120-122.
Keisler, H. J.
[1971]

Model Theory for Infinitary Logic,

North-Holland Publishing Co., Amsterdam (1971).
Kelley, J. L.
[1955]

General Topology, D. Van Nostrand Co.,

Princeton (1955).
Kleene, S. C. & Vesley, R.
[1965]

The Foundations of Intuitionistic Mathematics,

North-Holland Publishing Co., Amsterdam (1965).
Kripke, S.
[1959]
of Symbolic
[1963]

A Completeness theorem in modal logic, Journal
Logic , vol 24 (1959) pp 1-14.
Semantical analysis of modal logic I, normal

propositional calculi, Zeitschrift fUr mathematische Logik
und Grundlagen der Mathematik, vol 9 (1963) pp 67-96.
[1963A]

Semantical considerations on modal logics,

Acta Philosophica Fennica, Modal and Many-valued Logics, pp
83-94 (1963).
[1965]

Semantical analysis of modal logic II,

non-normal modal propositional calculi, The Theory of

BIBLIOGRAPHY

Models, edited by J. W. Addison, L. Henkin & A. Tarski, pp
206-220, North-Holland Publishing Co., Amsterdam (1965).
[1965A]

Semantical analysis of intuitionistic logic

I, Formal Systems and Recursive Functions, Proc. of the

Eighth Logic Colloquium, Oxford 1963, edited by J. N.
Crossley & M. A. E. Dummett, pp 92-130, North-Holland
Publishing Co. ( 1965).
Lemmon, E. J.
[1957]

New foundations for Lewis modal systems,

Journal of Symbolic Logic, vol 22 (1957) pp 176-186.
[1965] Some results on finite axiomatizability in
modal logic, Notre Dame Journal of Formal Logic, vol 6
(1965) pp 301-308.
[1966] Algebraic semantics for modal logics I,
Journal of Symbolic Logic, vol 31 (1966) pp 46-65.
[1966A] Algebraic semantics for modal logics II,
Journal of Symbolic Logic, vol 31 (1966) pp 191-218.
Lewis, C. I. & Langford, C. H.
[1932] Symbolic Logic, second edition (1959) Dover
Publications, New York.
L6b, M. H.
[1955]

Solution of a problem of Leon Henkin, Journal

of Symbolic Logic, vol 20 (1955) pp 115-118.
Lopez-Escobar, E. G. K.
[1981]

On the interpolation theorem for the logic of

constant domains, Journal of Symbolic Logic, vol 46 (1981)
pp 87-88.

533

534

BIBLIOGRAPHY

[198?]

A Second paper on the interpolation theorem

for CD, to appear in Journal of Symbolic Logic.
Lyndon, R.
[1959]

An Interpolation theorem in the predicate

calculus, Pacific Journal of Mathematics, vol 9 (1959) pp
155-164.
[1959A]

Properties preserved under homomorphism,

Pacific Journal of Mathematics, vol 9 (1959) pp 143-154.
Matsumoto, K.
[1955]

Reduction theorem in Lewis's sentential

calculi, Mathematica Japonicae, vol 3 (1955) pp 133-135.
McKinsey, J. C. C.
[1939]

Proof of the independence of the primitive

symbols of Heyting's calculus of propositions, Journal of
Symbolic Logic, vol 4 (1939) pp 155-158.
McKinsey, J. C. C. & Tarski, A.
[1948]

Some theorems about the sentential calculi of

Lewis and Heyting, Journal of Symbolic Logic, vol 13 (1948)
PP 1-15.
Nadel, M. E.
[1978]

Infinitary intuitionistic logic from a

classical point of view, Annals of Mathematical Logic, vol
14 (1978) pp 159-191.
Ohnishi, M. & Matsumoto, K.
[1957]

Gentzen method in modal calculi I, Osaka

Mathematical Journal, vol 9 (1957) pp 113-130.

BIBLIOGRAPHY

535

[1959] Gentzen method in modal calculi II, Osaka
Mathematical Journal, vol 11 (1959) pp 115-120.
Padoa, A.
[1901]

Essai d'une Theorie Algebrique des Nombres

Entiers, precede d'une Introduction Logique

a une Theorie

Deductive Quelconque, Bibliotheque du Congr. Intern. de
Philos., vol 3 (1901) pp 309-365, Logique et Historie des
Sciences, Paris; portion reprinted in English translation
as Logical introduction to any deductive theory, in From
Frege to GOdel, pp 118-123, edited by J. van Heijenoort,
Harvard University Press, Cambridge (1967).
Per zanowski , J.
[1973]

The Deduction theorems for the modal

propositional calculi formalized after the manner of Lemmon
Part I, Reports on Mathematical Logic, vol 1 (1973) pp
1-12.
Prawitz, D.
[1965]

Natural Deduction, ! Proof-Theoretical Study,

Acta Universitatis Stockholmiensis, Stockholm Studies in
Philosophy 3, Almqvist & Wiksell, Stockholm (1965).
Quine, W.
[1950]

Methods of Logic, Revised Edition, Holt,

Rinehart and Winston, New York, (1950, 1959).
Rasiowa, H.
[1974]

An Algebraic Approach to Non-Classical Logics,

North-Holland Publishing Co., Amsterdam (1974).

536

BIBLIOGRAPHY

Rasiowa, H. & Sikorski, R.
[1968] The Mathematics of Metamathematics, Second
Edition Revised, Panstwowe Wydawnictwo Naukowe (Polish
Scientific Publishers) (1968).
Routley, R.
[1978]

Constant domain semantics for quantified

non-normal modal logics and for certain quantified
quasi-entailment logics, Reports on Mathematical Logic, no.
10 (1978) pp 103-121.
Schumm, G.
[1976]

Interpolation in S5 and some related systems,

Reports on Mathematical Logic, no. 6 (1976) pp. 107-109.
SchUtte, K.
[1962]

Der Interpolationssatz der intuitionistischen

Pr~dikatenlogik,

Math. Annalen, vol 148 (1962) pp 192-200.

Segerberg, K.
[ 1971 J

An Essay in Classical Modal Logic (three

vols.), Filosofiska Studier nr 13, Uppsala Universitet,
Uppsala (1971).
Siemens, D. F. Jr.
[ 1977]

Fitch-style rules for many mod.al logics, Notre
Dame Journal of Formal Logic, vol 18 (1977) pp 631-636.
Smorynski, C.
[1973]

Elementary intuitionistic theories, Journal of

Symbolic Logic, vol 38 (1973) pp 102-134.

BIBLIOGRAPHY

[1977]

On axiomatizing fragments, Journal of Symbolic

Logic, vol 42 (1977) pp 530-544.
[1978]

The Axiomatization problem for fragments,

Annals of Mathematical Logic, vol 14 (1978) pp 193-221.
Smullyan, R. M.
[1963]

A Unifying principle in quantification theory,

Proceedings of the National Academy of Sciences, (June
1963).
[1965]

Analytic natural deduction, Journal of

Symbolic Logic, vol 30 (1965) pp 123-139.
[1966]

Trees and nest structures, Journal of Symbolic

Logic, vol 31 (1966) pp 303-321.
[1968]

First-Order Logic, Springer-Verlag, Berlin

(1968).
[1973]

A Generalization of intuitionistic and modal

logics, in Truth, Syntax and l4odali ty, Proc. of the Temple
University Conference on Alternate Semantics, edited by H.
Leblanc, pp 274-293, North-Holland Publishing Co.,
Amsterdam (1973).
Sobocirl'ski, B.
[1953]

Note on a modal system of Feys-Von Wright, The

Journal of Computing Systems, vol 1 (1953) pp 171-178.
Solovay, R.
[1976]

537

Provability interpretations of modal logic,

Israel Journal of Mathematics, vol 25 (1976) pp 287-304.

538

BIBLIOGRAPHY

Steinacker, P.
[1979]

Zur Semantik superschwacher modaler Kalkfile,

Wiss. ~· Karl-Marx-Univ., Leipzig Ges. Sprachwiss. Reihe
28, no. 3 (1979) PP 319-323.
Thomason, R. H.
[1968]

On the strong semantical completeness of the

intuitionistic predicate calculus, Journal of Symbolic
Logic, vol 33 (1968) pp 1-7.
[1972]

Noncompactness in propositional modal logic,

Journal of Symbolic Logic, vol 37 (1972) pp 716-720.
[1974]

An incompleteness theorem in modal logic,

Theoria, vol 40 (1974) pp 30-34.
Veldman, H.
[1976]

An Intuitionistic completeness theorem for

intuitionistic predicate logic, Journal of Symbolic Logic,
vol 41 (1976) pp 159-166.
Wajsberg, M.
[1933]

Ein erweiterter Klassenkalkfil, Monatshefte ffir

Mathematik und Physik, vol 40 (1933) pp 113-126; English
translation in Logical Works by Mordechaj Wajsberg, edited
by Stanislaw Surma, Polish Academy of Sciences - Institute
of Philosophy and Sociology (1977).
[1938]

Untersuchungen Uber den Aussagenkalkfil von A.

Heyting, Wiadomosci !Jfatematyczne, vol 46 (1938) pp 45-101;
English translation in Logical Works by Mordechaj Wajsberg,
edited by Stanislaw Surma, Polish Academy of Sciences Institute of Philosophy and Sociology (1977) pp 132-171.

BIBLIOGRAPHY

539

\Jeaver, G. & Welaish, J.
[1979]

Back and forth arguments in modal logic:
interpolation theorems for a family of modal logics (at the
moment unpublished.)
Wright, G. v.
[1951]

An Essay in Modal Logic, North-Holland

Publishing Co., Amsterdam (1951).

INDEX
A-style natural deduction system
184
accessibility relation 15
Aczel, P. 495
alive 381
alphabet 11, 333
alternate Intuitionistic consistency property 482
alternate tableaus 33
analytic 191
analytic cut 192
Arrow Deduction Theorem 78
atomic formula 12, 334
augmented frame 265
augmented model 265
axiom of choice 60
axiom system
B 211
c 301
CL- 305
Classical 119
CNL- 305
D 138
D4 138
DB 211
first-order 369ff, 428
G 259
Intuitionistic 488
K 132
K4 138
KB 210
S4 138
S5 211
T 138
u 126
B

axiom system 211
consistency property 205
Interpolation Lemma 220
model 18
Model Existence Theorem 206
natural deduction system 213
prefixed tableau system 389ff
symmetric Gentzen system 216
tableau system 196, 203
bad 444
540

INDEX

Barcan formula 341, 347, 428
Barcan, R. 384
Becker's Rule 322
Becker, 0. 21, 22, 322
Beth Definability Theorem 106, 258, 378
Beth tableaus 459, 476
Beth, E. 4, 29, 105, 438, 458, 508, 509
Boolos, G. 244, 245
branch extension rules 29
branch modification rules 35
Brouwer, L. 22

c

131
axiom system 301
tableau system 271
C2 131
C4 tableau system 275
CL- axiom system 305
consistency property 281
Interpolation Lemma 297
model 268
Model Existence Theorem 282
natural deduction system 306ff
prefixed tableau system 389ff
symmetric Gentzen system 294
tableau system 280
Classical
axiom system 119
consistency property 48
Model Existence Theorem 49
natural deduction system 153ff
tableau system 29ff
closed 30
closed formula 338
closed frame 269
closed model 269
closed under signed subformulas 115
closed under substitution 144
CN4 tableau system 277
CNL- axiom system 305
consistency property 281
Interpolation Lemma 297
model 269
Model Existence Theorem 282
natural deduction system 306
prefixed tableau system 389ff

541

542

INDEX

symmetric Gentzen system 294
tableau system 280
Compactness Theorem 76, 209, 286, 372, 486
compatible 51, 354
Completeness Theorem 60, 72, 92, 122, 135, 139, 177, 188,
209, 211, 217, 228, 255, 286, 302, 366, 409, 416,
485' 494' 507
component 24
conjugation 26
consistency property
8
B 205
CL- 281
Classical 48
CNL- 281
D 50
D4 50
DB 205
first-order 354
first-order Intuitionistic 481
G 251
Intuitionistic 464
K 50
K4 50
KB 205
S4 50
S5 205, 226
T 50
constant domain 424, 428
constant domain logic 524
constant domain model 383
contradiction return rule 174
contradiction rules 158, 499
converse Barcan formula 347
Correctness Theorem 46, 72, 92, 134, 139, 184, 190, 209,
211, 251, 286, 301, 352, 400, 416, 426, 485
Craig Interpolation Lemma 93
Craig, W. 93, 105
creation of strict box rule 173, 185
Cresswell, M.
see Hughes & Cresswell
cut class 202, 278
cut rule 199
cut rule, restricted 202
cut, semi-analytic 203

INDEX

D

axiom·system
138
consistency property 50
Interpolation Lemma 93, 101, 102
model 19
Model Existence Theorem 51, 52
natural deduction system 174, 186
prefixed tableau system 389ff
symmetric Gentzen system 89
tableau completeness 60
tableau system 37, 43
D4 axiom system 138
consistency property 50
Interpolation Lemma 93, 101, 102
model 19
Model Existence Theorem 51, 52
natural deduction system 174, 186
prefixed tableau system 389ff
symmetric Gentzen system 89
tableau system 37, 43
D5 model 19
DB
axiom system 211
consistency property 205
Interpolation Lemma 220
model 19
Model Existence Theorem 206
natural deduction system 213
prefixed tableau system 389ff
symmetric Gentzen system 216
tableau system 196, 203
De Swart, H. 438
decidability 115, 259, 299, 410ff, 468
Deduction Theorem 121, 487, 490
Deduction Theorem, Arrow 78, 210, 256, 286, 373
Deduction Theorem, TUrnstyle 78, 210, 257, 287, 373
degree 13, 23
deontic model 19
Diophantus 347
downward saturated 360, 408
Dummett, M. 437
elimination rule 158, 499
explicit definition 105
efficient 103
Feys, R.

21' 398

543

544

INDEX

Fine, K. 383
finished 402
finite axiomatizability 141ff, 148ff, 229ff, 260
finite character 54
finitely generated 405
Finiteness Theorem 75, 209, 286, 372
first-order
augmented model 340
axiom system 369ff, 428
consistency property 354
frame 339
Interpolation Lemma 375, 377
Intuitionistic consistency property 481
Intuitionistic frame 470
Intuitionistic Interpolation Lemma 515
Intuitionistic model 470
Intuitionistic Model Existence Theorem 481
Intuitionistic symmetric Gentzen system 510ff
Intuitionistic tableau system 476ff
model 339
Model Existence Theorem 354
natural deduction system 367ff
prefixed tableau system 424, 433
tableau system 345ff
Fitch, F. 170, 388
Fitting, M. 5, 95, 149, 234, 240, 382, 383, 387, 388, 418,
436, 439, 459, 481, 495, 518, 521, 522, 523, 525
forces 16
forcing 523
formula 12, 334
formula, prefixed 388
formula, signed 23
formula, unsigned 27
frame 15
frame consequence 69
frame, first-order 339
frame, validity in 68
Fundamental Theorem 420, 436
G

axiom system 259
consistency property 251
Interpolation Lemma 257
model 19
Model Existence Theorem 251
natural deduction system 260
prefixed tableau system 389ff

INDEX

symmetric Gentzen system 257
tableau system 247
Gabbay, D. 93, 518, 525
general condition 392
Gentzen system, see sequent calculus
Gentzen tableaus 461, 479
Gentzen, G. 29, 81, 153, 460, 509
global assumption 70, 416
global assumption rule, natural deduction 177
globally satisfiable 74, 350
G6del, K. 21, 118, 124, 132, 241, 242, 244, 437, 518
good 445
G6rneman, s. 525
Hallden complete 298
Hallden, s. 298
Heath, T. 347
Henkin, L. 95
Heyting, A. 437
Hintikka, J. 29
Hughes & Cresswell 342, 384, 416
Hughes, G.
see Hughes & Cresswell
!-style natural deduction system 171, 213
idealizable 398
idealization 18
idealization based on normal worlds 267
identity condition 392
implicit definition 106
independence of Intuitionistic connectives 444
interpolation formula 93
Interpolation Lemma
B 220
CL- 297
CNL- 297
D 93 , 10 1 , 102
D4 93, 101' 102
DB 220
first-order 375, 377
first-order Intuitionistic 515
G 257
K 93, 101, 102
K4 93, 101, 102
KB 220
S4 93, 101, 102
S5 220, 240

545

546

INDEX

T93, 101,102
interpretation 16, 343
introduction rule 158, 499
Intuitionistic
axiom system 488
consistency property 464
frame 439
frame, first-order 470
model 440
Model Existence Theorem 465
natural deduction system 495ff
tableau system 453, 459ff
iteration rule 157
Jaskowski, s.
K

153

axiom system 132
consistency property 50
Interpolation Lemma 93, 101, 102
model 18
Model Existence Theorem 51, 52
natural deduction system 174, 186
prefixed tableau system 389ff
symmetric Gentzen system 89
tableau system 36, 43
K4
axiom system 138
consistency property 50
Interpolation Lemma 93, 101, 102
model 18
Model Existence Theorem 51, 52
natural deduction system 174, 186
prefixed tableau system 389ff
symmetric Gentzen system 89
tableau rules 43
tableau system 36
Kanger, S. 398
Kaplan, D. 6
KB
axiom system 210
consistency property 205
Interpolation Lemma 220
model 18
Model Existence Theorem 206
natural deduction system 213
prefixed tableau system 389ff
symmetric Gentzen system 216
tableau system 196, 203

INDEX

547

Keisler, H. 356
Kelley, J. 55
Kleene & Vesley 437
K6nig's Lemma 406
Kripke model 15
Kripke, S. 15, 22, 33, 141,264,265, 306, 317, 320, 321,
333. 341, 342, 380, 384, 437. 438, 495
L-Consistency property 50
L-satisfiable 44
L-satisfiable, global 74
L-satisfiable, local 74
Langford, C.
see Lewis & Langford
Lemmon, E. 131, 141, 264, 265, 269, 306, 317, 320, 321, 328
Lewis & Langford 21, 118, 321, 328
Lewis, c.
see Lewis & Langford
L6b, M. 243
local assumption 70, 416
local assumption rule, natural deduction 177
locally satisfiable 74, 350
Lopez-Escobar, E. 525
Lyndon Interpolation Theorem 101
Lyndon, R. 101

M see T
Matsumoto, K. 222
McKinsey & Tarski 518
McKinsey, J. 449
modal degree one 234
model 15
Model Existence Theorem
8
B 206
CL- 281, 282
Classical 49
CNL- 282
D 51
D4 51
DB 206
first-order 354
first-order Intuitionistic 481
G 251
Intuitionistic 465
K 51
K4 51
KB 206

548

model

INDEX

S4 51
S5 206, 227
T 51
augmented 265

B 18

CL- 268
CNL- 269
constant domain 383
D 19
D4 19
D5 19
DB 19
deontic 19
first-order 339
first-order augmented 340
first-order Intuitionistic 470
G 19
Intuitionistic 440
K 18
K4 18
KB 18
normal 266
regular 268
S4 18
S5 18
T 18
u 329
monotonicity condition 332, 339, 380, 434
Nadel, M. 439
natural deduction system
A-style 213
B 213
CL- 306ff
Classical 153
CNL- 306
D 174, 186
D4 174, 186
DB 213
first-order 367ff
G 260
I-style 213
Intuitionistic 495
K 174, 186
K4 174, 186

INDEX

KB 213
S4 174, 186
S5 213
T 174, 186
necessity-like 102
negative formula 452
negative occurrence 100
nest level 157
new parameter condition 356, 482
normal 262
normal form, conjunctive 234
normal form, disjunctive 234
normal logic 132, 313
normal model 266
normal world 265
open 30
operator, monotone 13
parameter 335
parameter substitution 356
polarity 100
positive 112
positive formula 452
positive occurrence 100
possible world 15
possible-like 101
Prawitz, D. 153, 441, 518
prefix 388
prefixed formula 388
prefixed tableau system 390
propositional variable 11
262
quasi-normal
quasi-normal logic 313
quasi-regular 263
quasi-regular logic 313
queer world 265
Quine, W. 234
Rasiowa & Sikorski 438
Rasiowa, H. 438
reflexivity on normal worlds 267
regular 263
regular formula 419, 451
regular logic 131, 313

549

550

INDEX

regular models 268
regular sequence 419
Repetition Rule 37
restricted cut rule 202
reverse condition 392
reverse rule 168, 504
Routely, R. 384
Rule BrJ 322
M (modalization) 125
MP (modus ponens) 119
necessitation 132, 320
RR (regularity) 127, 314
Becker's 322
contradiction 158, 499
contradiction return 174
creation of strict box 173, 185
cut 199
elimination 158, 499
global assumption 177
introduction 158, 499
iteration 157
local assumption 177
repetition 37
restricted cut 202
return 185
reverse 168, 504
strict iteration 172, 185, 499
S2 328
S3 328
S4
axiom system 138
consistency property 50
Interpolation Lemma 93, 101, 102
model 18
Model Existence Theorem 51, 52
natural deduction system 174, 186
prefixed tableau system 389ff
symmetric Gentzen system 89
tableau system 36, 43
S5
axiom system 211
consistency property 205, 226
Interpolation Lemma 220, 240
model 18
Model Existence Theorem 206, 227
natural deduction system 213
prefixed tableau system 389ff, 396

INDEX

symmetric Gentzen system 216
tableau system 196, 203, 225
satisfiability 463
satisfiable, globally 74, 350
satisfiable, locally 74, 350
Schumm, G. 241
SchUtte, K. 518
Scott,D. 4
section 359
Segerberg, K. 21, 22, 124, 131, 132, 142, 262, 269, 317
semi-analytic 219
semi-analytic cut 203
semi-analytic tableau 203
Semi-Replacement Theorem 129
sentence 338
sequent 65
sequent calculus 82, 508
simple extension 111
Skolem-Lowenheim Theorem 372, 487
Smorynski, C. 438
Smullyan, R. 5, 22, 29, 32, 95, 153, 356, 377, 401, 402,
418, 426, 436, 520
Soboci~ski, B. 21
Solovay, R. 244
Sonobe, 0. 192, 202, 240, 418
special formula 451
stable 524
strict iteration rule 172, 185, 499
subformula 13, 338
subformula principle 3, 191
substitution 337
substitution instance 142
symmetric Gentzen system
88
B 216
CL- 294
CNL- 294
D 89
D4 89
DB 216
first-order Intuitionistic 510ff
G 257
K 89
K4 89
KB 216
S4 89

551

552

INDEX

S5 216
T 89
symmetry on normal worlds 267
synthetic 192
systematic tableau 47, 402ff, 426
T

axiom system
138
consistency property 50
Interpolation Lemma 93, 101, 102
model 18
Model Existence Theorem 51
natural deduction system 174, 186
prefixed tableau system 389ff
symmetric Gentzen system 89
tableau system 36, 43
tableau system
B 196, 203
B prefixed 389ff
c 271
C4 275
CL- 280
CL- prefixed 389ff
Classical 29ff
CN 277
CN4 277
CNL- 280
CNL- prefixed 389ff
D 37, 43
D prefixed 389ff
D4 37, 43
D4 prefixed 389ff
DB 196, 203
DB prefixed 389ff
first-order 345ff
first-order Intuitionistic 476ff
first-order prefixed 424, 433
G 247
G prefixed 389ff
Intuitionistic 453, 459ff
K 36, 43
K prefixed 389ff
K4 36, 43
K4 prefixed 389ff
KB 196, 203
KB prefixed 389ff
S4 36, 43

INDEX

S4 prefixed 389ff
S5 196, 203, 225
S5 prefixed 389ff, 396
T 36, 43
T prefixed 389ff
u 330
tableau, global assumption rule 70
tableau, local assumption rule 70
tableau, semi-analytic 203
tableau, systematic 47, 402ff, 426
Thomason, R. 495
transitivity based on normal worlds 267
transitivity condition 392
Tukey's Lemma 54, 60
Turnstyle Deduction Theorem 78
U

axiom system 126
models 329
tableau system 330
uniform notation 9, 32, 41ff, 86, 162, 344, 450ff, 474
unique decomposition 12, 337
unrestricted 419
used 419
valid 16, 339
valid in a frame 68
valid under an interpretation 343
variant 91, 513
Veldman, W. 438
Von Wright, G. 21
Wajsberg, t1. 239, 449
Weaver, G. 222
Welaish, J. 222
Zorn's Lemma 60

553

SPECIAL NOTATION
(first occurrence)
Symbol

Page

Symbol

n-

15
15
15
15
15
15
15
23
23
24
24
25
25
26
42
48
65
66
78
83
115
131
132
138
138
138
138
138
138
138
138
142
203
210
210
211
211
211
265

<G,Q,R>
<G, Q, R, II->

..11'-

r*

G
Ill

<G,R>
<G, R, if->

T

F

0<

f3

v

lT

z

S/1
IC

---..

I=

o nx

s~

ro

c

Ko
Do
yO
40
D
T
K4
D4
S4
[.

.. ]

css)

B
KB
DB
B
S5
Q!

Page

265
265
V*
274
xn
287
lT*
293
4*0
304
B*o
304
304
N
L + {Z}
317
L( Z)
317
Ln
323
L(C,V,R)
334
L(C)
335
336
co
p
336
<tB,R,P>
339
<G , R , P , 11->
339
<G , Q, R, P , 11-> 340
344
~
344
6
crx
388

555

